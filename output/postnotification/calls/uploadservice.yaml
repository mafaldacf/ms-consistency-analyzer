(*UploadServiceImpl).ReadPostMedia(ctx context.Context, reqID int64, postID int64):
- SERVICE CALL @ ReadMedia >> (*postnotification.StorageServiceImpl).ReadMedia(ctx context.Context, reqID int64, postID int64) (postnotification.Media struct{PostID int64, MediaID int64, Content "HELLO WORLD!" untyped string}, error)

(*UploadServiceImpl).UploadPost(ctx context.Context, username string, text string):
- SERVICE CALL @ StoreMedia >> (*postnotification.MediaServiceImpl).StoreMedia(ctx context.Context, media postnotification.Media struct{PostID int64, MediaID int64, Content "HELLO WORLD!" untyped string}) error
- SERVICE CALL @ StorePostCache >> (*postnotification.StorageServiceImpl).StorePostCache(ctx context.Context, reqID int64, post postnotification.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification.Creator struct{Username "some username" string}, Creator postnotification.Creator struct{Username "some username" string}}) error
- SERVICE CALL @ StorePostNoSQL >> (*postnotification.StorageServiceImpl).StorePostNoSQL(ctx context.Context, reqID int64, post postnotification.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification.Creator struct{Username "some username" string}, Creator postnotification.Creator struct{Username "some username" string}}) error
- DATASTORE CALL @ notifications_queue >> Queue.Push(ctx context.Context, item interface{})
  (err, interface{})
- DATASTORE CALL @ timeline_cache >> Cache.Put(ctx context.Context, key string, value interface{}) interface{}

.NewAnalyticsServiceImpl(ctx context.Context, analyticsDb NoSQLDatabase, analyticsQueue Queue): []

.NewMediaServiceImpl(ctx context.Context, mediaDb NoSQLDatabase): []

.NewNotifyServiceImpl(ctx context.Context, storageService postnotification.StorageService, notificationsQueue Queue): []

.NewStorageServiceImpl(ctx context.Context, analyticsService postnotification.AnalyticsService, mediaService postnotification.MediaService, posts_cache Cache, postsDb NoSQLDatabase, analyticsQueue Queue)
:
 []

.NewUploadServiceImpl(ctx context.Context, storageService postnotification.StorageService, mediaService postnotification.MediaService, notificationsQueue Queue, timelineCache Cache)
:
 []
