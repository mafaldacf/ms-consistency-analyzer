(*MediaServiceImpl).ReadMedia(ctx context.Context, mediaID int64):
- DATASTORE CALL @ media_db >> NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*MediaServiceImpl).StoreMedia(ctx context.Context, media postnotification.Media struct{MediaID int64, Content string}):
- DATASTORE CALL @ media_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

.NewAnalyticsServiceImpl(ctx context.Context, analyticsDb NoSQLDatabase, analyticsQueue Queue): []

.NewMediaServiceImpl(ctx context.Context, mediaDb NoSQLDatabase): []

.NewNotifyServiceImpl(ctx context.Context, storageService postnotification.StorageService, notificationsQueue Queue): []

.NewStorageServiceImpl(ctx context.Context, analyticsService postnotification.AnalyticsService, mediaService postnotification.MediaService, posts_cache Cache, postsDb NoSQLDatabase, analyticsQueue Queue)
:
 []

.NewUploadServiceImpl(ctx context.Context, storageService postnotification.StorageService, mediaService postnotification.MediaService, notificationsQueue Queue, timelineCache Cache)
:
 []
