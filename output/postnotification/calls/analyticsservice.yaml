(*AnalyticsServiceImpl).ReadAnalytics(ctx context.Context, postID int64):
- DATASTORE CALL @ analytics_db >> NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*AnalyticsServiceImpl).Run(ctx context.Context):
- INTERNAL CALL >> (*postnotification.AnalyticsServiceImpl).workerThread(ctx context.Context)
  error

(*AnalyticsServiceImpl).handleMessage(ctx context.Context, message postnotification.TriggerAnalyticsMessage struct{PostID string})
:
	- DATASTORE CALL @ analytics_db >> NoSQLDatabase.InsertOne(ctx context.Context, document interface{}) interface{}

(*AnalyticsServiceImpl).workerThread(ctx context.Context):
- DATASTORE CALL @ analytics_queue >> Queue.Pop(ctx context.Context, item interface{})
  (err, interface{})
- INTERNAL CALL >> (*postnotification.AnalyticsServiceImpl).handleMessage(ctx context.Context, message postnotification.TriggerAnalyticsMessage struct{PostID string}) error

.NewAnalyticsServiceImpl(ctx context.Context, analyticsDb NoSQLDatabase, analyticsQueue Queue): []

.NewMediaServiceImpl(ctx context.Context, mediaDb NoSQLDatabase): []

.NewNotifyServiceImpl(ctx context.Context, storageService postnotification.StorageService, notificationsQueue Queue): []

.NewStorageServiceImpl(ctx context.Context, analyticsService postnotification.AnalyticsService, mediaService postnotification.MediaService, posts_cache Cache, postsDb NoSQLDatabase, analyticsQueue Queue)
:
 []

.NewUploadServiceImpl(ctx context.Context, storageService postnotification.StorageService, mediaService postnotification.MediaService, notificationsQueue Queue, timelineCache Cache)
:
 []
