(*MediaServiceImpl).ReadMedia(ctx context.Context, mediaID int64):
  block 5 (IfDone):
  - ' depth 0 (PointerObject PointerType) s (*postnotification.MediaServiceImpl struct{mediaDb
    NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) postnotification.MediaServiceImpl struct{mediaDb NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) mediaDb NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) mediaDb NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - _ depth 1 (Reference UserType) ref <ctx context.Context> @ StorageService
  - __ depth 2 (Reference UserType) ref <ctx context.Context> @ UploadService
  - ' depth 0 (BasicObject BasicType) mediaID int64 --> r-tainted 1x: read(media_db._.mediaid)'
  - '_ depth 1 (Reference FieldType) ref <mediaID int64> @ StorageService --> r-tainted
    1x: read(media_db._.mediaid)'
  - '__ depth 2 (BasicObject BasicType) PostID int64 --> r-tainted 1x: read(media_db._.mediaid)'
  - ' depth 0 (StructObject UserType) media postnotification.Media struct{MediaID
    int64, Content string} --> r-tainted 1x: read(media_db.Media)'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = media, collection = media}'
  - ' depth 0 (InterfaceObject UserType) err .error'
  - ' depth 0 (SliceObject UserType) query primitive.D'
  - _ depth 1 (StructObject StructType) struct{Key "mediaid" string, Value int64}
  - __ depth 2 (FieldObject FieldType) Key "mediaid" string
  - ___ depth 3 (BasicObject BasicType) "mediaid" string
  - __ depth 2 (FieldObject FieldType) Value int64
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database
    = media, collection = media} --> r-tainted 1x: read(media_db._)'
  - ' depth 0 (InterfaceObject UserType) err .error'
  - ' depth 0 (BasicObject BasicType) _ bool'
  - ' depth 0 (InterfaceObject UserType) err .error'

(*MediaServiceImpl).StoreMedia(ctx context.Context, media postnotification.Media struct{MediaID int64, Content string}):
  block 2 (IfDone):
  - ' depth 0 (PointerObject PointerType) s (*postnotification.MediaServiceImpl struct{mediaDb
    NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) postnotification.MediaServiceImpl struct{mediaDb NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) mediaDb NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) mediaDb NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - _ depth 1 (Reference UserType) ref <ctx context.Context> @ UploadService
  - ' depth 0 (StructObject UserType) media postnotification.Media struct{MediaID
    int64, Content string} --> w-tainted 1x: write(media_db.Media)'
  - '_ depth 1 (Reference UserType) ref <media postnotification.Media struct{Content
    "HELLO WORLD!" untyped string, Content string}> @ UploadService --> w-tainted
    1x: write(media_db.Media)'
  - '__ depth 2 (FieldObject FieldType) Content "HELLO WORLD!" untyped string -->
    w-tainted 1x: write(media_db.Media.Content)'
  - '___ depth 3 (BasicObject BasicType) HELLO_WORLD_CONST "HELLO WORLD!" untyped
    string --> w-tainted 1x: write(media_db.Media.Content)'
  - '_ depth 1 (FieldObject FieldType) MediaID int64 --> w-tainted 1x: write(media_db.Media.MediaID)'
  - '__ depth 2 (BasicObject BasicType) mediaID int64 --> w-tainted 1x: write(media_db.Media.MediaID)'
  - ' depth 0 (BasicObject BasicType) mediaID int64 --> w-tainted 1x: write(media_db.Media.MediaID)'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = media, collection = media}'
  - ' depth 0 (InterfaceObject UserType) err .error'

.NewAnalyticsServiceImpl(ctx context.Context, analyticsDb NoSQLDatabase, analyticsQueue Queue):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analyticsDb NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analyticsQueue Queue'
  - ' depth 0 (PointerObject PointerType) n (*postnotification.AnalyticsServiceImpl
    struct{analyticsDb NoSQLDatabase, analyticsQueue Queue, numWorkers 4 int})'
  - _ depth 1 (StructObject UserType) postnotification.AnalyticsServiceImpl struct{analyticsDb NoSQLDatabase, analyticsQueue Queue, numWorkers 4 int}
  - __ depth 2 (FieldObject FieldType) analyticsDb NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) analyticsQueue Queue
  - __ depth 2 (FieldObject FieldType) numWorkers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int

.NewMediaServiceImpl(ctx context.Context, mediaDb NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) mediaDb NoSQLDatabase'
  - ' depth 0 (PointerObject PointerType) s (*postnotification.MediaServiceImpl struct{mediaDb
    NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) postnotification.MediaServiceImpl struct{mediaDb NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) mediaDb NoSQLDatabase

.NewNotifyServiceImpl(ctx context.Context, storageService postnotification.StorageService, notificationsQueue Queue):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) storageService postnotification.StorageService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) notificationsQueue Queue'
  - ' depth 0 (PointerObject PointerType) n (*postnotification.NotifyServiceImpl struct{storageService
    postnotification.StorageService, notificationsQueue Queue, num_workers 4 int})'
  - _ depth 1 (StructObject UserType) postnotification.NotifyServiceImpl struct{storageService postnotification.StorageService, notificationsQueue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) notificationsQueue Queue
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - __ depth 2 (FieldObject FieldType) storageService postnotification.StorageService

.NewStorageServiceImpl(ctx context.Context, analyticsService postnotification.AnalyticsService, mediaService postnotification.MediaService, posts_cache Cache, postsDb NoSQLDatabase, analyticsQueue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) analyticsService postnotification.AnalyticsService'
  - ' depth 0 (ServiceObject ServiceType) mediaService postnotification.MediaService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) posts_cache Cache'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) postsDb NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analyticsQueue Queue'
  - ' depth 0 (PointerObject PointerType) s (*postnotification.StorageServiceImpl
    struct{analyticsService postnotification.AnalyticsService, mediaService postnotification.MediaService,
    posts_cache Cache, postsDb NoSQLDatabase, analyticsQueue Queue})'
  - _ depth 1 (StructObject UserType) postnotification.StorageServiceImpl struct{analyticsService postnotification.AnalyticsService, mediaService postnotification.MediaService, posts_cache Cache, postsDb NoSQLDatabase, analyticsQueue Queue}
  - __ depth 2 (FieldObject FieldType) analyticsQueue Queue
  - __ depth 2 (FieldObject FieldType) analyticsService postnotification.AnalyticsService
  - __ depth 2 (FieldObject FieldType) mediaService postnotification.MediaService
  - __ depth 2 (FieldObject FieldType) postsDb NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) posts_cache Cache

.NewUploadServiceImpl(ctx context.Context, storageService postnotification.StorageService, mediaService postnotification.MediaService, notificationsQueue Queue, timelineCache Cache)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) storageService postnotification.StorageService'
  - ' depth 0 (ServiceObject ServiceType) mediaService postnotification.MediaService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) notificationsQueue Queue'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) timelineCache Cache'
