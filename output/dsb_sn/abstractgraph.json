[
  {
    "method": "(*Wrk2APIServiceImpl).Register(ctx context.Context, firstName string, lastName string, username string, password string, userId int64)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*UserServiceImpl).RegisterUserWithId(ctx context.Context, reqID int64, firstName string, lastName string, username string, password string, userID int64)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "slice": {
                  "name": "query",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "struct": {
                      "name": "",
                      "type": "struct{ string,  \"username\" string,  string}"
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "blueprint_backend": {
                  "name": "res",
                  "type": "NoSQLCursor {database = user, collection = user}"
                },
                "target_variable": {
                  "pointer": {
                    "name": "user",
                    "type": "(*socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string})"
                  },
                  "ptr_to": {
                    "struct": {
                      "name": "user",
                      "type": "socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}"
                    }
                  }
                }
              },
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          },
          {
            "method": "NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{})",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "struct": {
                  "name": "user",
                  "type": "socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}"
                },
                "struct_fields": {
                  "FirstName": {
                    "field": {
                      "name": "FirstName",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "firstName",
                        "type": "string",
                        "refs": [
                          {
                            "name": "firstName",
                            "creator": "Wrk2APIService"
                          }
                        ]
                      }
                    }
                  },
                  "LastName": {
                    "field": {
                      "name": "LastName",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "lastName",
                        "type": "string",
                        "refs": [
                          {
                            "name": "lastName",
                            "creator": "Wrk2APIService"
                          }
                        ]
                      }
                    }
                  },
                  "PwdHashed": {
                    "field": {
                      "name": "PwdHashed",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "hashed_pwd",
                        "type": "string",
                        "refs": [
                          {
                            "name": "",
                            "creator": "hashPwd"
                          }
                        ]
                      }
                    }
                  },
                  "Salt": {
                    "field": {
                      "name": "Salt",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "salt",
                        "type": "string",
                        "refs": [
                          {
                            "name": "",
                            "creator": "genRandomStr"
                          }
                        ]
                      }
                    }
                  },
                  "UserID": {
                    "field": {
                      "name": "UserID",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "userID",
                        "type": "int64",
                        "refs": [
                          {
                            "name": "userId",
                            "creator": "Wrk2APIService"
                          }
                        ]
                      }
                    }
                  },
                  "Username": {
                    "field": {
                      "name": "Username",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "username",
                        "type": "string",
                        "refs": [
                          {
                            "name": "username",
                            "creator": "Wrk2APIService"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          },
          {
            "method": "(*SocialGraphServiceImpl).InsertUser(ctx context.Context, reqID int64, userID int64)",
            "depth": 2,
            "caller": "UserService",
            "edges": [
              {
                "method": "NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{})",
                "depth": 3,
                "caller": "SocialGraphService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "UserService"
                        }
                      ]
                    }
                  },
                  {
                    "struct": {
                      "name": "user",
                      "type": "socialnetwork.UserInfo struct{UserID int64, Followers []socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}, Followees []socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}}"
                    },
                    "struct_fields": {
                      "Followees": {
                        "field": {
                          "name": "Followees",
                          "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                        },
                        "wrapped_variable": {
                          "array": {
                            "name": "",
                            "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                          }
                        }
                      },
                      "Followers": {
                        "field": {
                          "name": "Followers",
                          "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                        },
                        "wrapped_variable": {
                          "array": {
                            "name": "",
                            "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                          }
                        }
                      },
                      "UserID": {
                        "field": {
                          "name": "UserID",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "userID",
                            "type": "int64",
                            "refs": [
                              {
                                "name": "userID",
                                "creator": "UserService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "social_db"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "userID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "userId",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "",
                  "type": ".error",
                  "refs": [
                    {
                      "name": "",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              }
            ]
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "firstName",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "lastName",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "username",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "password",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "userId",
              "type": "int64"
            }
          }
        ],
        "returns": [
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "UserService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "firstName",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "lastName",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "password",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "userId",
          "type": "int64"
        }
      }
    ]
  },
  {
    "method": "(*Wrk2APIServiceImpl).ComposePost(ctx context.Context, userId int64, username string, post_type int64, text string, media_types []string, media_ids []int64)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*ComposePostServiceImpl).ComposePost(ctx context.Context, reqID int64, username string, userID int64, text string, mediaIDs []int64, mediaTypes []string, postType int64)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "(*TextServiceImpl).ComposeText(ctx context.Context, reqID int64, text string)",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": [
              {
                "method": "(*UrlShortenServiceImpl).ComposeUrls(ctx context.Context, reqID int64, urls []string)",
                "depth": 3,
                "caller": "TextService",
                "edges": [
                  {
                    "method": "NoSQLDatabase.NoSQLCollection.InsertMany(ctx context.Context, key []interface{})",
                    "depth": 4,
                    "caller": "UrlShortenService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "TextService"
                            }
                          ]
                        }
                      },
                      {
                        "array": {
                          "name": "target_url_docs",
                          "type": "[]interface{}"
                        },
                        "array_elems": [
                          {
                            "struct": {
                              "name": "target_url",
                              "type": "socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}"
                            },
                            "struct_fields": {
                              "ExpandedUrl": {
                                "field": {
                                  "name": "ExpandedUrl",
                                  "type": "string"
                                },
                                "wrapped_variable": {
                                  "basic": {
                                    "name": "url",
                                    "type": "string"
                                  }
                                }
                              },
                              "ShortenedUrl": {
                                "field": {
                                  "name": "ShortenedUrl",
                                  "type": "string"
                                },
                                "wrapped_variable": {
                                  "basic": {
                                    "name": "shortened_url",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "returns": [
                      {
                        "interface": {
                          "name": "err",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "urlshorten_db"
                  }
                ],
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "reqID",
                      "type": "int64",
                      "refs": [
                        {
                          "name": "reqID",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "url_strings",
                      "type": "[]string"
                    }
                  }
                ],
                "returns": [
                  {
                    "slice": {
                      "name": "urls",
                      "type": "[]socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}"
                    }
                  },
                  {
                    "interface": {
                      "name": "err1",
                      "type": ".error"
                    }
                  }
                ]
              },
              {
                "method": "(*UserMentionServiceImpl).ComposeUserMentions(ctx context.Context, reqID int64, usernames []string)",
                "depth": 3,
                "caller": "TextService",
                "edges": [
                  {
                    "method": "Cache.Mget(ctx context.Context, key []string, key []interface{})",
                    "depth": 4,
                    "caller": "UserMentionService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "TextService"
                            }
                          ]
                        }
                      },
                      {
                        "array": {
                          "name": "keys",
                          "type": "[]string"
                        },
                        "array_elems": [
                          {
                            "basic": {
                              "name": "",
                              "type": ":UserID "
                            }
                          }
                        ]
                      },
                      {
                        "array": {
                          "name": "retvals",
                          "type": "[]interface{}"
                        },
                        "array_elems": [
                          {
                            "pointer": {
                              "name": "*",
                              "type": "(*int64)"
                            },
                            "ptr_to": {
                              "basic": {
                                "name": "*",
                                "type": "int64"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "returns": [
                      {
                        "interface": {
                          "name": "",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "user_cache"
                  },
                  {
                    "method": "NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                    "depth": 4,
                    "caller": "UserMentionService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "TextService"
                            }
                          ]
                        }
                      },
                      {
                        "slice": {
                          "name": "query_d",
                          "type": "primitive.D",
                          "refs": [
                            {
                              "name": "",
                              "creator": "parseNoSQLDBQuery"
                            }
                          ]
                        }
                      }
                    ],
                    "returns": [
                      {
                        "blueprint_backend": {
                          "name": "vals",
                          "type": "NoSQLCursor {database = user, collection = user}"
                        },
                        "target_variable": {
                          "pointer": {
                            "name": "new_user_mentions",
                            "type": "(*[]socialnetwork.UserMention struct{UserID int64, Username string})"
                          },
                          "ptr_to": {
                            "array": {
                              "name": "new_user_mentions",
                              "type": "[]socialnetwork.UserMention struct{UserID int64, Username string}"
                            }
                          }
                        }
                      },
                      {
                        "interface": {
                          "name": "err",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "user_db"
                  }
                ],
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "reqID",
                      "type": "int64",
                      "refs": [
                        {
                          "name": "reqID",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "array": {
                      "name": "usernames",
                      "type": "[]string"
                    },
                    "array_elems": [
                      {
                        "basic": {
                          "name": "m",
                          "type": "string"
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "slice": {
                      "name": "user_mentions",
                      "type": "[]socialnetwork.UserMention struct{UserID int64, Username string}"
                    }
                  },
                  {
                    "interface": {
                      "name": "err2",
                      "type": ".error"
                    }
                  }
                ]
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "text",
                  "type": "string",
                  "refs": [
                    {
                      "name": "text",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "up_text",
                  "type": "string"
                }
              },
              {
                "slice": {
                  "name": "usermentions",
                  "type": "[]socialnetwork.UserMention struct{UserID int64, Username string}"
                }
              },
              {
                "slice": {
                  "name": "urls",
                  "type": "[]socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}"
                }
              },
              {
                "interface": {
                  "name": "err1",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*MediaServiceImpl).ComposeMedia(ctx context.Context, reqID int64, mediaTypes []string, mediaIds []int64)",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": null,
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "array": {
                  "name": "mediaTypes",
                  "type": "[]string",
                  "refs": [
                    {
                      "name": "media_types",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "array": {
                  "name": "mediaIDs",
                  "type": "[]int64",
                  "refs": [
                    {
                      "name": "media_ids",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "slice": {
                  "name": "medias",
                  "type": "[]socialnetwork.Media struct{MediaID int64, MediaType string}",
                  "refs": [
                    {
                      "name": "medias",
                      "creator": "MediaService"
                    }
                  ]
                }
              },
              {
                "interface": {
                  "name": "err2",
                  "type": ".error",
                  "refs": [
                    {
                      "name": "",
                      "creator": "MediaService"
                    }
                  ]
                }
              }
            ]
          },
          {
            "method": "(*UniqueIdServiceImpl).ComposeUniqueId(ctx context.Context, reqID int64, postType int64)",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": null,
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "postType",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "post_type",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "uniqueID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "post_id",
                      "creator": "UniqueIdService"
                    }
                  ]
                }
              },
              {
                "interface": {
                  "name": "err3",
                  "type": ".error",
                  "refs": [
                    {
                      "name": "",
                      "creator": "UniqueIdService"
                    }
                  ]
                }
              }
            ]
          },
          {
            "method": "(*UserServiceImpl).ComposeCreatorWithUserId(ctx context.Context, reqID int64, userID int64, username string)",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": null,
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "userID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "userId",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "username",
                  "type": "string",
                  "refs": [
                    {
                      "name": "username",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "struct": {
                  "name": "creator",
                  "type": "socialnetwork.Creator struct{UserID int64, Username string}",
                  "refs": [
                    {
                      "name": "",
                      "creator": "UserService"
                    }
                  ]
                }
              },
              {
                "interface": {
                  "name": "err4",
                  "type": ".error",
                  "refs": [
                    {
                      "name": "",
                      "creator": "UserService"
                    }
                  ]
                }
              }
            ]
          },
          {
            "method": "(*PostStorageServiceImpl).StorePost(ctx context.Context, reqID int64, post socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64})",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": [
              {
                "method": "NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{})",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "struct": {
                      "name": "post",
                      "type": "socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}",
                      "refs": [
                        {
                          "name": "post",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_db"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "struct": {
                  "name": "post",
                  "type": "socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                },
                "struct_fields": {
                  "Creator": {
                    "field": {
                      "name": "Creator",
                      "type": "socialnetwork.Creator struct{UserID int64, Username string}"
                    },
                    "wrapped_variable": {
                      "struct": {
                        "name": "creator",
                        "type": "socialnetwork.Creator struct{UserID int64, Username string}"
                      }
                    }
                  },
                  "Medias": {
                    "field": {
                      "name": "Medias",
                      "type": "[]socialnetwork.Media struct{MediaID int64, MediaType string}"
                    },
                    "wrapped_variable": {
                      "array": {
                        "name": "medias",
                        "type": "[]socialnetwork.Media struct{MediaID int64, MediaType string}"
                      }
                    }
                  },
                  "PostID": {
                    "field": {
                      "name": "PostID",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "uniqueID",
                        "type": "int64"
                      }
                    }
                  },
                  "PostType": {
                    "field": {
                      "name": "PostType",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "postType",
                        "type": "int64",
                        "refs": [
                          {
                            "name": "post_type",
                            "creator": "Wrk2APIService"
                          }
                        ]
                      }
                    }
                  },
                  "ReqID": {
                    "field": {
                      "name": "ReqID",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "reqID",
                        "type": "int64",
                        "refs": [
                          {
                            "name": "reqID",
                            "creator": "Wrk2APIService"
                          }
                        ]
                      }
                    }
                  },
                  "Text": {
                    "field": {
                      "name": "Text",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "up_text",
                        "type": "string"
                      }
                    }
                  },
                  "Urls": {
                    "field": {
                      "name": "Urls",
                      "type": "[]socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}"
                    },
                    "wrapped_variable": {
                      "array": {
                        "name": "urls",
                        "type": "[]socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}"
                      }
                    }
                  },
                  "UserMentions": {
                    "field": {
                      "name": "UserMentions",
                      "type": "[]socialnetwork.UserMention struct{UserID int64, Username string}"
                    },
                    "wrapped_variable": {
                      "array": {
                        "name": "usermentions",
                        "type": "[]socialnetwork.UserMention struct{UserID int64, Username string}"
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err1",
                  "type": ".error",
                  "refs": [
                    {
                      "name": "",
                      "creator": "PostStorageService"
                    }
                  ]
                }
              }
            ]
          },
          {
            "method": "(*UserTimelineServiceImpl).WriteUserTimeline(ctx context.Context, reqID int64, postID int64, userID int64, timestamp int64)",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": [
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "struct": {
                          "name": "",
                          "type": "struct{ int64,  \"userid\" string,  int64}"
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "results",
                      "type": "NoSQLCursor {database = usertimeline, collection = usertimeline}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "userPosts",
                        "type": "(*[]socialnetwork.UserPosts struct{UserID int64, Posts []socialnetwork.PostInfo struct{PostID int64, Timestamp int64}})"
                      },
                      "ptr_to": {
                        "array": {
                          "name": "userPosts",
                          "type": "[]socialnetwork.UserPosts struct{UserID int64, Posts []socialnetwork.PostInfo struct{PostID int64, Timestamp int64}}"
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "usertimeline_db"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{})",
                "depth": 3,
                "caller": "UserTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "struct": {
                      "name": "userPosts",
                      "type": "socialnetwork.UserPosts struct{UserID int64, Posts []socialnetwork.PostInfo struct{PostID int64, Timestamp int64}}"
                    },
                    "struct_fields": {
                      "Posts": {
                        "field": {
                          "name": "Posts",
                          "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                        },
                        "wrapped_variable": {
                          "array": {
                            "name": "",
                            "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                          },
                          "array_elems": [
                            {
                              "struct": {
                                "name": "",
                                "type": "socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                              },
                              "struct_fields": {
                                "PostID": {
                                  "field": {
                                    "name": "PostID",
                                    "type": "int64"
                                  },
                                  "wrapped_variable": {
                                    "basic": {
                                      "name": "postID",
                                      "type": "int64",
                                      "refs": [
                                        {
                                          "name": "uniqueID",
                                          "creator": "ComposePostService"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "Timestamp": {
                                  "field": {
                                    "name": "Timestamp",
                                    "type": "int64"
                                  },
                                  "wrapped_variable": {
                                    "basic": {
                                      "name": "timestamp",
                                      "type": "int64",
                                      "refs": [
                                        {
                                          "name": "timestamp",
                                          "creator": "ComposePostService"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "UserID": {
                        "field": {
                          "name": "UserID",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "userID",
                            "type": "int64",
                            "refs": [
                              {
                                "name": "userID",
                                "creator": "ComposePostService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "usertimeline_db"
              },
              {
                "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "userIDStr",
                      "type": "string"
                    }
                  },
                  {
                    "pointer": {
                      "name": "postInfo",
                      "type": "(*[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64})"
                    },
                    "ptr_to": {
                      "array": {
                        "name": "postInfo",
                        "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                      },
                      "array_elems": [
                        {
                          "struct": {
                            "name": "",
                            "type": "socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                          },
                          "struct_fields": {
                            "PostID": {
                              "field": {
                                "name": "PostID",
                                "type": "int64"
                              },
                              "wrapped_variable": {
                                "basic": {
                                  "name": "postID",
                                  "type": "int64",
                                  "refs": [
                                    {
                                      "name": "uniqueID",
                                      "creator": "ComposePostService"
                                    }
                                  ]
                                }
                              }
                            },
                            "Timestamp": {
                              "field": {
                                "name": "Timestamp",
                                "type": "int64"
                              },
                              "wrapped_variable": {
                                "basic": {
                                  "name": "timestamp",
                                  "type": "int64",
                                  "refs": [
                                    {
                                      "name": "timestamp",
                                      "creator": "ComposePostService"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "_",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "usertimeline_cache"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "userIDStr",
                      "type": "string"
                    }
                  },
                  {
                    "array": {
                      "name": "postInfo",
                      "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                    },
                    "array_elems": [
                      {
                        "struct": {
                          "name": "",
                          "type": "socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                        },
                        "struct_fields": {
                          "PostID": {
                            "field": {
                              "name": "PostID",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "postID",
                                "type": "int64"
                              }
                            }
                          },
                          "Timestamp": {
                            "field": {
                              "name": "Timestamp",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "timestamp",
                                "type": "int64"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "usertimeline_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.UpdateMany(ctx context.Context, filter bson.D, update bson.D)",
                "depth": 3,
                "caller": "UserTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "struct": {
                          "name": "",
                          "type": "struct{ int64,  \"userid\" string,  int64}"
                        }
                      }
                    ]
                  },
                  {
                    "slice": {
                      "name": "update_d",
                      "type": "primitive.D",
                      "refs": [
                        {
                          "name": "",
                          "creator": "parseNoSQLDBQuery"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "_",
                      "type": "int"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "usertimeline_db"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "uniqueID",
                  "type": "int64"
                }
              },
              {
                "basic": {
                  "name": "userID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "userId",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "timestamp",
                  "type": "int64"
                }
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err2",
                  "type": ".error",
                  "refs": [
                    {
                      "name": "",
                      "creator": "UserTimelineService"
                    }
                  ]
                }
              }
            ]
          },
          {
            "method": "(*HomeTimelineServiceImpl).WriteHomeTimeline(ctx context.Context, reqID int64, postID int64, userID int64, timestamp int64, userMentionIDs []int64)",
            "depth": 2,
            "caller": "ComposePostService",
            "edges": [
              {
                "method": "(*SocialGraphServiceImpl).GetFollowers(ctx context.Context, reqID int64, userID int64)",
                "depth": 3,
                "caller": "HomeTimelineService",
                "edges": [
                  {
                    "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                    "depth": 4,
                    "caller": "SocialGraphService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "HomeTimelineService"
                            }
                          ]
                        }
                      },
                      {
                        "basic": {
                          "name": "",
                          "type": ":followers "
                        }
                      },
                      {
                        "pointer": {
                          "name": "followerInfos",
                          "type": "(*[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64})"
                        },
                        "ptr_to": {
                          "array": {
                            "name": "followerInfos",
                            "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                          }
                        }
                      }
                    ],
                    "returns": [
                      {
                        "basic": {
                          "name": "exists",
                          "type": "bool"
                        }
                      },
                      {
                        "interface": {
                          "name": "err",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "social_cache"
                  },
                  {
                    "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
                    "depth": 4,
                    "caller": "SocialGraphService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "HomeTimelineService"
                            }
                          ]
                        }
                      },
                      {
                        "slice": {
                          "name": "query_d",
                          "type": "primitive.D",
                          "refs": [
                            {
                              "name": "",
                              "creator": "parseNoSQLDBQuery"
                            }
                          ]
                        }
                      }
                    ],
                    "returns": [
                      {
                        "blueprint_backend": {
                          "name": "val",
                          "type": "NoSQLCursor {database = social-graph, collection = social-graph}"
                        },
                        "target_variable": {
                          "pointer": {
                            "name": "userInfo",
                            "type": "(*socialnetwork.UserInfo struct{UserID int64, Followers []socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}, Followees []socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}})"
                          },
                          "ptr_to": {
                            "struct": {
                              "name": "userInfo",
                              "type": "socialnetwork.UserInfo struct{UserID int64, Followers []socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}, Followees []socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}}"
                            },
                            "struct_fields": {
                              "Followers": {
                                "field": {
                                  "name": "Followers",
                                  "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                                },
                                "wrapped_variable": {
                                  "slice": {
                                    "name": "Followers",
                                    "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "interface": {
                          "name": "err",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "social_db"
                  },
                  {
                    "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                    "depth": 4,
                    "caller": "SocialGraphService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "HomeTimelineService"
                            }
                          ]
                        }
                      },
                      {
                        "basic": {
                          "name": "",
                          "type": ":followers "
                        }
                      },
                      {
                        "slice": {
                          "name": "Followers",
                          "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                        }
                      }
                    ],
                    "returns": [
                      {
                        "interface": {
                          "name": "err",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "social_cache"
                  }
                ],
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "reqID",
                      "type": "int64",
                      "refs": [
                        {
                          "name": "reqID",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "userID",
                      "type": "int64",
                      "refs": [
                        {
                          "name": "userID",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "slice": {
                      "name": "followers",
                      "type": "[]int64"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ]
              },
              {
                "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "HomeTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "id_str",
                      "type": "string"
                    }
                  },
                  {
                    "pointer": {
                      "name": "posts",
                      "type": "(*[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64})"
                    },
                    "ptr_to": {
                      "array": {
                        "name": "posts",
                        "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                      },
                      "array_elems": [
                        {
                          "struct": {
                            "name": "",
                            "type": "socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                          },
                          "struct_fields": {
                            "PostID": {
                              "field": {
                                "name": "PostID",
                                "type": "int64"
                              },
                              "wrapped_variable": {
                                "basic": {
                                  "name": "postID",
                                  "type": "int64",
                                  "refs": [
                                    {
                                      "name": "uniqueID",
                                      "creator": "ComposePostService"
                                    }
                                  ]
                                }
                              }
                            },
                            "Timestamp": {
                              "field": {
                                "name": "Timestamp",
                                "type": "int64"
                              },
                              "wrapped_variable": {
                                "basic": {
                                  "name": "timestamp",
                                  "type": "int64",
                                  "refs": [
                                    {
                                      "name": "timestamp",
                                      "creator": "ComposePostService"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "_",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "hometimeline_cache"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "HomeTimelineService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "ComposePostService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "id_str",
                      "type": "string"
                    }
                  },
                  {
                    "array": {
                      "name": "posts",
                      "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                    },
                    "array_elems": [
                      {
                        "struct": {
                          "name": "",
                          "type": "socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                        },
                        "struct_fields": {
                          "PostID": {
                            "field": {
                              "name": "PostID",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "postID",
                                "type": "int64"
                              }
                            }
                          },
                          "Timestamp": {
                            "field": {
                              "name": "Timestamp",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "timestamp",
                                "type": "int64"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "hometimeline_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "uniqueID",
                  "type": "int64"
                }
              },
              {
                "basic": {
                  "name": "userID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "userId",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "timestamp",
                  "type": "int64"
                }
              },
              {
                "array": {
                  "name": "usermentionIds",
                  "type": "[]int64"
                },
                "array_elems": [
                  {
                    "basic": {
                      "name": "UserID",
                      "type": "int64"
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err3",
                  "type": ".error"
                }
              }
            ]
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "username",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "userId",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "text",
              "type": "string"
            }
          },
          {
            "array": {
              "name": "media_ids",
              "type": "[]int64"
            }
          },
          {
            "array": {
              "name": "media_types",
              "type": "[]string"
            }
          },
          {
            "basic": {
              "name": "post_type",
              "type": "int64"
            }
          }
        ],
        "returns": [
          {
            "basic": {
              "name": "",
              "type": "int64",
              "refs": [
                {
                  "name": "uniqueID",
                  "creator": "ComposePostService"
                }
              ]
            }
          },
          {
            "slice": {
              "name": "",
              "type": "[]int64",
              "refs": [
                {
                  "name": "usermentionIds",
                  "creator": "ComposePostService"
                }
              ]
            }
          },
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "err3",
                  "creator": "ComposePostService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "userId",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "post_type",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "text",
          "type": "string"
        }
      },
      {
        "array": {
          "name": "media_types",
          "type": "[]string"
        }
      },
      {
        "array": {
          "name": "media_ids",
          "type": "[]int64"
        }
      }
    ]
  },
  {
    "method": "(*Wrk2APIServiceImpl).ReadHomeTimeline(ctx context.Context, userId int64, start int64, stop int64)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*HomeTimelineServiceImpl).ReadHomeTimeline(ctx context.Context, reqID int64, userID int64, start int64, stop int64)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "HomeTimelineService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "userIDStr",
                  "type": "string"
                }
              },
              {
                "pointer": {
                  "name": "postInfos",
                  "type": "(*[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "postInfos",
                    "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "_",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "hometimeline_cache"
          },
          {
            "method": "(*PostStorageServiceImpl).ReadPosts(ctx context.Context, reqID int64, postIDs []int64)",
            "depth": 2,
            "caller": "HomeTimelineService",
            "edges": [
              {
                "method": "Cache.Mget(ctx context.Context, key []string, key []interface{})",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "HomeTimelineService"
                        },
                        {
                          "name": "ctx",
                          "creator": "UserTimelineService"
                        }
                      ]
                    }
                  },
                  {
                    "array": {
                      "name": "keys",
                      "type": "[]string"
                    },
                    "array_elems": [
                      {
                        "basic": {
                          "name": "",
                          "type": "string"
                        }
                      }
                    ]
                  },
                  {
                    "array": {
                      "name": "retvals",
                      "type": "[]interface{}"
                    },
                    "array_elems": [
                      {
                        "pointer": {
                          "name": "*",
                          "type": "(*socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64})"
                        },
                        "ptr_to": {
                          "struct": {
                            "name": "*",
                            "type": "socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "HomeTimelineService"
                        },
                        {
                          "name": "ctx",
                          "creator": "UserTimelineService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query_d",
                      "type": "primitive.D",
                      "refs": [
                        {
                          "name": "",
                          "creator": "parseNoSQLDBQuery"
                        },
                        {
                          "name": "",
                          "creator": "parseNoSQLDBQuery"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "vals",
                      "type": "NoSQLCursor {database = post, collection = post}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "new_posts",
                        "type": "(*[]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64})"
                      },
                      "ptr_to": {
                        "array": {
                          "name": "new_posts",
                          "type": "[]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_db"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "HomeTimelineService"
                        },
                        {
                          "name": "ctx",
                          "creator": "UserTimelineService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": "string"
                    }
                  },
                  {
                    "struct": {
                      "name": "new_post",
                      "type": "socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                    },
                    "struct_fields": {
                      "PostID": {
                        "field": {
                          "name": "PostID",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "PostID",
                            "type": "int64"
                          }
                        }
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "array": {
                  "name": "postIDs",
                  "type": "[]int64"
                },
                "array_elems": [
                  {
                    "basic": {
                      "name": "PostID",
                      "type": "int64"
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "slice": {
                  "name": "_",
                  "type": "[]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                }
              },
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ]
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "userId",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "start",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "stop",
              "type": "int64"
            }
          }
        ],
        "returns": [
          {
            "slice": {
              "name": "",
              "type": "[]int64",
              "refs": [
                {
                  "name": "postIDs",
                  "creator": "HomeTimelineService"
                }
              ]
            }
          },
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "HomeTimelineService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "userId",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "start",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "stop",
          "type": "int64"
        }
      }
    ]
  },
  {
    "method": "(*Wrk2APIServiceImpl).ReadUserTimeline(ctx context.Context, userId int64, start int64, stop int64)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*UserTimelineServiceImpl).ReadUserTimeline(ctx context.Context, reqID int64, userID int64, start int64, stop int64)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "UserTimelineService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "userIDStr",
                  "type": "string"
                }
              },
              {
                "pointer": {
                  "name": "post_infos",
                  "type": "(*[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "post_infos",
                    "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "exists",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "usertimeline_cache"
          },
          {
            "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "UserTimelineService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "slice": {
                  "name": "query_d",
                  "type": "primitive.D",
                  "refs": [
                    {
                      "name": "",
                      "creator": "parseNoSQLDBQuery"
                    }
                  ]
                }
              },
              {
                "slice": {
                  "name": "projection_d",
                  "type": "primitive.D",
                  "refs": [
                    {
                      "name": "",
                      "creator": "parseNoSQLDBQuery"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "blueprint_backend": {
                  "name": "post_db_val",
                  "type": "NoSQLCursor {database = usertimeline, collection = usertimeline}"
                },
                "target_variable": {
                  "pointer": {
                    "name": "user_posts",
                    "type": "(*socialnetwork.UserPosts struct{UserID int64, Posts []socialnetwork.PostInfo struct{PostID int64, Timestamp int64}})"
                  },
                  "ptr_to": {
                    "struct": {
                      "name": "user_posts",
                      "type": "socialnetwork.UserPosts struct{UserID int64, Posts []socialnetwork.PostInfo struct{PostID int64, Timestamp int64}}"
                    },
                    "struct_fields": {
                      "Posts": {
                        "field": {
                          "name": "Posts",
                          "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                        },
                        "wrapped_variable": {
                          "slice": {
                            "name": "Posts",
                            "type": "[]socialnetwork.PostInfo struct{PostID int64, Timestamp int64}"
                          }
                        }
                      }
                    }
                  }
                }
              },
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "usertimeline_db"
          },
          {
            "method": "(*PostStorageServiceImpl).ReadPosts(ctx context.Context, reqID int64, postIDs []int64)",
            "depth": 2,
            "caller": "UserTimelineService",
            "edges": [
              {
                "method": "Cache.Mget(ctx context.Context, key []string, key []interface{})",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "HomeTimelineService"
                        },
                        {
                          "name": "ctx",
                          "creator": "UserTimelineService"
                        }
                      ]
                    }
                  },
                  {
                    "array": {
                      "name": "keys",
                      "type": "[]string"
                    },
                    "array_elems": [
                      {
                        "basic": {
                          "name": "",
                          "type": "string"
                        }
                      }
                    ]
                  },
                  {
                    "array": {
                      "name": "retvals",
                      "type": "[]interface{}"
                    },
                    "array_elems": [
                      {
                        "pointer": {
                          "name": "*",
                          "type": "(*socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64})"
                        },
                        "ptr_to": {
                          "struct": {
                            "name": "*",
                            "type": "socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "HomeTimelineService"
                        },
                        {
                          "name": "ctx",
                          "creator": "UserTimelineService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query_d",
                      "type": "primitive.D",
                      "refs": [
                        {
                          "name": "",
                          "creator": "parseNoSQLDBQuery"
                        },
                        {
                          "name": "",
                          "creator": "parseNoSQLDBQuery"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "vals",
                      "type": "NoSQLCursor {database = post, collection = post}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "new_posts",
                        "type": "(*[]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64})"
                      },
                      "ptr_to": {
                        "array": {
                          "name": "new_posts",
                          "type": "[]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_db"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "PostStorageService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "HomeTimelineService"
                        },
                        {
                          "name": "ctx",
                          "creator": "UserTimelineService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": "string"
                    }
                  },
                  {
                    "struct": {
                      "name": "new_post",
                      "type": "socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                    },
                    "struct_fields": {
                      "PostID": {
                        "field": {
                          "name": "PostID",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "PostID",
                            "type": "int64"
                          }
                        }
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "post_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "array": {
                  "name": "post_ids",
                  "type": "[]int64"
                },
                "array_elems": [
                  {
                    "basic": {
                      "name": "PostID",
                      "type": "int64"
                    }
                  },
                  {
                    "basic": {
                      "name": "PostID",
                      "type": "int64"
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "slice": {
                  "name": "_",
                  "type": "[]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}"
                }
              },
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "Cache.Put(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "UserTimelineService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "userIDStr",
                  "type": "string"
                }
              },
              {
                "array": {
                  "name": "post_ids",
                  "type": "[]int64"
                },
                "array_elems": [
                  {
                    "basic": {
                      "name": "PostID",
                      "type": "int64"
                    }
                  },
                  {
                    "basic": {
                      "name": "PostID",
                      "type": "int64"
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "usertimeline_cache"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "userId",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "start",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "stop",
              "type": "int64"
            }
          }
        ],
        "returns": [
          {
            "slice": {
              "name": "",
              "type": "[]int64"
            }
          },
          {
            "interface": {
              "name": "",
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "userId",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "start",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "stop",
          "type": "int64"
        }
      }
    ]
  },
  {
    "method": "(*Wrk2APIServiceImpl).Follow(ctx context.Context, username string, followeeName string, userId int64, followeeID int64)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*SocialGraphServiceImpl).Follow(ctx context.Context, reqID int64, userID int64, followeeID int64)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followees "
                }
              },
              {
                "pointer": {
                  "name": "followees",
                  "type": "(*[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followees",
                    "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                  },
                  "array_elems": [
                    {
                      "struct": {
                        "name": "",
                        "type": "socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                      },
                      "struct_fields": {
                        "FolloweeID": {
                          "field": {
                            "name": "FolloweeID",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "followeeID",
                              "type": "int64",
                              "refs": [
                                {
                                  "name": "followeeID",
                                  "creator": "Wrk2APIService"
                                },
                                {
                                  "name": "followee_id",
                                  "creator": "SocialGraphService"
                                }
                              ]
                            }
                          }
                        },
                        "Timestamp": {
                          "field": {
                            "name": "Timestamp",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "now",
                              "type": "int64"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          },
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followers "
                }
              },
              {
                "pointer": {
                  "name": "followers",
                  "type": "(*[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followers",
                    "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                  },
                  "array_elems": [
                    {
                      "struct": {
                        "name": "",
                        "type": "socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                      },
                      "struct_fields": {
                        "FollowerID": {
                          "field": {
                            "name": "FollowerID",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "userID",
                              "type": "int64",
                              "refs": [
                                {
                                  "name": "userId",
                                  "creator": "Wrk2APIService"
                                },
                                {
                                  "name": "id",
                                  "creator": "SocialGraphService"
                                }
                              ]
                            }
                          }
                        },
                        "Timestamp": {
                          "field": {
                            "name": "Timestamp",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "now",
                              "type": "int64"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          },
          {
            "method": "Cache.Put(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followees "
                }
              },
              {
                "array": {
                  "name": "followees",
                  "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                },
                "array_elems": [
                  {
                    "struct": {
                      "name": "",
                      "type": "socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                    },
                    "struct_fields": {
                      "FolloweeID": {
                        "field": {
                          "name": "FolloweeID",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "followeeID",
                            "type": "int64"
                          }
                        }
                      },
                      "Timestamp": {
                        "field": {
                          "name": "Timestamp",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "now",
                            "type": "int64"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err3",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "userId",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "followeeID",
              "type": "int64"
            }
          }
        ],
        "returns": [
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "err3",
                  "creator": "SocialGraphService"
                }
              ]
            }
          }
        ]
      },
      {
        "method": "(*SocialGraphServiceImpl).FollowWithUsername(ctx context.Context, reqID int64, username string, followee_name string)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "(*UserIDServiceImpl).GetUserId(ctx context.Context, reqID int64, username string)",
            "depth": 2,
            "caller": "SocialGraphService",
            "edges": [
              {
                "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "pointer": {
                      "name": "user_id",
                      "type": "(*int64)"
                    },
                    "ptr_to": {
                      "basic": {
                        "name": "user_id",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "exists",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "struct": {
                          "name": "",
                          "type": "struct{ string,  \"username\" string,  string}"
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "res",
                      "type": "NoSQLCursor {database = user, collection = user}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "user",
                        "type": "(*socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string})"
                      },
                      "ptr_to": {
                        "struct": {
                          "name": "user",
                          "type": "socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}"
                        },
                        "struct_fields": {
                          "UserID": {
                            "field": {
                              "name": "UserID",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "UserID",
                                "type": "int64"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "field": {
                      "name": "user_id",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "UserID",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "username",
                  "type": "string",
                  "refs": [
                    {
                      "name": "username",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "id",
                  "type": "int64"
                }
              },
              {
                "interface": {
                  "name": "err1",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*UserIDServiceImpl).GetUserId(ctx context.Context, reqID int64, username string)",
            "depth": 2,
            "caller": "SocialGraphService",
            "edges": [
              {
                "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "pointer": {
                      "name": "user_id",
                      "type": "(*int64)"
                    },
                    "ptr_to": {
                      "basic": {
                        "name": "user_id",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "exists",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "struct": {
                          "name": "",
                          "type": "struct{ string,  \"username\" string,  string}"
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "res",
                      "type": "NoSQLCursor {database = user, collection = user}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "user",
                        "type": "(*socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string})"
                      },
                      "ptr_to": {
                        "struct": {
                          "name": "user",
                          "type": "socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}"
                        },
                        "struct_fields": {
                          "UserID": {
                            "field": {
                              "name": "UserID",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "UserID",
                                "type": "int64"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "field": {
                      "name": "user_id",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "UserID",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "followee_name",
                  "type": "string",
                  "refs": [
                    {
                      "name": "followeeName",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "followee_id",
                  "type": "int64"
                }
              },
              {
                "interface": {
                  "name": "err2",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followees "
                }
              },
              {
                "pointer": {
                  "name": "followees",
                  "type": "(*[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followees",
                    "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                  },
                  "array_elems": [
                    {
                      "struct": {
                        "name": "",
                        "type": "socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                      },
                      "struct_fields": {
                        "FolloweeID": {
                          "field": {
                            "name": "FolloweeID",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "followeeID",
                              "type": "int64",
                              "refs": [
                                {
                                  "name": "followeeID",
                                  "creator": "Wrk2APIService"
                                },
                                {
                                  "name": "followee_id",
                                  "creator": "SocialGraphService"
                                }
                              ]
                            }
                          }
                        },
                        "Timestamp": {
                          "field": {
                            "name": "Timestamp",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "now",
                              "type": "int64"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          },
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followers "
                }
              },
              {
                "pointer": {
                  "name": "followers",
                  "type": "(*[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followers",
                    "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                  },
                  "array_elems": [
                    {
                      "struct": {
                        "name": "",
                        "type": "socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                      },
                      "struct_fields": {
                        "FollowerID": {
                          "field": {
                            "name": "FollowerID",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "userID",
                              "type": "int64",
                              "refs": [
                                {
                                  "name": "userId",
                                  "creator": "Wrk2APIService"
                                },
                                {
                                  "name": "id",
                                  "creator": "SocialGraphService"
                                }
                              ]
                            }
                          }
                        },
                        "Timestamp": {
                          "field": {
                            "name": "Timestamp",
                            "type": "int64"
                          },
                          "wrapped_variable": {
                            "basic": {
                              "name": "now",
                              "type": "int64"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          },
          {
            "method": "Cache.Put(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followees "
                }
              },
              {
                "array": {
                  "name": "followees",
                  "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                },
                "array_elems": [
                  {
                    "struct": {
                      "name": "",
                      "type": "socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                    },
                    "struct_fields": {
                      "FolloweeID": {
                        "field": {
                          "name": "FolloweeID",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "followeeID",
                            "type": "int64"
                          }
                        }
                      },
                      "Timestamp": {
                        "field": {
                          "name": "Timestamp",
                          "type": "int64"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "now",
                            "type": "int64"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err3",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "username",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "followeeName",
              "type": "string"
            }
          }
        ],
        "returns": [
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "SocialGraphService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "followeeName",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "userId",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "followeeID",
          "type": "int64"
        }
      }
    ]
  },
  {
    "method": "(*Wrk2APIServiceImpl).Unfollow(ctx context.Context, username string, followeeName string, userId int64, followeeID int64)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*SocialGraphServiceImpl).Unfollow(ctx context.Context, reqID int64, userID int64, followeeID int64)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followees "
                }
              },
              {
                "pointer": {
                  "name": "followees",
                  "type": "(*[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followees",
                    "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          },
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followers "
                }
              },
              {
                "pointer": {
                  "name": "followers",
                  "type": "(*[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followers",
                    "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "userId",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "followeeID",
              "type": "int64"
            }
          }
        ],
        "returns": [
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "err3",
                  "creator": "SocialGraphService"
                }
              ]
            }
          }
        ]
      },
      {
        "method": "(*SocialGraphServiceImpl).UnfollowWithUsername(ctx context.Context, reqID int64, username string, followee_name string)",
        "depth": 1,
        "caller": "Wrk2APIService",
        "edges": [
          {
            "method": "(*UserIDServiceImpl).GetUserId(ctx context.Context, reqID int64, username string)",
            "depth": 2,
            "caller": "SocialGraphService",
            "edges": [
              {
                "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "pointer": {
                      "name": "user_id",
                      "type": "(*int64)"
                    },
                    "ptr_to": {
                      "basic": {
                        "name": "user_id",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "exists",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "struct": {
                          "name": "",
                          "type": "struct{ string,  \"username\" string,  string}"
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "res",
                      "type": "NoSQLCursor {database = user, collection = user}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "user",
                        "type": "(*socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string})"
                      },
                      "ptr_to": {
                        "struct": {
                          "name": "user",
                          "type": "socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}"
                        },
                        "struct_fields": {
                          "UserID": {
                            "field": {
                              "name": "UserID",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "UserID",
                                "type": "int64"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "field": {
                      "name": "user_id",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "UserID",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "username",
                  "type": "string",
                  "refs": [
                    {
                      "name": "username",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "id",
                  "type": "int64"
                }
              },
              {
                "interface": {
                  "name": "err1",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*UserIDServiceImpl).GetUserId(ctx context.Context, reqID int64, username string)",
            "depth": 2,
            "caller": "SocialGraphService",
            "edges": [
              {
                "method": "Cache.Get(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "pointer": {
                      "name": "user_id",
                      "type": "(*int64)"
                    },
                    "ptr_to": {
                      "basic": {
                        "name": "user_id",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "exists",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              },
              {
                "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "slice": {
                      "name": "query",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "struct": {
                          "name": "",
                          "type": "struct{ string,  \"username\" string,  string}"
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "blueprint_backend": {
                      "name": "res",
                      "type": "NoSQLCursor {database = user, collection = user}"
                    },
                    "target_variable": {
                      "pointer": {
                        "name": "user",
                        "type": "(*socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string})"
                      },
                      "ptr_to": {
                        "struct": {
                          "name": "user",
                          "type": "socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}"
                        },
                        "struct_fields": {
                          "UserID": {
                            "field": {
                              "name": "UserID",
                              "type": "int64"
                            },
                            "wrapped_variable": {
                              "basic": {
                                "name": "UserID",
                                "type": "int64"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              },
              {
                "method": "Cache.Put(ctx context.Context, key string, value interface{})",
                "depth": 3,
                "caller": "UserIDService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        },
                        {
                          "name": "ctx",
                          "creator": "SocialGraphService"
                        }
                      ]
                    }
                  },
                  {
                    "basic": {
                      "name": "",
                      "type": ":UserID "
                    }
                  },
                  {
                    "field": {
                      "name": "user_id",
                      "type": "int64"
                    },
                    "wrapped_variable": {
                      "basic": {
                        "name": "UserID",
                        "type": "int64"
                      }
                    }
                  }
                ],
                "returns": [
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_cache"
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "reqID",
                  "type": "int64",
                  "refs": [
                    {
                      "name": "reqID",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "followee_name",
                  "type": "string",
                  "refs": [
                    {
                      "name": "followeeName",
                      "creator": "Wrk2APIService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "followee_id",
                  "type": "int64"
                }
              },
              {
                "interface": {
                  "name": "err2",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followees "
                }
              },
              {
                "pointer": {
                  "name": "followees",
                  "type": "(*[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followees",
                    "type": "[]socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}"
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          },
          {
            "method": "Cache.Get(ctx context.Context, key string, value interface{})",
            "depth": 2,
            "caller": "SocialGraphService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "Wrk2APIService"
                    },
                    {
                      "name": "ctx",
                      "creator": "SocialGraphService"
                    }
                  ]
                }
              },
              {
                "basic": {
                  "name": "",
                  "type": ":followers "
                }
              },
              {
                "pointer": {
                  "name": "followers",
                  "type": "(*[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64})"
                },
                "ptr_to": {
                  "array": {
                    "name": "followers",
                    "type": "[]socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}"
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "social_cache"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "basic": {
              "name": "username",
              "type": "string"
            }
          },
          {
            "basic": {
              "name": "followeeName",
              "type": "string"
            }
          }
        ],
        "returns": [
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "SocialGraphService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "followeeName",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "userId",
          "type": "int64"
        }
      },
      {
        "basic": {
          "name": "followeeID",
          "type": "int64"
        }
      }
    ]
  }
]