"":
- package: ""
- package path: github.com/blueprint-uservices/blueprint/examples/dsb_sn/workflow/socialnetwork/...
- module: ""
- files: []
- imports (extracted from package): []
- imports (extracted from source files): []
- imported types: []
- imported constants: []
- imported variables: []
- declared types: []
- declared variables: []
- declared constants: []
- service types: []
- datastore types: []
- parsed methods: []

socialnetwork:
- package: socialnetwork
- package path: github.com/blueprint-uservices/blueprint/examples/dsb_sn/workflow/socialnetwork
- module: github.com/blueprint-uservices/blueprint/examples/dsb_sn/workflow
- files:
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/ComposePostService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/DataModels.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/HomeTimelineService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/MediaService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/PostStorageService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/SocialGraphService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/TextService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/UniqueIdService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/UrlShortenService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/UserIdService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/UserMentionService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/UserService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/UserTimelineService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/Wrk2APIService.go
  - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/dsb_sn/workflow/socialnetwork/common.go
- imports (extracted from package):
  - bytes
  - context
  - crypto/sha1
  - encoding/base64
  - encoding/json
  - errors
  - fmt
  - github.com/blueprint-uservices/blueprint/runtime/core/backend
  - github.com/dgrijalva/jwt-go
  - go.mongodb.org/mongo-driver/bson
  - log
  - math/rand
  - net
  - regexp
  - strconv
  - strings
  - sync
  - time
- imports (extracted from source files):
  - (backend) github.com/blueprint-uservices/blueprint/runtime/core/backend
  - (base64) encoding/base64
  - (bson) go.mongodb.org/mongo-driver/bson
  - (json) encoding/json
  - (jwt) github.com/dgrijalva/jwt-go
  - (rand) math/rand
  - (sha1) crypto/sha1
  - bytes
  - context
  - errors
  - fmt
  - log
  - net
  - regexp
  - strconv
  - strings
  - sync
  - time
- imported types:
  - .error
  - Cache interface{Cache.Put(ctx context.Context, key string, value interface{}),
    Cache.Get(ctx context.Context, key string, value interface{})}
  - NoSQLCollection interface{NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.NoSQLCollection.Upsert(ctx context.Context, filter bson.D, document interface{}), NoSQLDatabase.NoSQLCollection.UpdateOne(ctx context.Context, filter bson.D, update bson.D), NoSQLDatabase.NoSQLCollection.UpdateMany(ctx context.Context, filter bson.D, update bson.D), NoSQLDatabase.NoSQLCollection.ReplaceOne(ctx context.Context, filter bson.D, interface{}), NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}), NoSQLDatabase.NoSQLCollection.DeleteOne(ctx context.Context, filter bson.D), NoSQLDatabase.NoSQLCollection.DeleteMany(ctx context.Context, filter bson.D)}
  - NoSQLCursor interface{NoSQLDatabase.NoSQLCursor.One(ctx context.Context, obj interface{}),
    NoSQLDatabase.NoSQLCursor.All(ctx context.Context, obj interface{})}
  - NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}
  - atomic.Uint64
  - atomic.align64
  - atomic.noCopy
  - context.Context
  - hash.Hash interface{BlockSize, Reset, Size, Sum, Write, }
  - jwt-go.StandardClaims struct{Audience string, ExpiresAt int64, Id string, IssuedAt int64, Issuer string, NotBefore int64, Subject string}
  - net.Flags uint
  - net.HardwareAddr []byte
  - net.Interface struct{Index int, MTU int, Name string, HardwareAddr net.HardwareAddr []byte, Flags net.Flags uint}
  - primitive.D
  - primitive.E
  - sync.WaitGroup
  - sync.noCopy
  - time.Location struct{name string, zone []time.zone struct{name string, offset int, isDST bool}, tx []time.zoneTrans struct{when int64, index uint8, isstd bool, isutc bool}, extend string, cacheStart int64, cacheEnd int64, cacheZone (*time.zone struct{name string, offset int, isDST bool})}
  - time.Time struct{wall uint64, ext int64, loc (*time.Location struct{name string, zone []time.zone struct{name string, offset int, isDST bool}, tx []time.zoneTrans struct{when int64, index uint8, isstd bool, isutc bool}, extend string, cacheStart int64, cacheEnd int64, cacheZone (*time.zone struct{name string, offset int, isDST bool})})}
  - time.zone struct{name string, offset int, isDST bool}
  - time.zoneTrans struct{when int64, index uint8, isstd bool, isutc bool}
- imported constants: []
- imported variables: []
- declared types:
  - socialnetwork.ComposePostService
  - socialnetwork.ComposePostServiceImpl struct{postStorageService socialnetwork.PostStorageService, userTimelineService socialnetwork.UserTimelineService, userService socialnetwork.UserService, uniqueIDService socialnetwork.UniqueIdService, mediaService socialnetwork.MediaService, textService socialnetwork.TextService, homeTimelineService socialnetwork.HomeTimelineService}
  - socialnetwork.Creator struct{UserID int64, Username string}
  - socialnetwork.FolloweeInfo struct{FolloweeID int64, Timestamp int64}
  - socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}
  - socialnetwork.HomeTimelineService
  - socialnetwork.HomeTimelineServiceImpl struct{homeTimelineCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, postStorageService socialnetwork.PostStorageService,
    socialGraphService socialnetwork.SocialGraphService}
  - socialnetwork.LoginObj struct{UserID int64, Password string, Salt string}
  - socialnetwork.Media struct{MediaID int64, MediaType string}
  - socialnetwork.MediaService
  - socialnetwork.MediaServiceImpl struct{}
  - socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention
    struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}
  - socialnetwork.PostInfo struct{PostID int64, Timestamp int64}
  - socialnetwork.PostStorageService
  - socialnetwork.PostStorageServiceImpl struct{postStorageCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, postStorageDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}, CacheHits int64, NumReqs
    int64, CacheMiss int64}
  - socialnetwork.PostType int64
  - socialnetwork.SocialGraphService
  - socialnetwork.SocialGraphServiceImpl struct{socialGraphCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, socialGraphDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}, userIDService socialnetwork.UserIDService}
  - socialnetwork.TextService
  - socialnetwork.TextServiceImpl struct{urlShortenService socialnetwork.UrlShortenService, userMentionService socialnetwork.UserMentionService}
  - socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}
  - socialnetwork.UniqueIdService
  - socialnetwork.UniqueIdServiceImpl struct{counter int64, current_timestamp int64, machine_id string}
  - socialnetwork.UrlShortenService
  - socialnetwork.UrlShortenServiceImpl struct{urlShortenDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}, hostname string}
  - socialnetwork.User struct{UserID int64, FirstName string, LastName string, Username string, PwdHashed string, Salt string}
  - socialnetwork.UserIDService
  - socialnetwork.UserIDServiceImpl struct{userCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, userDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}}
  - socialnetwork.UserInfo struct{UserID int64, Followers []socialnetwork.FollowerInfo struct{FollowerID int64, Timestamp int64}, Followees []socialnetwork.FolloweeInfo
    struct{FolloweeID int64, Timestamp int64}}
  - socialnetwork.UserMention struct{UserID int64, Username string}
  - socialnetwork.UserMentionService
  - socialnetwork.UserMentionServiceImpl struct{userCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, userDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}}
  - socialnetwork.UserPosts struct{UserID int64, Posts []socialnetwork.PostInfo struct{PostID int64, Timestamp int64}}
  - socialnetwork.UserService
  - socialnetwork.UserServiceImpl struct{machine_id string, counter int64, current_timestamp int64, secret string, userCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, userDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}, socialGraphService
    socialnetwork.SocialGraphService}
  - socialnetwork.UserTimelineService
  - socialnetwork.UserTimelineServiceImpl struct{userTimelineCache Cache interface{Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{})}, userTimelineDB NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}, postStorageService
    socialnetwork.PostStorageService, CacheHits int64, CacheMiss int64, NumRequests
    int64}
  - socialnetwork.Wrk2APIService
  - socialnetwork.Wrk2APIServiceImpl struct{userService socialnetwork.UserService, composePostService socialnetwork.ComposePostService, userTimelineService socialnetwork.UserTimelineService, homeTimelineService socialnetwork.HomeTimelineService, socialGraphService socialnetwork.SocialGraphService}
  - socialnetwork.claimsT struct{Username string, UserID string, Timestamp int64, StandardClaims jwt-go.StandardClaims struct{Audience string, ExpiresAt int64, Id string, IssuedAt int64, Issuer string, NotBefore int64, Subject string}}
- declared variables:
  - github.com/blueprint-uservices/blueprint/examples/dsb_sn/workflow/socialnetwork.letterRunes
    []rune
- declared constants:
  - DM 3 int64
  - POST 0 int64
  - REPLY 2 int64
  - REPOST 1 int64
- service types:
  - socialnetwork.ComposePostService
  - socialnetwork.HomeTimelineService
  - socialnetwork.MediaService
  - socialnetwork.PostStorageService
  - socialnetwork.SocialGraphService
  - socialnetwork.TextService
  - socialnetwork.UniqueIdService
  - socialnetwork.UrlShortenService
  - socialnetwork.UserIDService
  - socialnetwork.UserMentionService
  - socialnetwork.UserService
  - socialnetwork.UserTimelineService
  - socialnetwork.Wrk2APIService
- datastore types:
  - Cache interface{Cache.Put(ctx context.Context, key string, value interface{}),
    Cache.Get(ctx context.Context, key string, value interface{})}
  - NoSQLCollection interface{NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.NoSQLCollection.Upsert(ctx context.Context, filter bson.D, document interface{}), NoSQLDatabase.NoSQLCollection.UpdateOne(ctx context.Context, filter bson.D, update bson.D), NoSQLDatabase.NoSQLCollection.UpdateMany(ctx context.Context, filter bson.D, update bson.D), NoSQLDatabase.NoSQLCollection.ReplaceOne(ctx context.Context, filter bson.D, interface{}), NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}), NoSQLDatabase.NoSQLCollection.DeleteOne(ctx context.Context, filter bson.D), NoSQLDatabase.NoSQLCollection.DeleteMany(ctx context.Context, filter bson.D)}
  - NoSQLCursor interface{NoSQLDatabase.NoSQLCursor.One(ctx context.Context, obj interface{}),
    NoSQLDatabase.NoSQLCursor.All(ctx context.Context, obj interface{})}
  - NoSQLDatabase interface{NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string)}
- parsed methods:
  - (*socialnetwork.ComposePostServiceImpl).ComposePost(ctx context.Context, reqID int64, username string, userID int64, text string, mediaIDs []int64, mediaTypes []string, postType int64) (int64, []int64, error)
  - (*socialnetwork.HomeTimelineServiceImpl).ReadHomeTimeline(ctx context.Context, reqID int64, userID int64, start int64, stop int64) ([]int64, error)
  - (*socialnetwork.HomeTimelineServiceImpl).WriteHomeTimeline(ctx context.Context, reqID int64, postID int64, userID int64, timestamp int64, userMentionIDs []int64)
    error
  - (*socialnetwork.MediaServiceImpl).ComposeMedia(ctx context.Context, reqID int64, mediaTypes []string, mediaIds []int64) ([]socialnetwork.Media struct{MediaID int64, MediaType string}, error)
  - (*socialnetwork.PostStorageServiceImpl).ReadPost(ctx context.Context, reqID int64, postID int64) (socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}, error)
  - (*socialnetwork.PostStorageServiceImpl).ReadPosts(ctx context.Context, reqID int64, postIDs []int64) ([]socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}, error)
  - (*socialnetwork.PostStorageServiceImpl).StorePost(ctx context.Context, reqID int64, post socialnetwork.Post struct{PostID int64, Creator socialnetwork.Creator struct{UserID int64, Username string}, ReqID int64, Text string, UserMentions []socialnetwork.UserMention struct{UserID int64, Username string}, Medias []socialnetwork.Media struct{MediaID int64, MediaType string}, Urls []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, Timestamp int64, PostType int64}) error
  - (*socialnetwork.SocialGraphServiceImpl).Follow(ctx context.Context, reqID int64, userID int64, followeeID int64) error
  - (*socialnetwork.SocialGraphServiceImpl).FollowWithUsername(ctx context.Context, reqID int64, username string, followee_name string) error
  - (*socialnetwork.SocialGraphServiceImpl).GetFollowees(ctx context.Context, reqID int64, userID int64) ([]int64, error)
  - (*socialnetwork.SocialGraphServiceImpl).GetFollowers(ctx context.Context, reqID int64, userID int64) ([]int64, error)
  - (*socialnetwork.SocialGraphServiceImpl).InsertUser(ctx context.Context, reqID int64, userID int64) error
  - (*socialnetwork.SocialGraphServiceImpl).Unfollow(ctx context.Context, reqID int64, userID int64, followeeID int64) error
  - (*socialnetwork.SocialGraphServiceImpl).UnfollowWithUsername(ctx context.Context, reqID int64, username string, followee_name string) error
  - (*socialnetwork.TextServiceImpl).ComposeText(ctx context.Context, reqID int64, text string) (string, []socialnetwork.UserMention struct{UserID int64, Username string}, []socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, error)
  - (*socialnetwork.UniqueIdServiceImpl).ComposeUniqueId(ctx context.Context, reqID int64, postType int64) (int64, error)
  - (*socialnetwork.UniqueIdServiceImpl).getCounter(timestamp int64) int64
  - (*socialnetwork.UrlShortenServiceImpl).ComposeUrls(ctx context.Context, reqID int64, urls []string) ([]socialnetwork.URL struct{ShortenedUrl string, ExpandedUrl string}, error)
  - (*socialnetwork.UrlShortenServiceImpl).GetExtendedUrls(ctx context.Context, reqID int64, shortenedUrls []string) ([]string, error)
  - (*socialnetwork.UrlShortenServiceImpl).genRandomStr(length int) string
  - (*socialnetwork.UserIDServiceImpl).GetUserId(ctx context.Context, reqID int64, username string) (int64, error)
  - (*socialnetwork.UserMentionServiceImpl).ComposeUserMentions(ctx context.Context, reqID int64, usernames []string) ([]socialnetwork.UserMention struct{UserID int64, Username string}, error)
  - (*socialnetwork.UserServiceImpl).ComposeCreatorWithUserId(ctx context.Context, reqID int64, userID int64, username string) (socialnetwork.Creator struct{UserID int64, Username string}, error)
  - (*socialnetwork.UserServiceImpl).ComposeCreatorWithUsername(ctx context.Context, reqID int64, username string) (socialnetwork.Creator struct{UserID int64, Username string}, error)
  - (*socialnetwork.UserServiceImpl).Login(ctx context.Context, reqID int64, username string, password string) (string, error)
  - (*socialnetwork.UserServiceImpl).RegisterUser(ctx context.Context, reqID int64, firstName string, lastName string, username string, password string) error
  - (*socialnetwork.UserServiceImpl).RegisterUserWithId(ctx context.Context, reqID int64, firstName string, lastName string, username string, password string, userID int64) error
  - (*socialnetwork.UserServiceImpl).genRandomStr(length int) string
  - (*socialnetwork.UserServiceImpl).getCounter(timestamp int64) int64
  - (*socialnetwork.UserServiceImpl).hashPwd(pwd []byte) string
  - (*socialnetwork.UserTimelineServiceImpl).ReadUserTimeline(ctx context.Context, reqID int64, userID int64, start int64, stop int64) ([]int64, error)
  - (*socialnetwork.UserTimelineServiceImpl).WriteUserTimeline(ctx context.Context, reqID int64, postID int64, userID int64, timestamp int64) error
  - (*socialnetwork.Wrk2APIServiceImpl).ComposePost(ctx context.Context, userId int64, username string, post_type int64, text string, media_types []string, media_ids []int64) (int64, []int64, error)
  - (*socialnetwork.Wrk2APIServiceImpl).Follow(ctx context.Context, username string, followeeName string, userId int64, followeeID int64) error
  - (*socialnetwork.Wrk2APIServiceImpl).ReadHomeTimeline(ctx context.Context, userId int64, start int64, stop int64) ([]int64, error)
  - (*socialnetwork.Wrk2APIServiceImpl).ReadUserTimeline(ctx context.Context, userId int64, start int64, stop int64) ([]int64, error)
  - (*socialnetwork.Wrk2APIServiceImpl).Register(ctx context.Context, firstName string, lastName string, username string, password string, userId int64) error
  - (*socialnetwork.Wrk2APIServiceImpl).Unfollow(ctx context.Context, username string, followeeName string, userId int64, followeeID int64) error
  - socialnetwork.GetMachineID() string
  - socialnetwork.NewComposePostServiceImpl(ctx context.Context, postStorageService socialnetwork.PostStorageService, userTimelineService socialnetwork.UserTimelineService, userService socialnetwork.UserService, uniqueIDService socialnetwork.UniqueIdService, mediaService socialnetwork.MediaService, textService socialnetwork.TextService, homeTimelineService socialnetwork.HomeTimelineService) (socialnetwork.ComposePostService, error)
  - socialnetwork.NewHomeTimelineServiceImpl(ctx context.Context, homeTimelineCache Cache, postStorageService socialnetwork.PostStorageService, socialGraphService socialnetwork.SocialGraphService) (socialnetwork.HomeTimelineService, error)
  - socialnetwork.NewMediaServiceImpl(ctx context.Context) (socialnetwork.MediaService, error)
  - socialnetwork.NewPostStorageServiceImpl(ctx context.Context, postStorageCache Cache, postStorageDB NoSQLDatabase) (socialnetwork.PostStorageService, error)
  - socialnetwork.NewSocialGraphServiceImpl(ctx context.Context, socialGraphCache Cache, socialGraphDB NoSQLDatabase, userIDService socialnetwork.UserIDService)
    (socialnetwork.SocialGraphService, error)
  - socialnetwork.NewTextServiceImpl(ctx context.Context, urlShortenService socialnetwork.UrlShortenService, userMentionService socialnetwork.UserMentionService) (socialnetwork.TextService, error)
  - socialnetwork.NewUniqueIdServiceImpl(ctx context.Context) (socialnetwork.UniqueIdService, error)
  - socialnetwork.NewUrlShortenServiceImpl(ctx context.Context, urlShortenDB NoSQLDatabase)
    (socialnetwork.UrlShortenService, error)
  - socialnetwork.NewUserIDServiceImpl(ctx context.Context, userCache Cache, userDB NoSQLDatabase) (socialnetwork.UserIDService, error)
  - socialnetwork.NewUserMentionServiceImpl(ctx context.Context, userCache Cache, userDB NoSQLDatabase) (socialnetwork.UserMentionService, error)
  - socialnetwork.NewUserServiceImpl(ctx context.Context, userCache Cache, userDB NoSQLDatabase, socialGraphService socialnetwork.SocialGraphService, secret string)
    (socialnetwork.UserService, error)
  - socialnetwork.NewUserTimelineServiceImpl(ctx context.Context, userTimelineCache Cache, userTimelineDB NoSQLDatabase, postStorageService socialnetwork.PostStorageService)
    (socialnetwork.UserTimelineService, error)
  - socialnetwork.NewWrk2APIServiceImpl(ctx context.Context, userService socialnetwork.UserService, composePostService socialnetwork.ComposePostService, userTimelineService socialnetwork.UserTimelineService, homeTimelineService socialnetwork.HomeTimelineService, socialGraphService socialnetwork.SocialGraphService)
    (socialnetwork.Wrk2APIService, error)
  - socialnetwork.handleFormats(jsonQuery string) (bdoc primitive.D, err error)
  - socialnetwork.lower(f interface{}) interface{}
  - socialnetwork.parseNoSQLDBQuery(query string) (primitive.D, error)
