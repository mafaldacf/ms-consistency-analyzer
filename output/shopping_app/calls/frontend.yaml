(*FrontendImpl).AddProductToCart(ctx context.Context, cartID string, productID string):
- SERVICE CALL @ AddProductToCart >> (*shopping_app.CartServiceImpl).AddProductToCart(ctx context.Context, cartID string, productID string) error

(*FrontendImpl).Checkout(ctx context.Context, cartID string, userID string, productID string, quantity int, price int):
- SERVICE CALL @ CreateOrder >> (*shopping_app.OrderServiceImpl).CreateOrder(ctx context.Context, cartID string, userID string, productID string, quantity int, price int) error

(*FrontendImpl).ReadOrder(ctx context.Context, orderID string):
- SERVICE CALL @ ReadOrder >> (*shopping_app.OrderServiceImpl).ReadOrder(ctx context.Context, orderID string) (shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int}, error)

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue): []

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase): []

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 []

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService): []

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 []

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase): []

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 []

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase): []
