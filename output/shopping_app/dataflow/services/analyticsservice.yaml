(*AnalyticsServiceImpl).Run(ctx context.Context):
  block 4 (ForPost):
  - ' depth 0 (PointerObject PointerType) n (*shopping_app.AnalyticsServiceImpl struct{analytics_db
    NoSQLDatabase, analytics_queue Queue, num_workers int})'
  - _ depth 1 (StructObject UserType) shopping_app.AnalyticsServiceImpl struct{analytics_db NoSQLDatabase, analytics_queue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) analytics_db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) analytics_queue Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (StructObject UserType) wg sync.WaitGroup'
  - ' depth 0 (BasicObject BasicType) i 3 int'
  - ' depth 0 (BasicObject BasicType) i 3 int'
  - ' depth 0 (InterfaceObject UserType) err .error'

(*AnalyticsServiceImpl).updateAnalytics(ctx context.Context, message shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string})
:
 block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*shopping_app.AnalyticsServiceImpl struct{analytics_db
    NoSQLDatabase, analytics_queue Queue, num_workers int})'
  - _ depth 1 (StructObject UserType) shopping_app.AnalyticsServiceImpl struct{analytics_db NoSQLDatabase, analytics_queue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) analytics_db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) analytics_queue Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - _ depth 1 (Reference UserType) ref <ctx context.Context> @ AnalyticsService
  - ' depth 0 (StructObject UserType) message shopping_app.AnalyticsMessage struct{UserID
    string, ProductCategory string}'
  - _ depth 1 (Reference UserType) ref <workerMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string}> @ AnalyticsService
  - '__ depth 2 (FieldObject FieldType) ProductCategory string --> w-tainted 1x: write(analytics_db.Analytics.Categories)
    --> r-tainted 1x: read(analytics_db.ProductCategory)'
  - '___ depth 3 (BasicObject BasicType) ProductCategory string --> w-tainted 1x:
    write(analytics_db.Analytics.Categories) --> r-tainted 1x: read(analytics_db.string)'
  - '____ depth 4 (InterfaceObject InterfaceType) ProductCategory interface{} -->
    w-tainted 2x: write(analytics_queue.AnalyticsMessage.ProductCategory, analytics_db.Analytics.Categories)
    --> r-tainted 2x: read(analytics_queue.AnalyticsMessage.ProductCategory, analytics_db.interface{})'
  - '__ depth 2 (FieldObject FieldType) UserID string --> w-tainted 1x: write(analytics_db.Analytics.UserID)
    --> r-tainted 1x: read(analytics_db._.userID)'
  - '___ depth 3 (BasicObject BasicType) UserID string --> w-tainted 1x: write(analytics_db.Analytics.UserID)
    --> r-tainted 1x: read(analytics_db._.userID)'
  - '____ depth 4 (InterfaceObject InterfaceType) UserID interface{} --> w-tainted
    5x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    analytics_db.Analytics.UserID, shipment_queue.ShipmentMessage.UserID) --> r-tainted
    3x: read(analytics_queue.AnalyticsMessage.UserID, analytics_db._.userID, shipment_queue.ShipmentMessage.UserID)'
  - _ depth 1 (FieldObject FieldType) ProductCategory string
  - '__ depth 2 (Reference FieldType) ref <ProductCategory string> @ AnalyticsService
    --> w-tainted 1x: write(analytics_db.Analytics.Categories) --> r-tainted 1x: read(analytics_db.ProductCategory)'
  - '__ depth 2 (BasicObject BasicType) ProductCategory string --> w-tainted 1x: write(analytics_db.Analytics.Categories)
    --> r-tainted 1x: read(analytics_db.string)'
  - '___ depth 3 (Reference FieldType) ref <ProductCategory string> @ AnalyticsService
    --> w-tainted 1x: write(analytics_db.Analytics.Categories) --> r-tainted 1x: read(analytics_db.ProductCategory)'
  - _ depth 1 (FieldObject FieldType) UserID string
  - '__ depth 2 (Reference FieldType) ref <UserID string> @ AnalyticsService --> w-tainted
    1x: write(analytics_db.Analytics.UserID) --> r-tainted 1x: read(analytics_db._.userID)'
  - '__ depth 2 (BasicObject BasicType) UserID string --> w-tainted 1x: write(analytics_db.Analytics.UserID)
    --> r-tainted 1x: read(analytics_db._.userID)'
  - '___ depth 3 (Reference FieldType) ref <UserID string> @ AnalyticsService -->
    w-tainted 1x: write(analytics_db.Analytics.UserID) --> r-tainted 1x: read(analytics_db._.userID)'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = analytics_database, collection = analytics_collection}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (StructObject UserType) analytics shopping_app.Analytics struct{UserID
    string, Categories []string} --> r-tainted 6x: read(analytics_db.Analytics, analytics_db.Categories,
    analytics_db.[]string, analytics_db.string, analytics_db.ProductCategory, analytics_db.interface{})'
  - '_ depth 1 (FieldObject FieldType) Categories []string --> r-tainted 1x: read(analytics_db.Categories)'
  - '__ depth 2 (SliceObject SliceType) Categories []string --> w-tainted 1x: write(analytics_db.Analytics.Categories)
    --> r-tainted 1x: read(analytics_db.[]string)'
  - ' depth 0 (SliceObject UserType) query primitive.D'
  - _ depth 1 (StructObject StructType) struct{Key "userID" string, Value string}
  - __ depth 2 (FieldObject FieldType) Key "userID" string
  - ___ depth 3 (BasicObject BasicType) "userID" string
  - __ depth 2 (FieldObject FieldType) Value string
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database
    = analytics_database, collection = analytics_collection} --> r-tainted 1x: read(analytics_db._)'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (StructObject UserType) updatedAnalytics shopping_app.Analytics struct{UserID
    string, Categories []string} --> w-tainted 1x: write(analytics_db.Analytics)'
  - '_ depth 1 (FieldObject FieldType) Categories []string --> w-tainted 1x: write(analytics_db.Analytics.Categories)'
  - '_ depth 1 (FieldObject FieldType) UserID string --> w-tainted 1x: write(analytics_db.Analytics.UserID)'

(*AnalyticsServiceImpl).workerThread(ctx context.Context):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*shopping_app.AnalyticsServiceImpl struct{analytics_db
    NoSQLDatabase, analytics_queue Queue, num_workers int})'
  - _ depth 1 (StructObject UserType) shopping_app.AnalyticsServiceImpl struct{analytics_db NoSQLDatabase, analytics_queue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) analytics_db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) analytics_queue Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ChanObject ChanType) forever chan struct{}'

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue'

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) bill_db NoSQLDatabase'

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase'

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (ServiceObject ServiceType) cart_service shopping_app.CartService'

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) stock_service shopping_app.StockService'
  - ' depth 0 (ServiceObject ServiceType) billing_service shopping_app.BillingService'
  - ' depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue'

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) product_db NoSQLDatabase'

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue'

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) stock_db NoSQLDatabase'
