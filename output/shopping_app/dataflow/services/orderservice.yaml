(*OrderServiceImpl).CreateOrder(ctx context.Context, cartID string, userID string, productID string, quantity int, price int):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) c (*shopping_app.OrderServiceImpl struct{stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue})
  - _1 depth 1 (StructObject UserType) shopping_app.OrderServiceImpl struct{stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue}
  - __2 depth 2 (FieldObject FieldType) analytics_queue Queue
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue
  - __4 depth 2 (FieldObject FieldType) billing_service shopping_app.BillingService
  - ___5 depth 3 (ServiceObject ServiceType) billing_service shopping_app.BillingService
  - __6 depth 2 (FieldObject FieldType) order_db NoSQLDatabase
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase
  - __8 depth 2 (FieldObject FieldType) product_service shopping_app.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - __10 depth 2 (FieldObject FieldType) shipment_queue Queue
  - ___11 depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - __12 depth 2 (FieldObject FieldType) stock_service shopping_app.StockService
  - ___13 depth 3 (ServiceObject ServiceType) stock_service shopping_app.StockService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ Frontend
  - '0 depth 0 (BasicObject BasicType) cartID string --> w-tainted 2x: write(order_db.Order.OrderID,
    shipment_queue.ShipmentMessage.OrderID) --> r-tainted 1x: read(shipment_queue.ShipmentMessage.OrderID)'
  - '_1 depth 1 (Reference BasicType) ref <cartID string> @ Frontend --> w-tainted
    2x: write(order_db.Order.OrderID, shipment_queue.ShipmentMessage.OrderID) -->
    r-tainted 1x: read(shipment_queue.ShipmentMessage.OrderID)'
  - '_2 depth 1 (Reference InterfaceType) ref <OrderID interface{}> @ ShipmentService
    --> w-tainted 3x: write(order_db.Order.OrderID, shipment_queue.ShipmentMessage.OrderID,
    shipment_db.Shipment.OrderID) --> r-tainted 3x: read(order_db._.orderID, shipment_queue.ShipmentMessage.OrderID,
    order_db.Order.OrderID)'
  - '0 depth 0 (BasicObject BasicType) userID string --> w-tainted 4x: write(order_db.Order.UserID,
    analytics_queue.AnalyticsMessage.UserID, shipment_queue.ShipmentMessage.UserID,
    billing_db.Bill.UserID) --> r-tainted 2x: read(analytics_queue.AnalyticsMessage.UserID,
    shipment_queue.ShipmentMessage.UserID)'
  - '_1 depth 1 (Reference BasicType) ref <userID string> @ Frontend --> w-tainted
    4x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    shipment_queue.ShipmentMessage.UserID) --> r-tainted 2x: read(analytics_queue.AnalyticsMessage.UserID,
    shipment_queue.ShipmentMessage.UserID)'
  - '_2 depth 1 (Reference InterfaceType) ref <UserID interface{}> @ AnalyticsService
    --> w-tainted 5x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    analytics_db.Analytics.UserID, shipment_queue.ShipmentMessage.UserID) --> r-tainted
    3x: read(analytics_queue.AnalyticsMessage.UserID, analytics_db._.userID, shipment_queue.ShipmentMessage.UserID)'
  - '_3 depth 1 (Reference InterfaceType) ref <UserID interface{}> @ ShipmentService
    --> w-tainted 5x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    shipment_queue.ShipmentMessage.UserID, shipment_db.Shipment.UserID) --> r-tainted
    2x: read(analytics_queue.AnalyticsMessage.UserID, shipment_queue.ShipmentMessage.UserID)'
  - '0 depth 0 (BasicObject BasicType) productID string --> w-tainted 3x: write(order_db.Order.ProductID,
    stock_db.Stock.ProductID, billing_db.Bill.ProductID) --> r-tainted 1x: read(product_db._.productID)'
  - '_1 depth 1 (Reference BasicType) ref <productID string> @ Frontend --> w-tainted
    3x: write(order_db.Order.ProductID, stock_db.Stock.ProductID, billing_db.Bill.ProductID)
    --> r-tainted 1x: read(product_db._.productID)'
  - '0 depth 0 (BasicObject BasicType) quantity int --> w-tainted 3x: write(order_db.Order.Quantity,
    stock_db.Stock.Quantity, billing_db.Bill.Quantity)'
  - '_1 depth 1 (Reference BasicType) ref <quantity int> @ Frontend --> w-tainted
    3x: write(order_db.Order.Quantity, stock_db.Stock.Quantity, billing_db.Bill.Quantity)'
  - '0 depth 0 (BasicObject BasicType) price int --> w-tainted 1x: write(billing_db.Bill.PricePerUnit)'
  - '_1 depth 1 (Reference BasicType) ref <price int> @ Frontend --> w-tainted 1x:
    write(billing_db.Bill.PricePerUnit)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = order_database, collection = order_collection}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - '0 depth 0 (StructObject UserType) order shopping_app.Order struct{OrderID string,
    UserID string, ProductID string, Quantity int, Timestamp 1 int} --> w-tainted
    1x: write(order_db.Order)'
  - '_1 depth 1 (FieldObject FieldType) OrderID string --> w-tainted 1x: write(order_db.Order.OrderID)'
  - '_5 depth 1 (FieldObject FieldType) ProductID string --> w-tainted 1x: write(order_db.Order.ProductID)'
  - '_8 depth 1 (FieldObject FieldType) Quantity int --> w-tainted 1x: write(order_db.Order.Quantity)'
  - '_11 depth 1 (FieldObject FieldType) Timestamp 1 int --> w-tainted 1x: write(order_db.Order.Timestamp)'
  - '__12 depth 2 (BasicObject BasicType) 1 int --> w-tainted 1x: write(order_db.Order.Timestamp)'
  - '_13 depth 1 (FieldObject FieldType) UserID string --> w-tainted 1x: write(order_db.Order.UserID)'
  - 0 depth 0 (StructObject UserType) product shopping_app.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - 0 depth 0 (StructObject UserType) product shopping_app.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - '_1 depth 1 (Reference UserType) ref <product shopping_app.Product struct{ProductID
    string, Description string, PricePerUnit int, Category string}> @ ProductService
    --> r-tainted 1x: read(product_db.Product)'
  - _2 depth 1 (FieldObject FieldType) Category string
  - '__3 depth 2 (BasicObject BasicType) Category string --> w-tainted 1x: write(analytics_queue.AnalyticsMessage.ProductCategory)
    --> r-tainted 1x: read(analytics_queue.AnalyticsMessage.ProductCategory)'
  - '___4 depth 3 (Reference InterfaceType) ref <ProductCategory interface{}> @ AnalyticsService
    --> w-tainted 2x: write(analytics_queue.AnalyticsMessage.ProductCategory, analytics_db.Analytics.Categories)
    --> r-tainted 2x: read(analytics_queue.AnalyticsMessage.ProductCategory, analytics_db.Analytics.interface{})'
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference UserType) ref <err .error> @ ProductService
  - '0 depth 0 (StructObject UserType) analyticsMessage shopping_app.AnalyticsMessage
    struct{UserID string, ProductCategory string} --> w-tainted 1x: write(analytics_queue.AnalyticsMessage)
    --> r-tainted 1x: read(analytics_queue.AnalyticsMessage)'
  - '_1 depth 1 (FieldObject FieldType) ProductCategory string --> w-tainted 1x: write(analytics_queue.AnalyticsMessage.ProductCategory)
    --> r-tainted 1x: read(analytics_queue.AnalyticsMessage.ProductCategory)'
  - '__2 depth 2 (Reference InterfaceType) ref <ProductCategory interface{}> @ AnalyticsService
    --> w-tainted 2x: write(analytics_queue.AnalyticsMessage.ProductCategory, analytics_db.Analytics.Categories)
    --> r-tainted 2x: read(analytics_queue.AnalyticsMessage.ProductCategory, analytics_db.Analytics.interface{})'
  - '_5 depth 1 (FieldObject FieldType) UserID string --> w-tainted 1x: write(analytics_queue.AnalyticsMessage.UserID)
    --> r-tainted 1x: read(analytics_queue.AnalyticsMessage.UserID)'
  - '__6 depth 2 (Reference InterfaceType) ref <UserID interface{}> @ AnalyticsService
    --> w-tainted 5x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    analytics_db.Analytics.UserID, shipment_queue.ShipmentMessage.UserID) --> r-tainted
    3x: read(analytics_queue.AnalyticsMessage.UserID, analytics_db._.userID, shipment_queue.ShipmentMessage.UserID)'
  - '0 depth 0 (StructObject UserType) shipmentMessage shopping_app.ShipmentMessage
    struct{OrderID string, UserID string} --> w-tainted 1x: write(shipment_queue.ShipmentMessage)
    --> r-tainted 1x: read(shipment_queue.ShipmentMessage)'
  - '_1 depth 1 (FieldObject FieldType) OrderID string --> w-tainted 1x: write(shipment_queue.ShipmentMessage.OrderID)
    --> r-tainted 1x: read(shipment_queue.ShipmentMessage.OrderID)'
  - '__2 depth 2 (Reference InterfaceType) ref <OrderID interface{}> @ ShipmentService
    --> w-tainted 3x: write(order_db.Order.OrderID, shipment_queue.ShipmentMessage.OrderID,
    shipment_db.Shipment.OrderID) --> r-tainted 3x: read(order_db._.orderID, shipment_queue.ShipmentMessage.OrderID,
    order_db.Order.OrderID)'
  - '_6 depth 1 (FieldObject FieldType) UserID string --> w-tainted 1x: write(shipment_queue.ShipmentMessage.UserID)
    --> r-tainted 1x: read(shipment_queue.ShipmentMessage.UserID)'
  - '__7 depth 2 (Reference InterfaceType) ref <UserID interface{}> @ ShipmentService
    --> w-tainted 5x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    shipment_queue.ShipmentMessage.UserID, shipment_db.Shipment.UserID) --> r-tainted
    2x: read(analytics_queue.AnalyticsMessage.UserID, shipment_queue.ShipmentMessage.UserID)'

(*OrderServiceImpl).ReadOrder(ctx context.Context, orderID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) c (*shopping_app.OrderServiceImpl struct{stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue})
  - _1 depth 1 (StructObject UserType) shopping_app.OrderServiceImpl struct{stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue}
  - __2 depth 2 (FieldObject FieldType) analytics_queue Queue
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue
  - __4 depth 2 (FieldObject FieldType) billing_service shopping_app.BillingService
  - ___5 depth 3 (ServiceObject ServiceType) billing_service shopping_app.BillingService
  - __6 depth 2 (FieldObject FieldType) order_db NoSQLDatabase
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase
  - __8 depth 2 (FieldObject FieldType) product_service shopping_app.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - __10 depth 2 (FieldObject FieldType) shipment_queue Queue
  - ___11 depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - __12 depth 2 (FieldObject FieldType) stock_service shopping_app.StockService
  - ___13 depth 3 (ServiceObject ServiceType) stock_service shopping_app.StockService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ ShipmentService
  - __2 depth 2 (Reference UserType) ref <ctx context.Context> @ ShipmentService
  - _3 depth 1 (Reference UserType) ref <ctx context.Context> @ Frontend
  - '0 depth 0 (BasicObject BasicType) orderID string --> w-tainted 1x: write(shipment_db.Shipment.OrderID)
    --> r-tainted 2x: read(order_db._.orderID, order_db.Order.OrderID)'
  - '_1 depth 1 (Reference BasicType) ref <OrderID string> @ ShipmentService --> w-tainted
    1x: write(shipment_db.Shipment.OrderID) --> r-tainted 2x: read(order_db._.orderID,
    order_db.Order.OrderID)'
  - '__2 depth 2 (Reference FieldType) ref <OrderID string> @ ShipmentService -->
    w-tainted 1x: write(shipment_db.Shipment.OrderID) --> r-tainted 2x: read(order_db._.orderID,
    order_db.Order.OrderID)'
  - '___3 depth 3 (BasicObject BasicType) OrderID string --> w-tainted 1x: write(shipment_db.Shipment.OrderID)
    --> r-tainted 2x: read(order_db._.orderID, order_db.Order.OrderID)'
  - '____4 depth 4 (InterfaceObject InterfaceType) OrderID interface{} --> w-tainted
    3x: write(order_db.Order.OrderID, shipment_queue.ShipmentMessage.OrderID, shipment_db.Shipment.OrderID)
    --> r-tainted 3x: read(order_db._.orderID, shipment_queue.ShipmentMessage.OrderID,
    order_db.Order.OrderID)'
  - '_5 depth 1 (Reference BasicType) ref <orderID string> @ Frontend --> r-tainted
    2x: read(order_db._.orderID, order_db.Order.OrderID)'
  - '0 depth 0 (StructObject UserType) order shopping_app.Order struct{OrderID string,
    UserID string, ProductID string, Quantity int, Timestamp int64} --> r-tainted
    1x: read(order_db.Order)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = order_database, collection = order_collection}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "orderID" string, Key "orderID" string, Value string, Value string}
  - __2 depth 2 (FieldObject FieldType) Key "orderID" string
  - ___3 depth 3 (BasicObject BasicType) "orderID" string
  - __4 depth 2 (FieldObject FieldType) Value string
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database
    = order_database, collection = order_collection} --> r-tainted 2x: read(order_db._,
    order_db.Order)'
  - 0 depth 0 (InterfaceObject UserType) _ .error

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) bill_db NoSQLDatabase

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - 0 depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - 0 depth 0 (ServiceObject ServiceType) cart_service shopping_app.CartService

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) stock_service shopping_app.StockService
  - 0 depth 0 (ServiceObject ServiceType) billing_service shopping_app.BillingService
  - 0 depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) product_db NoSQLDatabase

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) stock_db NoSQLDatabase
