(*ShipmentServiceImpl).Run(ctx context.Context):
  block 4 (ForPost):
  - ' depth 0 (PointerObject PointerType) n (*shopping_app.ShipmentServiceImpl struct{order_service
    shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue, num_workers
    int})'
  - _ depth 1 (StructObject UserType) shopping_app.ShipmentServiceImpl struct{order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - __ depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___ depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - __ depth 2 (FieldObject FieldType) shipment_db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) shipment_queue Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (StructObject UserType) wg sync.WaitGroup'
  - ' depth 0 (BasicObject BasicType) i 3 int'
  - ' depth 0 (BasicObject BasicType) i 3 int'
  - ' depth 0 (InterfaceObject UserType) err .error'

(*ShipmentServiceImpl).createPendingShipment(ctx context.Context, message shopping_app.ShipmentMessage struct{OrderID string, UserID string})
:
 block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*shopping_app.ShipmentServiceImpl struct{order_service
    shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue, num_workers
    int})'
  - _ depth 1 (StructObject UserType) shopping_app.ShipmentServiceImpl struct{order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - __ depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___ depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - __ depth 2 (FieldObject FieldType) shipment_db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) shipment_queue Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - _ depth 1 (Reference UserType) ref <ctx context.Context> @ ShipmentService
  - ' depth 0 (StructObject UserType) message shopping_app.ShipmentMessage struct{OrderID
    string, UserID string}'
  - _ depth 1 (Reference UserType) ref <workerMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string}> @ ShipmentService
  - '__ depth 2 (FieldObject FieldType) OrderID string --> w-tainted 1x: write(shipment_db.Shipment.OrderID)
    --> r-tainted 2x: read(order_db._.orderID, order_db.Order.OrderID)'
  - '___ depth 3 (BasicObject BasicType) OrderID string --> w-tainted 1x: write(shipment_db.Shipment.OrderID)
    --> r-tainted 2x: read(order_db._.orderID, order_db.Order.OrderID)'
  - '____ depth 4 (InterfaceObject InterfaceType) OrderID interface{} --> w-tainted
    3x: write(order_db.Order.OrderID, shipment_queue.ShipmentMessage.OrderID, shipment_db.Shipment.OrderID)
    --> r-tainted 3x: read(order_db._.orderID, shipment_queue.ShipmentMessage.OrderID,
    order_db.Order.OrderID)'
  - '__ depth 2 (FieldObject FieldType) UserID string --> w-tainted 1x: write(shipment_db.Shipment.UserID)'
  - '___ depth 3 (BasicObject BasicType) UserID string --> w-tainted 1x: write(shipment_db.Shipment.UserID)'
  - '____ depth 4 (InterfaceObject InterfaceType) UserID interface{} --> w-tainted
    5x: write(order_db.Order.UserID, billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID,
    shipment_queue.ShipmentMessage.UserID, shipment_db.Shipment.UserID) --> r-tainted
    2x: read(analytics_queue.AnalyticsMessage.UserID, shipment_queue.ShipmentMessage.UserID)'
  - _ depth 1 (FieldObject FieldType) OrderID string
  - '__ depth 2 (Reference FieldType) ref <OrderID string> @ ShipmentService --> w-tainted
    1x: write(shipment_db.Shipment.OrderID) --> r-tainted 2x: read(order_db._.orderID,
    order_db.Order.OrderID)'
  - '__ depth 2 (BasicObject BasicType) OrderID string --> w-tainted 1x: write(shipment_db.Shipment.OrderID)
    --> r-tainted 2x: read(order_db._.orderID, order_db.Order.OrderID)'
  - '___ depth 3 (Reference FieldType) ref <OrderID string> @ ShipmentService -->
    w-tainted 1x: write(shipment_db.Shipment.OrderID) --> r-tainted 2x: read(order_db._.orderID,
    order_db.Order.OrderID)'
  - _ depth 1 (FieldObject FieldType) UserID string
  - '__ depth 2 (Reference FieldType) ref <UserID string> @ ShipmentService --> w-tainted
    1x: write(shipment_db.Shipment.UserID)'
  - '__ depth 2 (BasicObject BasicType) UserID string --> w-tainted 1x: write(shipment_db.Shipment.UserID)'
  - '___ depth 3 (Reference FieldType) ref <UserID string> @ ShipmentService --> w-tainted
    1x: write(shipment_db.Shipment.UserID)'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = shipment_database, collection = shipment_collection}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (StructObject UserType) shipment shopping_app.Shipment struct{OrderID
    string, UserID string, Status "pending" string} --> w-tainted 1x: write(shipment_db.Shipment)'
  - '_ depth 1 (FieldObject FieldType) OrderID string --> w-tainted 1x: write(shipment_db.Shipment.OrderID)'
  - '_ depth 1 (FieldObject FieldType) Status "pending" string --> w-tainted 1x: write(shipment_db.Shipment.Status)'
  - '__ depth 2 (BasicObject BasicType) "pending" string --> w-tainted 1x: write(shipment_db.Shipment.Status)'
  - '_ depth 1 (FieldObject FieldType) UserID string --> w-tainted 1x: write(shipment_db.Shipment.UserID)'

(*ShipmentServiceImpl).workerThread(ctx context.Context):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*shopping_app.ShipmentServiceImpl struct{order_service
    shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue, num_workers
    int})'
  - _ depth 1 (StructObject UserType) shopping_app.ShipmentServiceImpl struct{order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue, num_workers 4 int}
  - __ depth 2 (FieldObject FieldType) num_workers 4 int
  - ___ depth 3 (BasicObject BasicType) 4 int
  - __ depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___ depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - __ depth 2 (FieldObject FieldType) shipment_db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) shipment_queue Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ChanObject ChanType) forever chan struct{}'

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue'

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) bill_db NoSQLDatabase'

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase'

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (ServiceObject ServiceType) cart_service shopping_app.CartService'

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) stock_service shopping_app.StockService'
  - ' depth 0 (ServiceObject ServiceType) billing_service shopping_app.BillingService'
  - ' depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue'

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) product_db NoSQLDatabase'

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue'

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) stock_db NoSQLDatabase'
