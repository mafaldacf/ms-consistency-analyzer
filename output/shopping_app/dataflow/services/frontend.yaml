(*FrontendImpl).AddProductToCart(ctx context.Context, cartID string, productID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) f (*shopping_app.FrontendImpl struct{order_service
    shopping_app.OrderService, cart_service shopping_app.CartService})'
  - _ depth 1 (StructObject UserType) shopping_app.FrontendImpl struct{order_service shopping_app.OrderService, cart_service shopping_app.CartService}
  - __ depth 2 (FieldObject FieldType) cart_service shopping_app.CartService
  - ___ depth 3 (ServiceObject ServiceType) cart_service shopping_app.CartService
  - __ depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___ depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) cartID string --> r-tainted 1x: read(cart_db._.cartID)'
  - ' depth 0 (BasicObject BasicType) productID string --> r-tainted 1x: read(product_db._.productID)'

(*FrontendImpl).Checkout(ctx context.Context, cartID string, userID string, productID string, quantity int, price int):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) f (*shopping_app.FrontendImpl struct{order_service
    shopping_app.OrderService, cart_service shopping_app.CartService})'
  - _ depth 1 (StructObject UserType) shopping_app.FrontendImpl struct{order_service shopping_app.OrderService, cart_service shopping_app.CartService}
  - __ depth 2 (FieldObject FieldType) cart_service shopping_app.CartService
  - ___ depth 3 (ServiceObject ServiceType) cart_service shopping_app.CartService
  - __ depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___ depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) cartID string --> w-tainted 2x: write(order_db.Order.OrderID,
    shipment_queue.ShipmentMessage.OrderID) --> r-tainted 1x: read(shipment_queue.ShipmentMessage.OrderID)'
  - ' depth 0 (BasicObject BasicType) userID string --> w-tainted 4x: write(order_db.Order.UserID,
    billing_db.Bill.UserID, analytics_queue.AnalyticsMessage.UserID, shipment_queue.ShipmentMessage.UserID)
    --> r-tainted 2x: read(analytics_queue.AnalyticsMessage.UserID, shipment_queue.ShipmentMessage.UserID)'
  - ' depth 0 (BasicObject BasicType) productID string --> w-tainted 3x: write(order_db.Order.ProductID,
    stock_db.Stock.ProductID, billing_db.Bill.ProductID) --> r-tainted 1x: read(product_db._.productID)'
  - ' depth 0 (BasicObject BasicType) quantity int --> w-tainted 3x: write(order_db.Order.Quantity,
    stock_db.Stock.Quantity, billing_db.Bill.TotalCost)'
  - ' depth 0 (BasicObject BasicType) price int --> w-tainted 1x: write(billing_db.Bill.PricePerUnit)'

(*FrontendImpl).ReadOrder(ctx context.Context, orderID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) f (*shopping_app.FrontendImpl struct{order_service
    shopping_app.OrderService, cart_service shopping_app.CartService})'
  - _ depth 1 (StructObject UserType) shopping_app.FrontendImpl struct{order_service shopping_app.OrderService, cart_service shopping_app.CartService}
  - __ depth 2 (FieldObject FieldType) cart_service shopping_app.CartService
  - ___ depth 3 (ServiceObject ServiceType) cart_service shopping_app.CartService
  - __ depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___ depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) orderID string --> r-tainted 2x: read(order_db._.orderID,
    order_db.Order.OrderID)'

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue'

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) bill_db NoSQLDatabase'

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase'

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (ServiceObject ServiceType) cart_service shopping_app.CartService'

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) stock_service shopping_app.StockService'
  - ' depth 0 (ServiceObject ServiceType) billing_service shopping_app.BillingService'
  - ' depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue'

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) product_db NoSQLDatabase'

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue'

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) stock_db NoSQLDatabase'
