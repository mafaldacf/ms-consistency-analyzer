(*CartServiceImpl).AddProductToCart(ctx context.Context, cartID string, productID string):
  block 2 (IfDone):
  - (inline) (ServiceVariable ServiceType) product_service shopping_app.ProductService
  - (inline) (FieldVariable FieldType) product_service shopping_app.ProductService
  - (inline) (ServiceVariable ServiceType) order_service shopping_app.OrderService
  - (inline) (FieldVariable FieldType) order_service shopping_app.OrderService
  - (inline) (BlueprintBackendVariable BlueprintBackendType) cart_db NoSQLDatabase
  - (inline) (FieldVariable FieldType) cart_db NoSQLDatabase
  - (inline) (StructVariable UserType) shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase}
  - (PointerVariable PointerType) c (*shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ Frontend
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <cartID string> @ Frontend
  - (BasicVariable BasicType) cartID string
  - (inline) (Reference BasicType) ref <productID string> @ Frontend
  - (BasicVariable BasicType) productID string
  - (StructVariable UserType) product shopping_app.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - |-
    (inline) (BasicVariable BasicType) ProductID string -->
       w-tainted 1x: write(cart_db.Cart.ProductID)
  - (inline) (FieldVariable FieldType) ProductID string
  - |-
    (inline) (BasicVariable BasicType) PricePerUnit int -->
       w-tainted 1x: write(cart_db.Cart.PricePerUnit)
  - (inline) (FieldVariable FieldType) PricePerUnit int
  - (StructVariable UserType) product shopping_app.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - (InterfaceVariable UserType) _ .error
  - |-
    (inline) (BasicVariable BasicType) 1 int -->
       w-tainted 1x: write(cart_db.Cart.Quantity)
  - |-
    (inline) (FieldVariable FieldType) Quantity int -->
       w-tainted 1x: write(cart_db.Cart.Quantity)
  - |-
    (inline) (BasicVariable BasicType) ProductID string -->
       w-tainted 1x: write(cart_db.Cart.ProductID)
  - |-
    (inline) (FieldVariable FieldType) ProductID string -->
       w-tainted 1x: write(cart_db.Cart.ProductID)
  - |-
    (inline) (BasicVariable BasicType) PricePerUnit int -->
       w-tainted 1x: write(cart_db.Cart.PricePerUnit)
  - |-
    (inline) (FieldVariable FieldType) PricePerUnit int -->
       w-tainted 1x: write(cart_db.Cart.PricePerUnit)
  - |-
    (StructVariable UserType) cart shopping_app.Cart struct{CartID string, UserID string, ProductID string, Quantity int, PricePerUnit int, Status string} -->
       w-tainted 1x: write(cart_db.Cart)
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart_database, collection = cart_collection}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "cartID" string
  - (inline) (FieldVariable FieldType) Key "cartID" string
  - (inline) (StructVariable StructType) struct{Key "cartID" string, Value string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = cart_database, collection = cart_collection}
  - (InterfaceVariable UserType) _ .error

(*CartServiceImpl).Checkout(ctx context.Context, cartID string):
  block 0 (Body):
  - (inline) (ServiceVariable ServiceType) product_service shopping_app.ProductService
  - (inline) (FieldVariable FieldType) product_service shopping_app.ProductService
  - (inline) (ServiceVariable ServiceType) order_service shopping_app.OrderService
  - (inline) (FieldVariable FieldType) order_service shopping_app.OrderService
  - (inline) (BlueprintBackendVariable BlueprintBackendType) cart_db NoSQLDatabase
  - (inline) (FieldVariable FieldType) cart_db NoSQLDatabase
  - (inline) (StructVariable UserType) shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase}
  - (PointerVariable PointerType) c (*shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) cartID string
  - (inline) (BasicVariable BasicType) UserID string
  - (inline) (FieldVariable FieldType) UserID string
  - (inline) (BasicVariable BasicType) Quantity int
  - (inline) (FieldVariable FieldType) Quantity int
  - (inline) (BasicVariable BasicType) ProductID string
  - (inline) (FieldVariable FieldType) ProductID string
  - (inline) (BasicVariable BasicType) PricePerUnit int
  - (inline) (FieldVariable FieldType) PricePerUnit int
  - (StructVariable UserType) cart shopping_app.Cart struct{CartID string, UserID string, ProductID string, Quantity int, PricePerUnit int, Status string}
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart_database, collection = cart_collection}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "cartID" string
  - (inline) (FieldVariable FieldType) Key "cartID" string
  - (inline) (StructVariable StructType) struct{Key "cartID" string, Value string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = cart_database, collection = cart_collection}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "cartID" string
  - (inline) (FieldVariable FieldType) Key "cartID" string
  - (inline) (StructVariable StructType) struct{Key "cartID" string, Value string}
  - (SliceVariable UserType) filter primitive.D
  - (inline) (BasicVariable BasicType) "completed" string
  - (inline) (FieldVariable FieldType) Value "completed" string
  - (inline) (BasicVariable BasicType) "status" string
  - (inline) (FieldVariable FieldType) Key "status" string
  - (inline) (StructVariable StructType) struct{Key "status" string, Value "completed" string}
  - (SliceVariable UserType) update primitive.D

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) analytics_db NoSQLDatabase
  - (BlueprintBackendVariable BlueprintBackendType) analytics_queue Queue

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) bill_db NoSQLDatabase

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (ServiceVariable ServiceType) order_service shopping_app.OrderService
  - (ServiceVariable ServiceType) product_service shopping_app.ProductService
  - (BlueprintBackendVariable BlueprintBackendType) cart_db NoSQLDatabase

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (ServiceVariable ServiceType) order_service shopping_app.OrderService
  - (ServiceVariable ServiceType) cart_service shopping_app.CartService

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (ServiceVariable ServiceType) stock_service shopping_app.StockService
  - (ServiceVariable ServiceType) billing_service shopping_app.BillingService
  - (ServiceVariable ServiceType) product_service shopping_app.ProductService
  - (BlueprintBackendVariable BlueprintBackendType) order_db NoSQLDatabase
  - (BlueprintBackendVariable BlueprintBackendType) shipment_queue Queue
  - (BlueprintBackendVariable BlueprintBackendType) analytics_queue Queue

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) product_db NoSQLDatabase

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (ServiceVariable ServiceType) order_service shopping_app.OrderService
  - (BlueprintBackendVariable BlueprintBackendType) shipment_db NoSQLDatabase
  - (BlueprintBackendVariable BlueprintBackendType) shipment_queue Queue

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) stock_db NoSQLDatabase
