(*CartServiceImpl).AddProductToCart(ctx context.Context, cartID string, productID string):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) c (*shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___5 depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - __6 depth 2 (FieldObject FieldType) product_service shopping_app.ProductService
  - ___7 depth 3 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ Frontend
  - '0 depth 0 (BasicObject BasicType) cartID string --> r-tainted 1x: read(cart_db._.cartID)'
  - '_1 depth 1 (Reference BasicType) ref <cartID string> @ Frontend --> r-tainted
    1x: read(cart_db._.cartID)'
  - '0 depth 0 (BasicObject BasicType) productID string --> r-tainted 1x: read(product_db._.productID)'
  - '_1 depth 1 (Reference BasicType) ref <productID string> @ Frontend --> r-tainted
    1x: read(product_db._.productID)'
  - 0 depth 0 (StructObject UserType) product shopping_app.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - 0 depth 0 (StructObject UserType) product shopping_app.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - '_1 depth 1 (Reference UserType) ref <product shopping_app.Product struct{ProductID
    string, Description string, PricePerUnit int, Category string}> @ ProductService
    --> r-tainted 1x: read(product_db.Product)'
  - _2 depth 1 (FieldObject FieldType) PricePerUnit int
  - '__3 depth 2 (BasicObject BasicType) PricePerUnit int --> w-tainted 1x: write(cart_db.Cart.PricePerUnit)
    --> r-tainted 1x: read(cart_db.Cart.PricePerUnit)'
  - _4 depth 1 (FieldObject FieldType) ProductID string
  - '__5 depth 2 (BasicObject BasicType) ProductID string --> w-tainted 1x: write(cart_db.Cart.ProductID)
    --> r-tainted 1x: read(cart_db.Cart.ProductID)'
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference UserType) ref <err .error> @ ProductService
  - '0 depth 0 (StructObject UserType) cart shopping_app.Cart struct{CartID string,
    UserID string, ProductID string, Quantity int, PricePerUnit int, Status string}
    --> w-tainted 1x: write(cart_db.Cart) --> r-tainted 4x: read(cart_db.Cart, cart_db.Cart.PricePerUnit,
    cart_db.Cart.ProductID, cart_db.Cart.Quantity)'
  - '_1 depth 1 (FieldObject FieldType) PricePerUnit int --> w-tainted 1x: write(cart_db.Cart.PricePerUnit)
    --> r-tainted 1x: read(cart_db.Cart.PricePerUnit)'
  - '__2 depth 2 (BasicObject BasicType) PricePerUnit int --> w-tainted 1x: write(cart_db.Cart.PricePerUnit)
    --> r-tainted 1x: read(cart_db.Cart.PricePerUnit)'
  - '_3 depth 1 (FieldObject FieldType) ProductID string --> w-tainted 1x: write(cart_db.Cart.ProductID)
    --> r-tainted 1x: read(cart_db.Cart.ProductID)'
  - '__4 depth 2 (BasicObject BasicType) ProductID string --> w-tainted 1x: write(cart_db.Cart.ProductID)
    --> r-tainted 1x: read(cart_db.Cart.ProductID)'
  - '_5 depth 1 (FieldObject FieldType) Quantity int --> w-tainted 1x: write(cart_db.Cart.Quantity)
    --> r-tainted 1x: read(cart_db.Cart.Quantity)'
  - '__6 depth 2 (BasicObject BasicType) 1 int --> w-tainted 1x: write(cart_db.Cart.Quantity)
    --> r-tainted 1x: read(cart_db.Cart.Quantity)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart_database, collection = cart_collection}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "cartID" string, Key "cartID" string, Value string, Value string}
  - __2 depth 2 (FieldObject FieldType) Key "cartID" string
  - ___3 depth 3 (BasicObject BasicType) "cartID" string
  - __4 depth 2 (FieldObject FieldType) Value string
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database
    = cart_database, collection = cart_collection} --> r-tainted 1x: read(cart_db._)'
  - 0 depth 0 (InterfaceObject UserType) _ .error

(*CartServiceImpl).Checkout(ctx context.Context, cartID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) c (*shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) shopping_app.CartServiceImpl struct{order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) order_service shopping_app.OrderService
  - ___5 depth 3 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - __6 depth 2 (FieldObject FieldType) product_service shopping_app.ProductService
  - ___7 depth 3 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) cartID string
  - 0 depth 0 (StructObject UserType) cart shopping_app.Cart struct{CartID string, UserID string, ProductID string, Quantity int, PricePerUnit int, Status string}
  - _1 depth 1 (FieldObject FieldType) PricePerUnit int
  - __2 depth 2 (BasicObject BasicType) PricePerUnit int
  - _3 depth 1 (FieldObject FieldType) ProductID string
  - __4 depth 2 (BasicObject BasicType) ProductID string
  - _5 depth 1 (FieldObject FieldType) Quantity int
  - __6 depth 2 (BasicObject BasicType) Quantity int
  - _7 depth 1 (FieldObject FieldType) UserID string
  - __8 depth 2 (BasicObject BasicType) UserID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart_database, collection = cart_collection}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "cartID" string, Key "cartID" string, Value string, Value string}
  - __2 depth 2 (FieldObject FieldType) Key "cartID" string
  - ___3 depth 3 (BasicObject BasicType) "cartID" string
  - __4 depth 2 (FieldObject FieldType) Value string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database = cart_database, collection = cart_collection}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) filter primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "cartID" string, Key "cartID" string, Value string, Value string}
  - __2 depth 2 (FieldObject FieldType) Key "cartID" string
  - ___3 depth 3 (BasicObject BasicType) "cartID" string
  - __4 depth 2 (FieldObject FieldType) Value string
  - 0 depth 0 (SliceObject UserType) update primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "status" string, Key "status" string, Value "completed" string, Value "completed" string}
  - __2 depth 2 (FieldObject FieldType) Key "status" string
  - ___3 depth 3 (BasicObject BasicType) "status" string
  - __4 depth 2 (FieldObject FieldType) Value "completed" string
  - ___5 depth 3 (BasicObject BasicType) "completed" string

.NewAnalyticsServiceImpl(ctx context.Context, analytics_db NoSQLDatabase, analytics_queue Queue):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue

.NewBillingServiceImpl(ctx context.Context, bill_db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) bill_db NoSQLDatabase

.NewCartServiceImpl(ctx context.Context, order_service shopping_app.OrderService, product_service shopping_app.ProductService, cart_db NoSQLDatabase)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - 0 depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase

.NewFrontendImpl(ctx context.Context, order_service shopping_app.OrderService, cart_service shopping_app.CartService):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - 0 depth 0 (ServiceObject ServiceType) cart_service shopping_app.CartService

.NewOrderServiceImpl(ctx context.Context, stock_service shopping_app.StockService, billing_service shopping_app.BillingService, product_service shopping_app.ProductService, order_db NoSQLDatabase, shipment_queue Queue, analytics_queue Queue)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) stock_service shopping_app.StockService
  - 0 depth 0 (ServiceObject ServiceType) billing_service shopping_app.BillingService
  - 0 depth 0 (ServiceObject ServiceType) product_service shopping_app.ProductService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) order_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) analytics_queue Queue

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) product_db NoSQLDatabase

.NewShipmentServiceImpl(ctx context.Context, order_service shopping_app.OrderService, shipment_db NoSQLDatabase, shipment_queue Queue)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) order_service shopping_app.OrderService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) shipment_queue Queue

.NewStockServiceImpl(ctx context.Context, stock_db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) stock_db NoSQLDatabase
