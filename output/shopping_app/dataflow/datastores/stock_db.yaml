STOCK_DB.Stock:
- write <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
  from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>

STOCK_DB.Stock.ProductID:
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <productID string> @ OrderService (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <productID string> @ OrderService (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <productID string (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <ref <productID string> @ OrderService (Reference)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <productID string (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <productID string (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <productID string (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <productID string (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <productID string (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- read <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ CartService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ OrderService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ CartService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ OrderService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- write <ProductID string (FieldObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>

STOCK_DB.Stock.Quantity:
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <quantity int> @ OrderService (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <quantity int> @ Frontend (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <quantity int> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <quantity int> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <quantity int> @ OrderService (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <ref <quantity int> @ Frontend (Reference)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
- write <quantity int (BasicObject)> from <bill shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost } (StructObject)>
- write <Quantity int (FieldObject)> from <stock shopping_app.Stock struct{ProductID string, Quantity int} (StructObject)>
