ANALYTICS_QUEUE.AnalyticsMessage.UserID:
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <UserID string (FieldObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <UserID string (FieldObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>

ORDER_DB._:
- read <result NoSQLCursor {database = order_database, collection = order_collection} (BlueprintBackendObject)>
- read <result NoSQLCursor {database = order_database, collection = order_collection} (BlueprintBackendObject)>

ORDER_DB._.orderID:
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (FieldObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <OrderID interface{} (InterfaceObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ Frontend (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (FieldObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <OrderID interface{} (InterfaceObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ Frontend (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>

ORDER_DB.Order:
- write <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- read <result NoSQLCursor {database = order_database, collection = order_collection} (BlueprintBackendObject)>
- read <result NoSQLCursor {database = order_database, collection = order_collection} (BlueprintBackendObject)>

ORDER_DB.Order.OrderID:
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <cartID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <OrderID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <OrderID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <cartID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <OrderID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <OrderID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <cartID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <OrderID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <OrderID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <OrderID string (FieldObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (FieldObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <OrderID interface{} (InterfaceObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ Frontend (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (FieldObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <OrderID interface{} (InterfaceObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ Frontend (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>

ORDER_DB.Order.ProductID:
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ProductID string (FieldObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>

ORDER_DB.Order.Quantity:
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <quantity int> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <quantity int> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <quantity int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <Quantity int (FieldObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>

ORDER_DB.Order.Timestamp:
- write <1 int (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <Timestamp 1 int (FieldObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>

ORDER_DB.Order.UserID:
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <UserID string (FieldObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>

Order:
- read <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- read <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>

SHIPMENT_QUEUE.ShipmentMessage.OrderID:
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <cartID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <OrderID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <OrderID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <cartID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <cartID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <cartID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <OrderID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <OrderID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <cartID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <OrderID string (FieldObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <OrderID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <OrderID string (FieldObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <OrderID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>

SHIPMENT_QUEUE.ShipmentMessage.UserID:
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- write <userID string (BasicObject)> from <analyticsMessage shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <userID string> @ Frontend (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ AnalyticsService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <userID string (BasicObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <userID string> @ Frontend (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ AnalyticsService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>
- read <UserID interface{} (InterfaceObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <userID string (BasicObject)> from <event (*map[string]interface{}) (PointerObject)>
- write <UserID string (FieldObject)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- write <ref <UserID interface{}> @ ShipmentService (Reference)> from <shipmentMessage shopping_app.ShipmentMessage struct{OrderID string, UserID string} (StructObject)>
- read <UserID string (FieldObject)> from <event (*map[string]interface{}) (PointerObject)>
- read <ref <UserID interface{}> @ ShipmentService (Reference)> from <event (*map[string]interface{}) (PointerObject)>

string:
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (FieldObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <OrderID interface{} (InterfaceObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ Frontend (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <OrderID string> @ ShipmentService (Reference)> from <orderID string (BasicObject)>
- read <OrderID string (FieldObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <OrderID interface{} (InterfaceObject)> from <orderID string (BasicObject)>
- read <OrderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ Frontend (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <ref <OrderID string> @ ShipmentService (Reference)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (FieldObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <ref <OrderID string> @ ShipmentService (Reference)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (FieldObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <ref <OrderID string> @ ShipmentService (Reference)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (FieldObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID interface{} (InterfaceObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- write <OrderID string (BasicObject)> from <shipment shopping_app.Shipment struct{OrderID string, UserID string, Status "pending" string} (StructObject)>
- read <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ CartService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ OrderService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ CartService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ OrderService (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <ref <productID string> @ Frontend (Reference)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- read <productID string (BasicObject)> from <productID string (BasicObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <ref <productID string> @ Frontend (Reference)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- write <productID string (BasicObject)> from <order shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp 1 int} (StructObject)>
- read <UserID string (BasicObject)>
- read <UserID string (BasicObject)> from <UserID string (BasicObject)>
- read <ref <UserID string> @ AnalyticsService (Reference)> from <UserID string (BasicObject)>
- read <UserID string (FieldObject)> from <UserID string (BasicObject)>
- read <UserID string (BasicObject)> from <UserID string (BasicObject)>
- read <UserID interface{} (InterfaceObject)> from <UserID string (BasicObject)>
- write <UserID string (BasicObject)> from <updatedAnalytics shopping_app.Analytics struct{UserID string, Categories []string} (StructObject)>
- write <ref <UserID string> @ AnalyticsService (Reference)> from <updatedAnalytics shopping_app.Analytics struct{UserID string, Categories []string} (StructObject)>
- write <UserID string (FieldObject)> from <updatedAnalytics shopping_app.Analytics struct{UserID string, Categories []string} (StructObject)>
- write <UserID string (BasicObject)> from <updatedAnalytics shopping_app.Analytics struct{UserID string, Categories []string} (StructObject)>
- write <UserID interface{} (InterfaceObject)> from <updatedAnalytics shopping_app.Analytics struct{UserID string, Categories []string} (StructObject)>
- write <UserID string (BasicObject)> from <updatedAnalytics shopping_app.Analytics struct{UserID string, Categories []string} (StructObject)>
- write <ProductID string (BasicObject)> from <cart shopping_app.Cart struct{CartID string, UserID string, ProductID string, Quantity int, PricePerUnit int, Status string} (StructObject)>
- read <cartID string (BasicObject)>
- read <cartID string (BasicObject)> from <cartID string (BasicObject)>
- read <ref <cartID string> @ Frontend (Reference)> from <cartID string (BasicObject)>
- read <cartID string (BasicObject)> from <cartID string (BasicObject)>
