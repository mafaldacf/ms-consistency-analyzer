(*FrontendImpl).AddProductToCart(ctx context.Context, cartID string, productID string):
- SERVICE CALL @ AddProductToCart >> (*shopping_simple.CartServiceImpl).AddProductToCart(ctx context.Context, cartID string, productID string) (shopping_simple.CartProduct struct{CartID string, ProductID string, PricePerUnit int, Quantity 1 int}, error)

(*FrontendImpl).CreateCart(ctx context.Context, cartID string):
- SERVICE CALL @ CreateCart >> (*shopping_simple.CartServiceImpl).CreateCart(ctx context.Context, cartID string) (shopping_simple.Cart struct{CartID string, TotalQuantity 1 int, LastProductID string, Products []string}, error)

(*FrontendImpl).CreateProduct(ctx context.Context, productID string, description string, pricePerUnit int, category string):
- SERVICE CALL @ CreateProduct >> (*shopping_simple.ProductServiceImpl).CreateProduct(ctx context.Context, productID string, description string, pricePerUnit int, category string) (shopping_simple.Product struct{ProductID string, Description string, PricePerUnit int, Category string}, error)

(*FrontendImpl).DeleteProduct(ctx context.Context, productID string):
- SERVICE CALL @ DeleteProduct >> (*shopping_simple.ProductServiceImpl).DeleteProduct(ctx context.Context, productID string) (bool, error)

(*FrontendImpl).GetAllProducts(ctx context.Context):
- SERVICE CALL @ GetAllProducts >> (*shopping_simple.ProductServiceImpl).GetAllProducts(ctx context.Context) ([]shopping_simple.Product struct{ProductID string, Description string, PricePerUnit int, Category string}, error)

(*FrontendImpl).GetCart(ctx context.Context, cartID string):
- SERVICE CALL @ GetCart >> (*shopping_simple.CartServiceImpl).GetCart(ctx context.Context, cartID string) (shopping_simple.Cart struct{CartID string, TotalQuantity 1 int, LastProductID string, Products []string}, error)

.NewCartServiceImpl(ctx context.Context, product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue)
:
 []

.NewFrontendImpl(ctx context.Context, product_service shopping_simple.ProductService, cart_service shopping_simple.CartService): []

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase, product_queue Queue): []
