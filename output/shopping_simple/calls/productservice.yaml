? (*ProductServiceImpl).CreateProduct(ctx context.Context, productID string, description string, pricePerUnit int, category string)
:
	- DATASTORE CALL @ product_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

(*ProductServiceImpl).DeleteProduct(ctx context.Context, productID string):
- DATASTORE CALL @ product_db >> NoSQLDatabase.NoSQLCollection.DeleteOne(ctx context.Context, filter bson.D) interface{}

(*ProductServiceImpl).GetAllProducts(ctx context.Context):
- DATASTORE CALL @ product_db >> NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*ProductServiceImpl).GetProduct(ctx context.Context, productID string):
- DATASTORE CALL @ product_db >> NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

.NewCartServiceImpl(ctx context.Context, product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue)
:
 []

.NewFrontendImpl(ctx context.Context, product_service shopping_simple.ProductService, cart_service shopping_simple.CartService): []

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase, product_queue Queue): []
