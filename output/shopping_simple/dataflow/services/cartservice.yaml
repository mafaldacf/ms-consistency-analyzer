(*CartServiceImpl).AddProductToCart(ctx context.Context, cartID string, productID string):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers int})
  - _1 depth 1 (StructObject UserType) shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers 4 int}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) num_workers 4 int
  - ___5 depth 3 (BasicObject BasicType) 4 int
  - __6 depth 2 (FieldObject FieldType) product_queue Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
  - __8 depth 2 (FieldObject FieldType) product_service shopping_simple.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ Frontend
  - '0 depth 0 (BasicObject BasicType) cartID string --> w-tainted 1x: write(cart_db.Cart.CartID)
    --> r-tainted 1x: read(cart_db.Cart.CartID)'
  - '_1 depth 1 (Reference BasicType) ref <cartID string> @ Frontend --> w-tainted
    1x: write(cart_db.Cart.CartID) --> r-tainted 1x: read(cart_db.Cart.CartID)'
  - '0 depth 0 (BasicObject BasicType) productID string --> w-tainted 2x: write(cart_db.Cart.LastProductID,
    cart_db.Cart.Products) --> r-tainted 1x: read(product_db.Product.ProductID)'
  - '_1 depth 1 (Reference BasicType) ref <productID string> @ Frontend --> w-tainted
    1x: write(cart_db.Cart.LastProductID) --> r-tainted 1x: read(product_db.Product.ProductID)'
  - 0 depth 0 (StructObject UserType) product shopping_simple.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - 0 depth 0 (StructObject UserType) product shopping_simple.Product struct{ProductID string, Description string, PricePerUnit int, Category string}
  - '_1 depth 1 (Reference UserType) ref <product shopping_simple.Product struct{ProductID
    string, Description string, PricePerUnit int, Category string}> @ ProductService
    --> r-tainted 1x: read(product_db.Product)'
  - _2 depth 1 (FieldObject FieldType) PricePerUnit int
  - __3 depth 2 (BasicObject BasicType) PricePerUnit int
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference UserType) ref <err .error> @ ProductService
  - '0 depth 0 (StructObject UserType) cart shopping_simple.Cart struct{CartID string,
    LastProductID string, TotalQuantity int, Products []string} --> r-tainted 1x:
    read(cart_db.Cart)'
  - 0 depth 0 (StructObject UserType) cartProduct shopping_simple.CartProduct struct{CartID string, ProductID string, Quantity int, PricePerUnit int}
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart_database, collection = cart_collection}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) filter primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "cartid" string, Key "cartid" string, Value string, Value string}
  - __2 depth 2 (FieldObject FieldType) Key "cartid" string
  - ___3 depth 3 (BasicObject BasicType) "cartid" string
  - __4 depth 2 (FieldObject FieldType) Value string
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database
    = cart_database, collection = cart_collection} --> r-tainted 1x: read(cart_db.Cart)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (StructObject UserType) cartProduct shopping_simple.CartProduct struct{CartID string, ProductID string, Quantity 1 int, PricePerUnit int}
  - _1 depth 1 (FieldObject FieldType) CartID string
  - _4 depth 1 (FieldObject FieldType) PricePerUnit int
  - _6 depth 1 (FieldObject FieldType) ProductID string
  - _9 depth 1 (FieldObject FieldType) Quantity 1 int
  - __10 depth 2 (BasicObject BasicType) 1 int
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) _ .error

(*CartServiceImpl).CreateCart(ctx context.Context, cartID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers int})
  - _1 depth 1 (StructObject UserType) shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers 4 int}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) num_workers 4 int
  - ___5 depth 3 (BasicObject BasicType) 4 int
  - __6 depth 2 (FieldObject FieldType) product_queue Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
  - __8 depth 2 (FieldObject FieldType) product_service shopping_simple.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ Frontend
  - '0 depth 0 (BasicObject BasicType) cartID string --> w-tainted 1x: write(cart_db.Cart.CartID)'
  - '_1 depth 1 (Reference BasicType) ref <cartID string> @ Frontend --> w-tainted
    1x: write(cart_db.Cart.CartID)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart_database, collection = cart_database}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - '0 depth 0 (StructObject UserType) cart shopping_simple.Cart struct{CartID string,
    LastProductID string, TotalQuantity int, Products []string} --> w-tainted 1x:
    write(cart_db.Cart)'
  - '_1 depth 1 (FieldObject FieldType) CartID string --> w-tainted 1x: write(cart_db.Cart.CartID)'
  - 0 depth 0 (InterfaceObject UserType) err .error

(*CartServiceImpl).GetCart(ctx context.Context, cartID string):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers int})
  - _1 depth 1 (StructObject UserType) shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers 4 int}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) num_workers 4 int
  - ___5 depth 3 (BasicObject BasicType) 4 int
  - __6 depth 2 (FieldObject FieldType) product_queue Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
  - __8 depth 2 (FieldObject FieldType) product_service shopping_simple.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ Frontend
  - '0 depth 0 (BasicObject BasicType) cartID string --> r-tainted 1x: read(cart_db.Cart.CartID)'
  - '_1 depth 1 (Reference BasicType) ref <cartID string> @ Frontend --> r-tainted
    1x: read(cart_db.Cart.CartID)'
  - '0 depth 0 (StructObject UserType) cart shopping_simple.Cart struct{CartID string,
    LastProductID string, TotalQuantity int, Products []string} --> r-tainted 1x:
    read(cart_db.Cart)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart_database, collection = cart_database}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) filter primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "cartid" string, Key "cartid" string, Value string, Value string}
  - __2 depth 2 (FieldObject FieldType) Key "cartid" string
  - ___3 depth 3 (BasicObject BasicType) "cartid" string
  - __4 depth 2 (FieldObject FieldType) Value string
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) result NoSQLCursor {database
    = cart_database, collection = cart_database} --> r-tainted 1x: read(cart_db.Cart)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*CartServiceImpl).Run(ctx context.Context):
  block 4 (ForPost):
  - 0 depth 0 (PointerObject PointerType) s (*shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers int})
  - _1 depth 1 (StructObject UserType) shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers 4 int}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) num_workers 4 int
  - ___5 depth 3 (BasicObject BasicType) 4 int
  - __6 depth 2 (FieldObject FieldType) product_queue Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
  - __8 depth 2 (FieldObject FieldType) product_service shopping_simple.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) wg sync.WaitGroup
  - 0 depth 0 (BasicObject BasicType) i 3 int
  - 0 depth 0 (BasicObject BasicType) i 3 int
  - 0 depth 0 (InterfaceObject UserType) err .error

(*CartServiceImpl).removeProduct(ctx context.Context, message shopping_simple.ProductQueueMessage struct{ProductID string, Remove bool})
:
 block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers int})
  - _1 depth 1 (StructObject UserType) shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers 4 int}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) num_workers 4 int
  - ___5 depth 3 (BasicObject BasicType) 4 int
  - __6 depth 2 (FieldObject FieldType) product_queue Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
  - __8 depth 2 (FieldObject FieldType) product_service shopping_simple.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) message shopping_simple.ProductQueueMessage
    struct{ProductID string, Remove bool}
  - _1 depth 1 (FieldObject FieldType) ProductID string
  - __2 depth 2 (BasicObject BasicType) ProductID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart_database, collection = cart_database}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (SliceObject UserType) filter primitive.D
  - 0 depth 0 (SliceObject UserType) update primitive.D
  - _1 depth 1 (StructObject StructType) struct{Key "$dec" string, Key "$dec" string, Value primitive.D, Value primitive.D}
  - __2 depth 2 (FieldObject FieldType) Key "$dec" string
  - ___3 depth 3 (BasicObject BasicType) "$dec" string
  - __4 depth 2 (FieldObject FieldType) Value primitive.D
  - ___5 depth 3 (SliceObject UserType) primitive.D
  - ____6 depth 4 (StructObject StructType) struct{Key "totalquantity" string, Key "totalquantity" string, Value 1 int, Value 1 int}
  - _____7 depth 5 (FieldObject FieldType) Key "totalquantity" string
  - ______8 depth 6 (BasicObject BasicType) "totalquantity" string
  - _____9 depth 5 (FieldObject FieldType) Value 1 int
  - ______10 depth 6 (BasicObject BasicType) 1 int
  - _11 depth 1 (StructObject StructType) struct{Key "$pull" string, Key "$pull" string, Value primitive.D, Value primitive.D}
  - __12 depth 2 (FieldObject FieldType) Key "$pull" string
  - ___13 depth 3 (BasicObject BasicType) "$pull" string
  - __14 depth 2 (FieldObject FieldType) Value primitive.D
  - ___15 depth 3 (SliceObject UserType) primitive.D
  - ____16 depth 4 (StructObject StructType) struct{Key "products" string, Key "products" string, Value string, Value string}
  - _____17 depth 5 (FieldObject FieldType) Key "products" string
  - ______18 depth 6 (BasicObject BasicType) "products" string
  - _____19 depth 5 (FieldObject FieldType) Value string
  - 0 depth 0 (BasicObject BasicType) updated int
  - 0 depth 0 (InterfaceObject UserType) err .error

(*CartServiceImpl).workerThread(ctx context.Context):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers int})
  - _1 depth 1 (StructObject UserType) shopping_simple.CartServiceImpl struct{product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue, num_workers 4 int}
  - __2 depth 2 (FieldObject FieldType) cart_db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) num_workers 4 int
  - ___5 depth 3 (BasicObject BasicType) 4 int
  - __6 depth 2 (FieldObject FieldType) product_queue Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
  - __8 depth 2 (FieldObject FieldType) product_service shopping_simple.ProductService
  - ___9 depth 3 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ChanObject ChanType) forever chan struct{}

.NewCartServiceImpl(ctx context.Context, product_service shopping_simple.ProductService, cart_db NoSQLDatabase, product_queue Queue)
:
 block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) cart_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) product_queue Queue

.NewFrontendImpl(ctx context.Context, product_service shopping_simple.ProductService, cart_service shopping_simple.CartService):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ServiceObject ServiceType) product_service shopping_simple.ProductService
  - 0 depth 0 (ServiceObject ServiceType) cart_service shopping_simple.CartService

.NewProductServiceImpl(ctx context.Context, product_db NoSQLDatabase, product_queue Queue):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) product_db NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) product_queue Queue
