? (*PaymentServiceImpl).AddMoney(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
	- DATASTORE CALL @ money_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

(*PaymentServiceImpl).Cleanup(ctx context.Context):
- DATASTORE CALL @ money_db >> NoSQLDatabase.NoSQLCollection.DeleteMany(ctx context.Context, filter bson.D) interface{}
- DATASTORE CALL @ money_db >> NoSQLDatabase.NoSQLCollection.DeleteMany(ctx context.Context, filter bson.D) interface{}

(*PaymentServiceImpl).InitPayment(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
	- DATASTORE CALL @ payments_db >> NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})
  - DATASTORE CALL @ payments_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

(*PaymentServiceImpl).Pay(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
	- DATASTORE CALL @ payments_db >> NoSQLDatabase.NoSQLCollection.Upsert(ctx context.Context, filter bson.D, document interface{}) (err, interface{})

(*PaymentServiceImpl).Query(ctx context.Context):
- DATASTORE CALL @ payments_db >> NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

.NewPaymentServiceImpl(ctx context.Context, payDB NoSQLDatabase, moneyDB NoSQLDatabase): []
