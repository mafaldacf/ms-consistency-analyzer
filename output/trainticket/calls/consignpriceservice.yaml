? (*ConsignPriceServiceImpl).CreateAndModifyPriceConfig(ctx context.Context, priceConfig consignprice.ConsignPrice struct{ID string, Index int64, InitialWeight float64, InitialPrice float64, WithinPrice float64, BeyondPrice float64})
:
	- DATASTORE CALL @ consignprice_db >> NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})
  - DATASTORE CALL @ consignprice_db >> NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{}) (err, interface{})
  - DATASTORE CALL @ consignprice_db >> NoSQLDatabase.InsertOne(ctx context.Context, document interface{}) interface{}

(*ConsignPriceServiceImpl).GetPriceByWeightAndRegion(ctx context.Context, weight float64, isWithinRegion bool):
- INTERNAL CALL >> (*consignprice.ConsignPriceServiceImpl).GetPriceConfig(ctx context.Context)
  (consignprice.ConsignPrice struct{ID string, Index int64, InitialWeight float64, InitialPrice float64, WithinPrice float64, BeyondPrice float64}, error)

(*ConsignPriceServiceImpl).GetPriceConfig(ctx context.Context):
- DATASTORE CALL @ consignprice_db >> NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*ConsignPriceServiceImpl).GetPriceInfo(ctx context.Context):
- DATASTORE CALL @ consignprice_db >> NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

.NewConsignPriceServiceImpl(ctx context.Context, db NoSQLDatabase): []
