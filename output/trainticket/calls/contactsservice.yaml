? (*ContactsServiceImpl).CreateContacts(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})
:
	- DATASTORE CALL @ contacts_db >> NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})
  - DATASTORE CALL @ contacts_db >> NoSQLDatabase.InsertOne(ctx context.Context, document interface{}) interface{}

(*ContactsServiceImpl).Delete(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})
:
	- DATASTORE CALL @ contacts_db >> NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D) interface{}

(*ContactsServiceImpl).FindContactsByAccountId(ctx context.Context, id string):
- DATASTORE CALL @ contacts_db >> NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*ContactsServiceImpl).FindContactsById(ctx context.Context, id string):
- DATASTORE CALL @ contacts_db >> NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*ContactsServiceImpl).GetAllContacts(ctx context.Context):
- DATASTORE CALL @ contacts_db >> NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*ContactsServiceImpl).Modify(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})
:
	- DATASTORE CALL @ contacts_db >> NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{}) (err, interface{})

.NewContactsServiceImpl(ctx context.Context, db NoSQLDatabase): []
