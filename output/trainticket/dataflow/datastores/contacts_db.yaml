'[]contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}':
- read <account_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (ArrayObject)>
  from <account_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (ArrayObject)>
- read <all_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (ArrayObject)> from
  <all_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (ArrayObject)>

CONTACTS_DB._:
- read <res NoSQLCursor {database = contacts, collection = contacts} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = contacts, collection = contacts} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = contacts, collection = contacts} (BlueprintBackendObject)>

CONTACTS_DB._.accountid:
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <AccountID string (BasicObject)>
- read <AccountID string (BasicObject)> from <AccountID string (BasicObject)>
- write <AccountID string (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

CONTACTS_DB._.documentnumber:
- read <DocumentNumber string (BasicObject)>
- read <DocumentNumber string (BasicObject)> from <DocumentNumber string (BasicObject)>
- write <DocumentNumber string (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

CONTACTS_DB._.documenttype:
- read <DocumentType int (BasicObject)>
- read <DocumentType int (BasicObject)> from <DocumentType int (BasicObject)>
- write <DocumentType int (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

CONTACTS_DB._.id:
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>

CONTACTS_DB.Contact:
- write <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- write <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)> from
  <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- read <res NoSQLCursor {database = contacts, collection = contacts} (BlueprintBackendObject)>

CONTACTS_DB.Contact.AccountID:
- read <AccountID string (BasicObject)>
- read <AccountID string (BasicObject)> from <AccountID string (BasicObject)>
- write <AccountID string (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- write <AccountID string (FieldObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

CONTACTS_DB.Contact.DocumentNumber:
- read <DocumentNumber string (BasicObject)>
- read <DocumentNumber string (BasicObject)> from <DocumentNumber string (BasicObject)>
- write <DocumentNumber string (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- write <DocumentNumber string (FieldObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

CONTACTS_DB.Contact.DocumentType:
- read <DocumentType int (BasicObject)>
- read <DocumentType int (BasicObject)> from <DocumentType int (BasicObject)>
- write <DocumentType int (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- write <DocumentType int (FieldObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

Contact:
- read <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)> from
  <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- read <existing contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)> from
  <existing contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>

int:
- read <DocumentType int (BasicObject)>
- read <DocumentType int (BasicObject)> from <DocumentType int (BasicObject)>
- write <DocumentType int (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- read <0 int (BasicObject)>
- read <0 int (BasicObject)> from <0 int (BasicObject)>
- read <0 int (BasicObject)>
- read <0 int (BasicObject)> from <0 int (BasicObject)>
- read <0 int (BasicObject)>
- read <0 int (BasicObject)> from <0 int (BasicObject)>
- read <0 int (BasicObject)>
- read <0 int (BasicObject)> from <0 int (BasicObject)>
