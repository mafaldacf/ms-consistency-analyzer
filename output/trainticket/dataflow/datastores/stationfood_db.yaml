? '[]stationfood.StationFoodStore struct{ID string, StationName string, StoreName
  string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food
  struct{Name string, Price float64}}'
:
	- read <stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)> from <stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)>
  - read <stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)> from <stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)>
  - read <stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)> from <stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)>

D:
- read <primitive.D (SliceObject)>
- read <primitive.D (SliceObject)> from <primitive.D (SliceObject)>
- read <struct{ primitive.A, "$in" string, primitive.A} (StructObject)> from <primitive.D (SliceObject)>

STATIONFOOD_DB._:
- read <res NoSQLCursor {database = stationfood, collection = stationfood} (BlueprintBackendObject)>

STATIONFOOD_DB._.id:
- read <ID string (BasicObject)>
- read <ID string (BasicObject)> from <ID string (BasicObject)>
- write <ID string (BasicObject)> from <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>

STATIONFOOD_DB.StationFoodStore:
- write <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- write <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)> from <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <res NoSQLCursor {database = stationfood, collection = stationfood} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = stationfood, collection = stationfood} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = stationfood, collection = stationfood} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = stationfood, collection = stationfood} (BlueprintBackendObject)>

STATIONFOOD_DB.StationFoodStore.ID:
- read <ID string (BasicObject)>
- read <ID string (BasicObject)> from <ID string (BasicObject)>
- write <ID string (BasicObject)> from <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- write <ID string (FieldObject)> from <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>

STATIONFOOD_DB.StationFoodStore.StationName:
- read <station string (BasicObject)>
- read <station string (BasicObject)> from <station string (BasicObject)>
- read <primitive.D (SliceObject)>
- read <primitive.D (SliceObject)> from <primitive.D (SliceObject)>
- read <struct{ primitive.A, "$in" string, primitive.A} (StructObject)> from <primitive.D (SliceObject)>

StationFoodStore:
- read <st stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)> from <st stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)> from <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
