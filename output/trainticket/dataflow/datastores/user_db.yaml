? '[]user.User struct{UserID string, Username string, Password string, Gender int64,
  DocumentType int64, DocumentNum string, Email string}'
:
	- read <users []user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (ArrayObject)>
    from <users []user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (ArrayObject)>

USER_DB._:
- read <res NoSQLCursor {database = user, collection = user} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = user, collection = user} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = user, collection = user} (BlueprintBackendObject)>

USER_DB._.userid:
- read <userID string (BasicObject)>
- read <userID string (BasicObject)> from <userID string (BasicObject)>

USER_DB._.username:
- read <username string (BasicObject)>
- read <username string (BasicObject)> from <username string (BasicObject)>

USER_DB.User:
- write <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)>
- write <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)> from
  <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)>

User:
- read <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)> from
  <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)>
- read <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)> from
  <user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} (StructObject)>

string:
- read <userID string (BasicObject)>
- read <userID string (BasicObject)> from <userID string (BasicObject)>
- read <username string (BasicObject)>
- read <username string (BasicObject)> from <username string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <AccountID string (BasicObject)>
- read <AccountID string (BasicObject)> from <AccountID string (BasicObject)>
- write <AccountID string (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- read <DocumentNumber string (BasicObject)>
- read <DocumentNumber string (BasicObject)> from <DocumentNumber string (BasicObject)>
- write <DocumentNumber string (BasicObject)> from <contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} (StructObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <ID string> @ AssuranceService (Reference)> from <id string (BasicObject)>
- read <ID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <ID string> @ AssuranceService (Reference)> from <id string (BasicObject)>
- read <ID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <ID string> @ PriceService (Reference)> from <id string (BasicObject)>
- read <ID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <ID string> @ PriceService (Reference)> from <id string (BasicObject)>
- read <ID string (BasicObject)> from <id string (BasicObject)>
- write <ID string (BasicObject)> from <pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} (StructObject)>
- write <id string (BasicObject)> from <pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} (StructObject)>
- write <ID string (BasicObject)> from <pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} (StructObject)>
- write <id string (BasicObject)> from <pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} (StructObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <* string> @ StationService (Reference)> from <id string (BasicObject)>
- read <* string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <* string> @ StationService (Reference)> from <id string (BasicObject)>
- read <* string (BasicObject)> from <id string (BasicObject)>
- read <routeID string (BasicObject)>
- read <routeID string (BasicObject)> from <routeID string (BasicObject)>
- read <ref <routeid []string> @ PriceService (Reference)> from <routeID string (BasicObject)>
- read <routeid []string (SliceObject)> from <routeID string (BasicObject)>
- read <rt string (BasicObject)> from <routeID string (BasicObject)>
- read <":" string (BasicObject)> from <routeID string (BasicObject)>
- read <routeID string (BasicObject)>
- read <routeID string (BasicObject)> from <routeID string (BasicObject)>
- read <ref <routeid []string> @ PriceService (Reference)> from <routeID string (BasicObject)>
- read <routeid []string (SliceObject)> from <routeID string (BasicObject)>
- read <rt string (BasicObject)> from <routeID string (BasicObject)>
- read <":" string (BasicObject)> from <routeID string (BasicObject)>
- read <trainType string (BasicObject)>
- read <trainType string (BasicObject)> from <trainType string (BasicObject)>
- read <ref <trainType []string> @ PriceService (Reference)> from <trainType string (BasicObject)>
- read <trainType []string (SliceObject)> from <trainType string (BasicObject)>
- read <rt string (BasicObject)> from <trainType string (BasicObject)>
- read <":" string (BasicObject)> from <trainType string (BasicObject)>
- read <trainType string (BasicObject)>
- read <trainType string (BasicObject)> from <trainType string (BasicObject)>
- read <ref <trainType []string> @ PriceService (Reference)> from <trainType string (BasicObject)>
- read <trainType []string (SliceObject)> from <trainType string (BasicObject)>
- read <rt string (BasicObject)> from <trainType string (BasicObject)>
- read <":" string (BasicObject)> from <trainType string (BasicObject)>
- read <ID string (BasicObject)>
- read <ID string (BasicObject)> from <ID string (BasicObject)>
- write <ID string (BasicObject)> from <station station.Station struct{ID string, Name string, StayTime int64} (StructObject)>
- read <name string (BasicObject)>
- read <name string (BasicObject)> from <name string (BasicObject)>
- read <name string (BasicObject)>
- read <name string (BasicObject)> from <name string (BasicObject)>
- read <ref <* string> @ StationService (Reference)> from <name string (BasicObject)>
- read <* string (BasicObject)> from <name string (BasicObject)>
- read <name string (BasicObject)>
- read <name string (BasicObject)> from <name string (BasicObject)>
- read <ref <* string> @ StationService (Reference)> from <name string (BasicObject)>
- read <* string (BasicObject)> from <name string (BasicObject)>
- read <order_id string (BasicObject)>
- read <order_id string (BasicObject)> from <order_id string (BasicObject)>
- read <Name string (BasicObject)>
- read <Name string (BasicObject)> from <Name string (BasicObject)>
- write <Name string (BasicObject)> from <conf config.Config struct{Name string, Value string, Description string} (StructObject)>
- read <Name string (BasicObject)>
- read <Name string (BasicObject)> from <Name string (BasicObject)>
- write <Name string (BasicObject)> from <tt train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64} (StructObject)>
- read <name string (BasicObject)>
- read <name string (BasicObject)> from <name string (BasicObject)>
- read <tripid string (BasicObject)>
- read <tripid string (BasicObject)> from <tripid string (BasicObject)>
- read <TripID string (BasicObject)>
- read <TripID string (BasicObject)> from <TripID string (BasicObject)>
- write <TripID string (BasicObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <name string (BasicObject)>
- read <name string (BasicObject)> from <name string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <* string> @ RouteService (Reference)> from <id string (BasicObject)>
- read <* string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <* string> @ RouteService (Reference)> from <id string (BasicObject)>
- read <* string (BasicObject)> from <id string (BasicObject)>
- read <start string (BasicObject)>
- read <start string (BasicObject)> from <start string (BasicObject)>
- read <end string (BasicObject)>
- read <end string (BasicObject)> from <end string (BasicObject)>
- read <ID string (BasicObject)>
- read <ID string (BasicObject)> from <ID string (BasicObject)>
- read <ID string (BasicObject)>
- read <ID string (BasicObject)> from <ID string (BasicObject)>
- write <ID string (BasicObject)> from <store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <station string (BasicObject)>
- read <station string (BasicObject)> from <station string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ID string (BasicObject)>
- read <ID string (BasicObject)> from <ID string (BasicObject)>
- write <ID string (BasicObject)> from <payment payment.Payment struct{ID string, OrderID string, UserID string, Price string} (StructObject)>
