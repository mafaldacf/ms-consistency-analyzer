'[]trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}':
- read <all_foods []trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)> from <all_foods []trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (ArrayObject)>

TRAINFOOD_DB._:
- read <res NoSQLCursor {database = trainfood, collection = trainfood} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = trainfood, collection = trainfood} (BlueprintBackendObject)>
- read <res NoSQLCursor {database = trainfood, collection = trainfood} (BlueprintBackendObject)>

TRAINFOOD_DB._.tripid:
- read <tripid string (BasicObject)>
- read <tripid string (BasicObject)> from <tripid string (BasicObject)>
- read <TripID string (BasicObject)>
- read <TripID string (BasicObject)> from <TripID string (BasicObject)>
- write <TripID string (BasicObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>

TRAINFOOD_DB.TrainFood:
- write <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- write <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>

TRAINFOOD_DB.TrainFood.TripID:
- read <TripID string (BasicObject)>
- read <TripID string (BasicObject)> from <TripID string (BasicObject)>
- write <TripID string (BasicObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- write <TripID string (FieldObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>

TrainFood:
- read <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <Foods []food.Food struct{Name string, Price float64} (FieldObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <Foods []food.Food struct{Name string, Price float64} (SliceObject)> from <tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
- read <stored_tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)> from <stored_tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} (StructObject)>
