? (*ContactsServiceImpl).CreateContacts(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})
:
 block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) contactsDB NoSQLDatabase
  - (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase}
  - (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) DocumentType int -->
       w-tainted 1x: write(contacts_db.Contact.DocumentType)
  - |-
    (inline) (FieldVariable FieldType) DocumentType int -->
       w-tainted 1x: write(contacts_db.Contact.DocumentType)
  - |-
    (inline) (BasicVariable BasicType) DocumentNumber string -->
       w-tainted 1x: write(contacts_db.Contact.DocumentNumber)
  - |-
    (inline) (FieldVariable FieldType) DocumentNumber string -->
       w-tainted 1x: write(contacts_db.Contact.DocumentNumber)
  - |-
    (inline) (BasicVariable BasicType) AccountID string -->
       w-tainted 1x: write(contacts_db.Contact.AccountID)
  - |-
    (inline) (FieldVariable FieldType) AccountID string -->
       w-tainted 1x: write(contacts_db.Contact.AccountID)
  - |-
    (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} -->
       w-tainted 1x: write(contacts_db.Contact)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) int
  - (inline) (StructVariable StructType) struct{ "documenttype" string, int}
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "documentnumber" string, string}
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "accountid" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) existing contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*ContactsServiceImpl).Delete(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) contactsDB NoSQLDatabase
  - (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase}
  - (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

(*ContactsServiceImpl).FindContactsByAccountId(ctx context.Context, id string):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) contactsDB NoSQLDatabase
  - (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase}
  - (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (ArrayVariable ArrayType) account_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "accountid" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

(*ContactsServiceImpl).FindContactsById(ctx context.Context, id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) contactsDB NoSQLDatabase
  - (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase}
  - (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*ContactsServiceImpl).GetAllContacts(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) contactsDB NoSQLDatabase
  - (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase}
  - (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) all_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

(*ContactsServiceImpl).Modify(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) contactsDB NoSQLDatabase
  - (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase}
  - (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = contacts, collection = contacts}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

.NewContactsServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
