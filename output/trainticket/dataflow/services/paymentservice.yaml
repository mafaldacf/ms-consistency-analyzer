? (*PaymentServiceImpl).AddMoney(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
 block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) moneyDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) moneyDB NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) paymentDB NoSQLDatabase
  - ___5 depth 3 (BlueprintBackendObject BlueprintBackendType) payDB NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}
  - _1 depth 1 (FieldObject FieldType) Price string
  - '__2 depth 2 (BasicObject BasicType) Price string --> w-tainted 1x: write(money_db.Money.Price)'
  - _3 depth 1 (FieldObject FieldType) UserID string
  - '__4 depth 2 (BasicObject BasicType) UserID string --> w-tainted 1x: write(money_db.Money.UserID)'
  - '0 depth 0 (StructObject UserType) m payment.Money struct{ID string, UserID string,
    Price string} --> w-tainted 1x: write(money_db.Money)'
  - '_1 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(money_db.Money.ID)'
  - '__2 depth 2 (BasicObject BasicType) string --> w-tainted 1x: write(money_db.Money.ID)'
  - '_3 depth 1 (FieldObject FieldType) Price string --> w-tainted 1x: write(money_db.Money.Price)'
  - '__4 depth 2 (BasicObject BasicType) Price string --> w-tainted 1x: write(money_db.Money.Price)'
  - '_5 depth 1 (FieldObject FieldType) UserID string --> w-tainted 1x: write(money_db.Money.UserID)'
  - '__6 depth 2 (BasicObject BasicType) UserID string --> w-tainted 1x: write(money_db.Money.UserID)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = payment, collection = money}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PaymentServiceImpl).Cleanup(ctx context.Context):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) moneyDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) moneyDB NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) paymentDB NoSQLDatabase
  - ___5 depth 3 (BlueprintBackendObject BlueprintBackendType) payDB NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) pay_coll NoSQLCollection
    {database = payment, collection = payment}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) money_coll NoSQLCollection
    {database = payment, collection = money}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PaymentServiceImpl).InitPayment(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
 block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) moneyDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) moneyDB NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) paymentDB NoSQLDatabase
  - ___5 depth 3 (BlueprintBackendObject BlueprintBackendType) payDB NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (StructObject UserType) payment payment.Payment struct{ID string, OrderID
    string, UserID string, Price string} --> w-tainted 1x: write(payments_db.Payment)'
  - '_1 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(payments_db.Payment.ID)'
  - '__2 depth 2 (BasicObject BasicType) ID string --> w-tainted 1x: write(payments_db.Payment.ID)
    --> r-tainted 1x: read(payments_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = payment, collection = payment}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = payment, collection = payment} --> r-tainted 1x: read(payments_db._)'
  - '_1 depth 1 (StructObject UserType) stored payment.Payment struct{ID string, OrderID
    string, UserID string, Price string} --> r-tainted 1x: read(payments_db.Payment)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PaymentServiceImpl).Pay(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
 block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) moneyDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) moneyDB NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) paymentDB NoSQLDatabase
  - ___5 depth 3 (BlueprintBackendObject BlueprintBackendType) payDB NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}
  - _1 depth 1 (FieldObject FieldType) OrderID string
  - __2 depth 2 (BasicObject BasicType) OrderID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = payment, collection = payment}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) ok bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PaymentServiceImpl).Query(ctx context.Context):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) moneyDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) moneyDB NoSQLDatabase
  - __4 depth 2 (FieldObject FieldType) paymentDB NoSQLDatabase
  - ___5 depth 3 (BlueprintBackendObject BlueprintBackendType) payDB NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (ArrayObject ArrayType) payments []payment.Payment struct{ID string,
    OrderID string, UserID string, Price string} --> r-tainted 1x: read(payments_db.[]payment.Payment
    struct{ID string, OrderID string, UserID string, Price string})'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = payment, collection = payment}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = payment, collection = payment} --> r-tainted 1x: read(payments_db.Payment)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

.NewPaymentServiceImpl(ctx context.Context, payDB NoSQLDatabase, moneyDB NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) payDB NoSQLDatabase
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) moneyDB NoSQLDatabase
