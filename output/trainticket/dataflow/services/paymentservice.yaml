? (*PaymentServiceImpl).AddMoney(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) paymentDB NoSQLDatabase
  - (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) moneyDB NoSQLDatabase
  - (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) UserID string -->
       w-tainted 1x: write(money_db.Money.UserID)
  - (inline) (FieldVariable FieldType) UserID string
  - |-
    (inline) (BasicVariable BasicType) Price string -->
       w-tainted 1x: write(money_db.Money.Price)
  - (inline) (FieldVariable FieldType) Price string
  - (StructVariable UserType) payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}
  - |-
    (inline) (BasicVariable BasicType) UserID string -->
       w-tainted 1x: write(money_db.Money.UserID)
  - |-
    (inline) (FieldVariable FieldType) UserID string -->
       w-tainted 1x: write(money_db.Money.UserID)
  - |-
    (inline) (BasicVariable BasicType) Price string -->
       w-tainted 1x: write(money_db.Money.Price)
  - |-
    (inline) (FieldVariable FieldType) Price string -->
       w-tainted 1x: write(money_db.Money.Price)
  - |-
    (inline) (BasicVariable BasicType) string -->
       w-tainted 1x: write(money_db.Money.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(money_db.Money.ID)
  - |-
    (StructVariable UserType) m payment.Money struct{ID string, UserID string, Price string} -->
       w-tainted 1x: write(money_db.Money)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = payment, collection = money}
  - (InterfaceVariable UserType) err .error

(*PaymentServiceImpl).Cleanup(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) paymentDB NoSQLDatabase
  - (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) moneyDB NoSQLDatabase
  - (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) pay_coll NoSQLCollection {database = payment, collection = payment}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) money_coll NoSQLCollection {database = payment, collection = money}
  - (InterfaceVariable UserType) err .error

(*PaymentServiceImpl).InitPayment(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
 block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) paymentDB NoSQLDatabase
  - (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) moneyDB NoSQLDatabase
  - (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(payments_db.Payment.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(payments_db.Payment.ID)
  - |-
    (StructVariable UserType) payment payment.Payment struct{ID string, OrderID string, UserID string, Price string} -->
       w-tainted 1x: write(payments_db.Payment)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = payment, collection = payment}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = payment, collection = payment}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) stored payment.Payment struct{ID string, OrderID string, UserID string, Price string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*PaymentServiceImpl).Pay(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string})
:
 block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) paymentDB NoSQLDatabase
  - (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) moneyDB NoSQLDatabase
  - (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) OrderID string
  - (inline) (FieldVariable FieldType) OrderID string
  - (StructVariable UserType) payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = payment, collection = payment}
  - (InterfaceVariable UserType) err .error
  - (BasicVariable BasicType) ok bool
  - (InterfaceVariable UserType) err .error

(*PaymentServiceImpl).Query(ctx context.Context):
  block 5 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) paymentDB NoSQLDatabase
  - (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase
  - (inline) (FieldVariable FieldType) moneyDB NoSQLDatabase
  - (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB NoSQLDatabase, moneyDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) payments []payment.Payment struct{ID string, OrderID string, UserID string, Price string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = payment, collection = payment}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = payment, collection = payment}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

.NewPaymentServiceImpl(ctx context.Context, payDB NoSQLDatabase, moneyDB NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase
  - (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase
