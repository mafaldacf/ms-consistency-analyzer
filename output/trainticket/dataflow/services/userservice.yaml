(*UserServiceImpl).DeleteUser(ctx context.Context, userID string):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) userDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) userID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "userid" string, string}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*UserServiceImpl).FindByUserID(ctx context.Context, userID string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) userDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) userID string --> r-tainted 1x: read(user_db._.userid)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "userid" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = user, collection = user} --> r-tainted 1x: read(user_db._)'
  - '_1 depth 1 (StructObject UserType) user user.User struct{UserID string, Username
    string, Password string, Gender int64, DocumentType int64, DocumentNum string,
    Email string} --> r-tainted 1x: read(user_db.User)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*UserServiceImpl).FindByUsername(ctx context.Context, username string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) userDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) username string --> r-tainted 1x: read(user_db._.username)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "username" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = user, collection = user} --> r-tainted 1x: read(user_db._)'
  - '_1 depth 1 (StructObject UserType) user user.User struct{UserID string, Username
    string, Password string, Gender int64, DocumentType int64, DocumentNum string,
    Email string} --> r-tainted 1x: read(user_db.User)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*UserServiceImpl).GetAllUsers(ctx context.Context):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) userDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = user, collection = user} --> r-tainted 1x: read(user_db._)'
  - '_1 depth 1 (ArrayObject ArrayType) users []user.User struct{UserID string, Username
    string, Password string, Gender int64, DocumentType int64, DocumentNum string,
    Email string} --> r-tainted 1x: read(user_db.[]user.User struct{UserID string,
    Username string, Password string, Gender int64, DocumentType int64, DocumentNum
    string, Email string})'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

(*UserServiceImpl).SaveUser(ctx context.Context, user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string})
:
 block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) userDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (StructObject UserType) user user.User struct{UserID string, Username
    string, Password string, Gender int64, DocumentType int64, DocumentNum string,
    Email string} --> w-tainted 1x: write(user_db.User)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*UserServiceImpl).UpdateUser(ctx context.Context, user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string})
:
 block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) userDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}
  - _1 depth 1 (FieldObject FieldType) UserID string
  - __2 depth 2 (BasicObject BasicType) UserID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "userid" string, string}

.NewUserServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
