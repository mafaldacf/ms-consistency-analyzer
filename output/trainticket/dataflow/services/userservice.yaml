(*UserServiceImpl).DeleteUser(ctx context.Context, userID string):
  block 5 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) userDB NoSQLDatabase
  - (inline) (StructVariable UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - (PointerVariable PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) userID string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "userid" string, string}
  - (SliceVariable UserType) query primitive.D
  - (InterfaceVariable UserType) err .error

(*UserServiceImpl).FindByUserID(ctx context.Context, userID string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) userDB NoSQLDatabase
  - (inline) (StructVariable UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - (PointerVariable PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) userID string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "userid" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*UserServiceImpl).FindByUsername(ctx context.Context, username string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) userDB NoSQLDatabase
  - (inline) (StructVariable UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - (PointerVariable PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) username string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "username" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*UserServiceImpl).GetAllUsers(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) userDB NoSQLDatabase
  - (inline) (StructVariable UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - (PointerVariable PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) users []user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}
  - (InterfaceVariable UserType) err .error

(*UserServiceImpl).SaveUser(ctx context.Context, user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) userDB NoSQLDatabase
  - (inline) (StructVariable UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - (PointerVariable PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (StructVariable UserType) user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string} -->
       w-tainted 1x: write(user_db.User)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - (InterfaceVariable UserType) err .error

(*UserServiceImpl).UpdateUser(ctx context.Context, user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) userDB NoSQLDatabase
  - (inline) (StructVariable UserType) user.UserServiceImpl struct{userDB NoSQLDatabase}
  - (PointerVariable PointerType) u (*user.UserServiceImpl struct{userDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) UserID string
  - (inline) (FieldVariable FieldType) UserID string
  - (StructVariable UserType) user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = user, collection = user}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "userid" string, string}
  - (SliceVariable UserType) query primitive.D

.NewUserServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
