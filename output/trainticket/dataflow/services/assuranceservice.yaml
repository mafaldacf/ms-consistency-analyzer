(*AssuranceServiceImpl).Create(ctx context.Context, typeindex int64, orderid string):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) typeindex int64
  - '0 depth 0 (BasicObject BasicType) orderid string --> w-tainted 1x: write(assurance_db.Assurance.OrderID)'
  - '0 depth 0 (StructObject UserType) at assurance.AssuranceType struct{Index int64,
    Name string, Price float64} --> w-tainted 1x: write(assurance_db.Assurance.AT)'
  - '_1 depth 1 (Reference UserType) ref <assurance.AssuranceType struct{Index int64,
    Name string, Price float64}> @ getAssuranceType --> w-tainted 1x: write(assurance_db.Assurance.AT)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ getAssuranceType
  - '0 depth 0 (BasicObject BasicType) id string --> w-tainted 1x: write(assurance_db.Assurance.ID)'
  - '0 depth 0 (StructObject UserType) assurance assurance.Assurance struct{ID string,
    OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price
    float64}} --> w-tainted 1x: write(assurance_db.Assurance)'
  - '_1 depth 1 (FieldObject FieldType) AT assurance.AssuranceType struct{Index int64,
    Name string, Price float64} --> w-tainted 1x: write(assurance_db.Assurance.AT)'
  - '__2 depth 2 (StructObject UserType) at assurance.AssuranceType struct{Index int64,
    Name string, Price float64} --> w-tainted 1x: write(assurance_db.Assurance.AT)'
  - '_4 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(assurance_db.Assurance.ID)'
  - '__5 depth 2 (BasicObject BasicType) id string --> w-tainted 1x: write(assurance_db.Assurance.ID)'
  - '_6 depth 1 (FieldObject FieldType) OrderID string --> w-tainted 1x: write(assurance_db.Assurance.OrderID)'
  - '__7 depth 2 (BasicObject BasicType) orderid string --> w-tainted 1x: write(assurance_db.Assurance.OrderID)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*AssuranceServiceImpl).DeleteById(ctx context.Context, id string):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) id string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}

(*AssuranceServiceImpl).DeleteByOrderId(ctx context.Context, order_id string):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) order_id string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "orderid" string, string}

(*AssuranceServiceImpl).FindAssuranceById(ctx context.Context, id string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ AssuranceService
  - '0 depth 0 (BasicObject BasicType) id string --> r-tainted 1x: read(assurance_db._.id)'
  - '_1 depth 1 (Reference BasicType) ref <ID string> @ AssuranceService --> r-tainted
    1x: read(assurance_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = assurance, collection = assurance} --> r-tainted 1x: read(assurance_db._)'
  - '_1 depth 1 (StructObject UserType) ass assurance.Assurance struct{ID string,
    OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price
    float64}} --> r-tainted 1x: read(assurance_db.Assurance)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*AssuranceServiceImpl).FindAssuranceByOrderId(ctx context.Context, order_id string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) order_id string --> r-tainted 1x: read(assurance_db._.orderid)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "orderid" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = assurance, collection = assurance} --> r-tainted 1x: read(assurance_db._)'
  - '_1 depth 1 (StructObject UserType) ass assurance.Assurance struct{ID string,
    OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price
    float64}} --> r-tainted 1x: read(assurance_db.Assurance)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*AssuranceServiceImpl).GetAllAssuranceTypes(ctx context.Context):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context

(*AssuranceServiceImpl).GetAllAssurances(ctx context.Context):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = assurance, collection = assurance} --> r-tainted 1x: read(assurance_db._)'
  - '_1 depth 1 (ArrayObject ArrayType) assurances []assurance.Assurance struct{ID
    string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string,
    Price float64}} --> r-tainted 1x: read(assurance_db.[]assurance.Assurance struct{ID
    string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string,
    Price float64}})'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

(*AssuranceServiceImpl).Modify(ctx context.Context, assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}})
:
 block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - _1 depth 1 (FieldObject FieldType) ID string
  - '__2 depth 2 (BasicObject BasicType) ID string --> r-tainted 1x: read(assurance_db._.id)'
  - 0 depth 0 (StructObject UserType) _ assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - '_1 depth 1 (Reference UserType) ref <ass assurance.Assurance struct{ID string,
    OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price
    float64}}> @ FindAssuranceById --> r-tainted 1x: read(assurance_db.Assurance)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ FindAssuranceById
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - 0 depth 0 (BasicObject BasicType) ok bool
  - 0 depth 0 (InterfaceObject UserType) err .error

.NewAssuranceServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase

.getAssuranceType(ctx context.Context, index int64):
  block 2 (IfDone):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ AssuranceService
  - 0 depth 0 (BasicObject BasicType) index int64
  - _1 depth 1 (Reference BasicType) ref <typeindex int64> @ AssuranceService
