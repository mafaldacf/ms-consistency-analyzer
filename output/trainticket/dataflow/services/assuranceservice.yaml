(*AssuranceServiceImpl).Create(ctx context.Context, typeindex int64, orderid string):
  block 5 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) typeindex int64
  - |-
    (BasicVariable BasicType) orderid string -->
       w-tainted 1x: write(assurance_db.Assurance.OrderID)
  - |-
    (StructVariable UserType) at assurance.AssuranceType struct{Index int64, Name string, Price float64} -->
       w-tainted 1x: write(assurance_db.Assurance.AT)
  - (InterfaceVariable UserType) err .error
  - |-
    (BasicVariable BasicType) id string -->
       w-tainted 1x: write(assurance_db.Assurance.ID)
  - |-
    (inline) (BasicVariable BasicType) orderid string -->
       w-tainted 1x: write(assurance_db.Assurance.OrderID)
  - |-
    (inline) (FieldVariable FieldType) OrderID string -->
       w-tainted 1x: write(assurance_db.Assurance.OrderID)
  - |-
    (inline) (BasicVariable BasicType) id string -->
       w-tainted 1x: write(assurance_db.Assurance.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(assurance_db.Assurance.ID)
  - |-
    (inline) (StructVariable UserType) at assurance.AssuranceType struct{Index int64, Name string, Price float64} -->
       w-tainted 1x: write(assurance_db.Assurance.AT)
  - |-
    (inline) (FieldVariable FieldType) AT assurance.AssuranceType struct{Index int64, Name string, Price float64} -->
       w-tainted 1x: write(assurance_db.Assurance.AT)
  - |-
    (StructVariable UserType) assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}} -->
       w-tainted 1x: write(assurance_db.Assurance)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error

(*AssuranceServiceImpl).DeleteById(ctx context.Context, id string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

(*AssuranceServiceImpl).DeleteByOrderId(ctx context.Context, order_id string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) order_id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "orderid" string, string}
  - (SliceVariable UserType) query primitive.D

(*AssuranceServiceImpl).FindAssuranceById(ctx context.Context, id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ AssuranceService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <ID string> @ AssuranceService
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) ass assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*AssuranceServiceImpl).FindAssuranceByOrderId(ctx context.Context, order_id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) order_id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "orderid" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) ass assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*AssuranceServiceImpl).GetAllAssuranceTypes(ctx context.Context):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context

(*AssuranceServiceImpl).GetAllAssurances(ctx context.Context):
  block 5 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) assurances []assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - (InterfaceVariable UserType) err .error

(*AssuranceServiceImpl).Modify(ctx context.Context, assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}})
:
 block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - (StructVariable UserType) _ assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = assurance, collection = assurance}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BasicVariable BasicType) ok bool
  - (InterfaceVariable UserType) err .error

.NewAssuranceServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase

.getAssuranceType(ctx context.Context, index int64):
  block 2 (IfDone):
  - (inline) (Reference UserType) ref <ctx context.Context> @ AssuranceService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <typeindex int64> @ AssuranceService
  - (BasicVariable BasicType) index int64
