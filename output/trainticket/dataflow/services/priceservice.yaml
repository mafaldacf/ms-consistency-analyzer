? (*PriceServiceImpl).CreateNewPriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64})
:
 block 12 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (StructObject UserType) pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} -->
    w-tainted 1x: write(price_db.PriceConfig)'
  - '_1 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(price_db.PriceConfig.ID)'
  - '__2 depth 2 (BasicObject BasicType) ID string --> w-tainted 1x: write(price_db.PriceConfig.ID)
    --> r-tainted 1x: read(price_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (StructObject UserType) _ price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - '_1 depth 1 (Reference UserType) ref <pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}>
    @ FindByID --> r-tainted 1x: read(price_db.PriceConfig)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ FindByID
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - 0 depth 0 (BasicObject BasicType) ok bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PriceServiceImpl).DeletePriceConfig(ctx context.Context, id string):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) id string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}

(*PriceServiceImpl).FindByID(ctx context.Context, id string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ PriceService
  - '0 depth 0 (BasicObject BasicType) id string --> w-tainted 1x: write(price_db.PriceConfig.ID)
    --> r-tainted 1x: read(price_db._.id)'
  - '_1 depth 1 (Reference BasicType) ref <ID string> @ PriceService --> w-tainted
    1x: write(price_db.PriceConfig.ID) --> r-tainted 1x: read(price_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = priceConfig, collection = priceConfig} --> r-tainted 1x: read(price_db._)'
  - '_1 depth 1 (StructObject UserType) pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} -->
    r-tainted 1x: read(price_db.PriceConfig)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PriceServiceImpl).FindByRouteIDAndTrainType(ctx context.Context, routeID string, trainType string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ PriceService
  - '0 depth 0 (BasicObject BasicType) routeID string --> r-tainted 1x: read(price_db.PriceConfig.RouteID)'
  - '_1 depth 1 (Reference SliceType) ref <routeid []string> @ PriceService --> r-tainted
    1x: read(price_db.PriceConfig.RouteID)'
  - '0 depth 0 (BasicObject BasicType) trainType string --> r-tainted 1x: read(price_db.PriceConfig.TrainType)'
  - '_1 depth 1 (Reference SliceType) ref <trainType []string> @ PriceService -->
    r-tainted 1x: read(price_db.PriceConfig.TrainType)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ primitive.A, "$and" string, primitive.A}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = priceConfig, collection = priceConfig} --> r-tainted 1x: read(price_db.PriceConfig)'
  - '_1 depth 1 (StructObject UserType) pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} -->
    r-tainted 1x: read(price_db.PriceConfig)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PriceServiceImpl).FindByRouteIDsAndTrainTypes(ctx context.Context, rtsAndTypes []string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ArrayObject ArrayType) rtsAndTypes []string
  - 0 depth 0 (MapObject MapType) res map[string]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - _1 depth 1 (StructObject UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - '__2 depth 2 (Reference UserType) ref <pc price.PriceConfig struct{ID string,
    TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate
    float64}> @ FindByRouteIDAndTrainType --> r-tainted 1x: read(price_db.PriceConfig)'
  - 0 depth 0 (BasicObject BasicType) rt string
  - 0 depth 0 (SliceObject SliceType) pieces []string
  - _2 depth 1 (BasicObject BasicType) ":" string
  - '0 depth 0 (SliceObject SliceType) routeid []string --> r-tainted 1x: read(price_db.PriceConfig.RouteID)'
  - '0 depth 0 (SliceObject SliceType) trainType []string --> r-tainted 1x: read(price_db.PriceConfig.TrainType)'
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ FindByRouteIDAndTrainType

(*PriceServiceImpl).GetAllPriceConfig(ctx context.Context):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = priceConfig, collection = priceConfig} --> r-tainted 1x: read(price_db._)'
  - '_1 depth 1 (ArrayObject ArrayType) pcs []price.PriceConfig struct{ID string,
    TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate
    float64} --> r-tainted 1x: read(price_db.[]price.PriceConfig struct{ID string,
    TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate
    float64})'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

(*PriceServiceImpl).UpdatePriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64})
:
 block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) priceDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - _1 depth 1 (FieldObject FieldType) ID string
  - __2 depth 2 (BasicObject BasicType) ID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}

.NewPriceServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
