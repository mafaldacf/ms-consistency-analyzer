? (*PriceServiceImpl).CreateNewPriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64})
:
 block 12 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(price_db.PriceConfig.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(price_db.PriceConfig.ID)
  - |-
    (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} -->
       w-tainted 1x: write(price_db.PriceConfig)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) _ price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BasicVariable BasicType) ok bool
  - (InterfaceVariable UserType) err .error

(*PriceServiceImpl).DeletePriceConfig(ctx context.Context, id string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

(*PriceServiceImpl).FindByID(ctx context.Context, id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ PriceService
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (Reference BasicType) ref <ID string> @ PriceService -->
       w-tainted 1x: write(price_db.PriceConfig.ID)
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*PriceServiceImpl).FindByRouteIDAndTrainType(ctx context.Context, routeID string, trainType string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ PriceService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ":" string
  - (inline) (BasicVariable BasicType) rt string
  - (inline) (Reference SliceType) ref <routeid []string> @ PriceService
  - (BasicVariable BasicType) routeID string
  - (inline) (BasicVariable BasicType) ":" string
  - (inline) (BasicVariable BasicType) rt string
  - (inline) (Reference SliceType) ref <trainType []string> @ PriceService
  - (BasicVariable BasicType) trainType string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "traintype" string, string}
  - (inline) (SliceVariable UserType) primitive.D
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "routeid" string, string}
  - (inline) (SliceVariable UserType) primitive.D
  - (inline) (SliceVariable UserType) primitive.A
  - (inline) (FieldVariable FieldType) primitive.A
  - (inline) (StructVariable StructType) struct{ "$and" string, primitive.A}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*PriceServiceImpl).FindByRouteIDsAndTrainTypes(ctx context.Context, rtsAndTypes []string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) rtsAndTypes []string
  - (inline) (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (MapVariable MapType) res map[string]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (BasicVariable BasicType) rt string
  - (inline) (BasicVariable BasicType) ":" string
  - (SliceVariable SliceType) pieces []string
  - (inline) (BasicVariable BasicType) ":" string
  - (inline) (BasicVariable BasicType) rt string
  - (SliceVariable SliceType) routeid []string
  - (inline) (BasicVariable BasicType) ":" string
  - (inline) (BasicVariable BasicType) rt string
  - (SliceVariable SliceType) trainType []string
  - (InterfaceVariable UserType) _ .error

(*PriceServiceImpl).GetAllPriceConfig(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) pcs []price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (InterfaceVariable UserType) err .error

(*PriceServiceImpl).UpdatePriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) priceDB NoSQLDatabase
  - (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB NoSQLDatabase}
  - (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = priceConfig, collection = priceConfig}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

.NewPriceServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
