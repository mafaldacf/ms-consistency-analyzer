(*StationServiceImpl).CreateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(station_db.Station.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(station_db.Station.ID)
  - |-
    (StructVariable UserType) station station.Station struct{ID string, Name string, StayTime int64} -->
       w-tainted 1x: write(station_db.Station)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*StationServiceImpl).DeleteStation(ctx context.Context, id string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

(*StationServiceImpl).Exists(ctx context.Context, name string):
  block 5 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) name string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "name" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*StationServiceImpl).FindByID(ctx context.Context, id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ StationService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <string> @ StationService
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*StationServiceImpl).FindByIDs(ctx context.Context, ids []string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) ids []string
  - (inline) (StructVariable UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - (ArrayVariable ArrayType) stations []station.Station struct{ID string, Name string, StayTime int64}
  - (InterfaceVariable UserType) _ .error
  - (inline) (StructVariable UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - (ArrayVariable ArrayType) stations []station.Station struct{ID string, Name string, StayTime int64}

(*StationServiceImpl).FindID(ctx context.Context, name string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ StationService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <string> @ StationService
  - (BasicVariable BasicType) name string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "name" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*StationServiceImpl).FindIDs(ctx context.Context, names []string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) names []string
  - (inline) (BasicVariable BasicType) id string
  - (ArrayVariable ArrayType) ids []string
  - (InterfaceVariable UserType) _ .error
  - (inline) (BasicVariable BasicType) id string
  - (ArrayVariable ArrayType) ids []string

(*StationServiceImpl).UpdateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) stationDB NoSQLDatabase
  - (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) station station.Station struct{ID string, Name string, StayTime int64}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

.NewStationServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
