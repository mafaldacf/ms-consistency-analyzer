(*StationServiceImpl).CreateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (StructObject UserType) station station.Station struct{ID string, Name
    string, StayTime int64} --> w-tainted 1x: write(station_db.Station)'
  - '_1 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(station_db.Station.ID)'
  - '__2 depth 2 (BasicObject BasicType) ID string --> w-tainted 1x: write(station_db.Station.ID)
    --> r-tainted 1x: read(station_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station} --> r-tainted 1x: read(station_db._)'
  - '_1 depth 1 (StructObject UserType) st station.Station struct{ID string, Name
    string, StayTime int64} --> r-tainted 1x: read(station_db.Station)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationServiceImpl).DeleteStation(ctx context.Context, id string):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) id string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}

(*StationServiceImpl).Exists(ctx context.Context, name string):
  block 5 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) name string --> r-tainted 1x: read(station_db.Station.Name)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "name" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station} --> r-tainted 1x: read(station_db.Station)'
  - '_1 depth 1 (StructObject UserType) st station.Station struct{ID string, Name
    string, StayTime int64} --> r-tainted 1x: read(station_db.Station)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationServiceImpl).FindByID(ctx context.Context, id string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ StationService
  - '0 depth 0 (BasicObject BasicType) id string --> r-tainted 2x: read(station_db._.id,
    station_db.Station.ID)'
  - '_1 depth 1 (Reference BasicType) ref <* string> @ StationService --> r-tainted
    2x: read(station_db._.id, station_db.Station.ID)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station} --> r-tainted 2x: read(station_db._, station_db.Station)'
  - '_1 depth 1 (StructObject UserType) st station.Station struct{ID string, Name
    string, StayTime int64} --> r-tainted 1x: read(station_db.Station)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationServiceImpl).FindByIDs(ctx context.Context, ids []string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ArrayObject ArrayType) ids []string
  - 0 depth 0 (ArrayObject ArrayType) stations []station.Station struct{ID string, Name string, StayTime int64}
  - _1 depth 1 (StructObject UserType) st station.Station struct{ID string, Name string, StayTime int64}
  - '__2 depth 2 (Reference UserType) ref <st station.Station struct{ID string, Name
    string, StayTime int64}> @ FindByID --> r-tainted 1x: read(station_db.Station)'
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ FindByID
  - 0 depth 0 (ArrayObject ArrayType) stations []station.Station struct{ID string, Name string, StayTime int64}
  - _1 depth 1 (StructObject UserType) st station.Station struct{ID string, Name string, StayTime int64}

(*StationServiceImpl).FindID(ctx context.Context, name string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ StationService
  - '0 depth 0 (BasicObject BasicType) name string --> r-tainted 1x: read(station_db.Station.Name)'
  - '_1 depth 1 (Reference BasicType) ref <* string> @ StationService --> r-tainted
    1x: read(station_db.Station.Name)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "name" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station} --> r-tainted 1x: read(station_db.Station)'
  - '_1 depth 1 (StructObject UserType) st station.Station struct{ID string, Name
    string, StayTime int64} --> r-tainted 2x: read(station_db.Station, station_db.Station.ID)'
  - '__2 depth 2 (FieldObject FieldType) ID string --> r-tainted 1x: read(station_db.Station.ID)'
  - '___3 depth 3 (BasicObject BasicType) ID string --> r-tainted 1x: read(station_db.Station.ID)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationServiceImpl).FindIDs(ctx context.Context, names []string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ArrayObject ArrayType) names []string
  - 0 depth 0 (ArrayObject ArrayType) ids []string
  - _1 depth 1 (BasicObject BasicType) id string
  - '__2 depth 2 (Reference BasicType) ref <ID string> @ FindID --> r-tainted 1x:
    read(station_db.Station.ID)'
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ FindID
  - 0 depth 0 (ArrayObject ArrayType) ids []string
  - _1 depth 1 (BasicObject BasicType) id string

(*StationServiceImpl).UpdateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) station.StationServiceImpl struct{stationDB NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) stationDB NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) station station.Station struct{ID string, Name string, StayTime int64}
  - _1 depth 1 (FieldObject FieldType) ID string
  - __2 depth 2 (BasicObject BasicType) ID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = station, collection = station}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}

.NewStationServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
