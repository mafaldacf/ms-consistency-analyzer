(*StationFoodServiceImpl).Cleanup(ctx context.Context):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationFoodServiceImpl).CreateFoodStore(ctx context.Context, store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}})
:
 block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (StructObject UserType) store stationfood.StationFoodStore struct{ID
    string, StationName string, StoreName string, Telephone string, BusinessTime string,
    DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
    w-tainted 1x: write(stationfood_db.StationFoodStore)'
  - '_1 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(stationfood_db.StationFoodStore.ID)'
  - '__2 depth 2 (BasicObject BasicType) ID string --> w-tainted 1x: write(stationfood_db.StationFoodStore.ID)
    --> r-tainted 1x: read(stationfood_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "id" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = stationfood, collection = stationfood} --> r-tainted 1x: read(stationfood_db._)'
  - '_1 depth 1 (StructObject UserType) st stationfood.StationFoodStore struct{ID
    string, StationName string, StoreName string, Telephone string, BusinessTime string,
    DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
    r-tainted 1x: read(stationfood_db.StationFoodStore)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationFoodServiceImpl).GetFoodStoreByID(ctx context.Context, id string):
  block 14 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) id string --> r-tainted 1x: read(stationfood_db.StationFoodStore.ID)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = stationfood, collection = stationfood} --> r-tainted 1x: read(stationfood_db.StationFoodStore)'
  - '_1 depth 1 (StructObject UserType) store stationfood.StationFoodStore struct{ID
    string, StationName string, StoreName string, Telephone string, BusinessTime string,
    DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
    r-tainted 1x: read(stationfood_db.StationFoodStore)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationFoodServiceImpl).GetFoodStoresByStationNames(ctx context.Context, stations []string):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ArrayObject ArrayType) stations []string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) doc primitive.A
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ primitive.D, "stationname" string, primitive.D}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = stationfood, collection = stationfood} --> r-tainted 1x: read(stationfood_db.StationFoodStore)'
  - '_1 depth 1 (ArrayObject ArrayType) stores []stationfood.StationFoodStore struct{ID
    string, StationName string, StoreName string, Telephone string, BusinessTime string,
    DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
    r-tainted 1x: read(stationfood_db.[]stationfood.StationFoodStore struct{ID string,
    StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee
    float64, Foods []food.Food struct{Name string, Price float64}})'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationFoodServiceImpl).ListFoodStores(ctx context.Context):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = stationfood, collection = stationfood} --> r-tainted 1x: read(stationfood_db.StationFoodStore)'
  - '_1 depth 1 (ArrayObject ArrayType) stores []stationfood.StationFoodStore struct{ID
    string, StationName string, StoreName string, Telephone string, BusinessTime string,
    DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
    r-tainted 1x: read(stationfood_db.[]stationfood.StationFoodStore struct{ID string,
    StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee
    float64, Foods []food.Food struct{Name string, Price float64}})'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

(*StationFoodServiceImpl).ListFoodStoresByStationName(ctx context.Context, station string):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) station string --> r-tainted 1x: read(stationfood_db.StationFoodStore.StationName)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ string, "stationname" string, string}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = stationfood, collection = stationfood} --> r-tainted 1x: read(stationfood_db.StationFoodStore)'
  - '_1 depth 1 (ArrayObject ArrayType) stores []stationfood.StationFoodStore struct{ID
    string, StationName string, StoreName string, Telephone string, BusinessTime string,
    DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
    r-tainted 1x: read(stationfood_db.[]stationfood.StationFoodStore struct{ID string,
    StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee
    float64, Foods []food.Food struct{Name string, Price float64}})'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

.NewStationFoodServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
