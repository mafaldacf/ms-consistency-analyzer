(*StationFoodServiceImpl).Cleanup(ctx context.Context):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error

(*StationFoodServiceImpl).CreateFoodStore(ctx context.Context, store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}})
:
 block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(stationfood_db.StationFoodStore.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(stationfood_db.StationFoodStore.ID)
  - |-
    (StructVariable UserType) store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
       w-tainted 1x: write(stationfood_db.StationFoodStore)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) st stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*StationFoodServiceImpl).GetFoodStoreByID(ctx context.Context, id string):
  block 14 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*StationFoodServiceImpl).GetFoodStoresByStationNames(ctx context.Context, stations []string):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) stations []string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (SliceVariable UserType) doc primitive.A
  - (inline) (FieldVariable FieldType) primitive.A
  - (inline) (StructVariable StructType) struct{ "$in" string, primitive.A}
  - (inline) (SliceVariable UserType) primitive.D
  - (inline) (FieldVariable FieldType) primitive.D
  - (inline) (StructVariable StructType) struct{ "stationname" string, primitive.D}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - (InterfaceVariable UserType) err .error

(*StationFoodServiceImpl).ListFoodStores(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - (InterfaceVariable UserType) err .error

(*StationFoodServiceImpl).ListFoodStoresByStationName(ctx context.Context, station string):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) station string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "stationname" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = stationfood, collection = stationfood}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - (InterfaceVariable UserType) err .error

.NewStationFoodServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
