(*TrainFoodServiceImpl).Cleanup(ctx context.Context):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error

(*TrainFoodServiceImpl).CreateTrainFood(ctx context.Context, tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}})
:
 block 17 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) TripID string -->
       w-tainted 1x: write(trainfood_db.TrainFood.TripID)
  - |-
    (inline) (FieldVariable FieldType) TripID string -->
       w-tainted 1x: write(trainfood_db.TrainFood.TripID)
  - |-
    (StructVariable UserType) tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} -->
       w-tainted 1x: write(trainfood_db.TrainFood)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "tripid" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) stored_tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error
  - (BasicVariable BasicType) ok bool
  - (InterfaceVariable UserType) err .error

(*TrainFoodServiceImpl).ListTrainFood(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error
  - (ArrayVariable ArrayType) all_foods []trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}
  - (InterfaceVariable UserType) err .error

(*TrainFoodServiceImpl).ListTrainFoodByTripID(ctx context.Context, tripid string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) tripid string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = trainfood, collection = trainfood}
  - (InterfaceVariable UserType) err .error
  - (inline) (SliceVariable SliceType) Foods []food.Food struct{Name string, Price float64}
  - (inline) (FieldVariable FieldType) Foods []food.Food struct{Name string, Price float64}
  - (StructVariable UserType) tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

.NewTrainFoodServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
