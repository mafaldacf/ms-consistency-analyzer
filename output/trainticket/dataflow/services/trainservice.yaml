(*TrainServiceImpl).AllTrains(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) trains []train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

(*TrainServiceImpl).Create(ctx context.Context, tt train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64})
:
 block 14 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) Name string -->
       w-tainted 1x: write(train_db.TrainType.Name)
  - |-
    (inline) (FieldVariable FieldType) Name string -->
       w-tainted 1x: write(train_db.TrainType.Name)
  - |-
    (StructVariable UserType) tt train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64} -->
       w-tainted 1x: write(train_db.TrainType)
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "name" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) saved_tt train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

(*TrainServiceImpl).Delete(ctx context.Context, id string):
  block 5 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

(*TrainServiceImpl).Retrieve(ctx context.Context, id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) tt train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*TrainServiceImpl).RetrieveByName(ctx context.Context, name string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) name string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "name" string, string}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) tt train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*TrainServiceImpl).RetrieveByNames(ctx context.Context, names []string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) names []string
  - (ArrayVariable ArrayType) trainTypes []train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64}

(*TrainServiceImpl).Update(ctx context.Context, ttype train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64})
:
 block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) train.TrainServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) ts (*train.TrainServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (StructVariable UserType) ttype train.TrainType struct{ID string, Name string, EconomyClass int64, ComfortClass int64, AvgSpeed int64}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = train, collection = train}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "id" string, string}
  - (SliceVariable UserType) query primitive.D

.NewTrainServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
