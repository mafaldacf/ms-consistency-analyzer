? (*RouteServiceImpl).CreateAndModify(ctx context.Context, info route.RouteInfo struct{ID string, StartStation string, EndStation string, StationList string, DistanceList string})
:
 block 25 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) StationList string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - (inline) (FieldVariable FieldType) StationList string
  - |-
    (inline) (BasicVariable BasicType) StartStation string -->
       w-tainted 1x: write(route_db.Route.StartStation)
  - (inline) (FieldVariable FieldType) StartStation string
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - |-
    (inline) (BasicVariable BasicType) EndStation string -->
       w-tainted 1x: write(route_db.Route.EndStation)
  - (inline) (FieldVariable FieldType) EndStation string
  - (StructVariable UserType) info route.RouteInfo struct{ID string, StartStation string, EndStation string, StationList string, DistanceList string}
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - |-
    (ArrayVariable SliceType) distances []int64 -->
       w-tainted 1x: write(route_db.Route.Distances)
  - |-
    (inline) (BasicVariable BasicType) "," string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - |-
    (SliceVariable SliceType) stations []string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - |-
    (inline) (BasicVariable BasicType) "," string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - |-
    (inline) (BasicVariable BasicType) StationList string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - |-
    (inline) (SliceVariable SliceType) stations []string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - |-
    (inline) (FieldVariable FieldType) Stations []string -->
       w-tainted 1x: write(route_db.Route.Stations)
  - |-
    (inline) (BasicVariable BasicType) StartStation string -->
       w-tainted 1x: write(route_db.Route.StartStation)
  - |-
    (inline) (FieldVariable FieldType) StartStation string -->
       w-tainted 1x: write(route_db.Route.StartStation)
  - (inline) (BasicVariable BasicType) ID string
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(route_db.Route.ID)
  - |-
    (inline) (BasicVariable BasicType) EndStation string -->
       w-tainted 1x: write(route_db.Route.EndStation)
  - |-
    (inline) (FieldVariable FieldType) EndStation string -->
       w-tainted 1x: write(route_db.Route.EndStation)
  - |-
    (inline) (ArrayVariable SliceType) distances []int64 -->
       w-tainted 1x: write(route_db.Route.Distances)
  - |-
    (inline) (FieldVariable FieldType) Distances []int64 -->
       w-tainted 1x: write(route_db.Route.Distances)
  - |-
    (StructVariable UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string} -->
       w-tainted 1x: write(route_db.Route)
  - (BasicVariable BasicType) MAXIDLEN 32 int
  - (BasicVariable BasicType) old_exists false bool
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = route, collection = route}
  - (InterfaceVariable UserType) err .error

(*RouteServiceImpl).DeleteRoute(ctx context.Context, id string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - (InterfaceVariable UserType) err .error

(*RouteServiceImpl).GetAllRoutes(ctx context.Context):
  block 8 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) routes []route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - (BasicVariable BasicType) err error
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - (InterfaceVariable UserType) err .error

(*RouteServiceImpl).GetRouteById(ctx context.Context, id string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ RouteService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <string> @ RouteService
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

(*RouteServiceImpl).GetRouteByIds(ctx context.Context, ids []string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (ArrayVariable ArrayType) ids []string
  - (inline) (StructVariable UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - (ArrayVariable ArrayType) routes []route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - (InterfaceVariable UserType) _ .error
  - (inline) (StructVariable UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - (ArrayVariable ArrayType) routes []route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}

(*RouteServiceImpl).GetRouteByStartAndEnd(ctx context.Context, start string, end string):
  block 11 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) start string
  - (BasicVariable BasicType) end string
  - (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "endstation" string, string}
  - (inline) (SliceVariable UserType) primitive.D
  - (inline) (FieldVariable FieldType) string
  - (inline) (StructVariable StructType) struct{ "startstation" string, string}
  - (inline) (SliceVariable UserType) primitive.D
  - (inline) (SliceVariable UserType) primitive.A
  - (inline) (FieldVariable FieldType) primitive.A
  - (inline) (StructVariable StructType) struct{ "$and" string, primitive.A}
  - (SliceVariable UserType) query primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = route, collection = route}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - (BasicVariable BasicType) exists bool
  - (InterfaceVariable UserType) err .error

.NewRouteServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
