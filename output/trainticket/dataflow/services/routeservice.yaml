? (*RouteServiceImpl).CreateAndModify(ctx context.Context, info route.RouteInfo struct{ID string, StartStation string, EndStation string, StationList string, DistanceList string})
:
 block 25 (IfDone):
  - 0 depth 0 (PointerObject PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (StructObject UserType) info route.RouteInfo struct{ID string, StartStation string, EndStation string, StationList string, DistanceList string}
  - _1 depth 1 (FieldObject FieldType) EndStation string
  - '__2 depth 2 (BasicObject BasicType) EndStation string --> w-tainted 1x: write(route_db.Route.EndStation)'
  - _3 depth 1 (FieldObject FieldType) ID string
  - '__4 depth 2 (BasicObject BasicType) ID string --> r-tainted 1x: read(route_db.Route.ID)'
  - _5 depth 1 (FieldObject FieldType) StartStation string
  - '__6 depth 2 (BasicObject BasicType) StartStation string --> w-tainted 1x: write(route_db.Route.StartStation)'
  - _7 depth 1 (FieldObject FieldType) StationList string
  - '__8 depth 2 (BasicObject BasicType) StationList string --> w-tainted 1x: write(route_db.Route.Stations)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (ArrayObject SliceType) distances []int64 --> w-tainted 1x: write(route_db.Route.Distances)'
  - '0 depth 0 (SliceObject SliceType) stations []string --> w-tainted 1x: write(route_db.Route.Stations)'
  - '_2 depth 1 (BasicObject BasicType) "," string --> w-tainted 1x: write(route_db.Route.Stations)'
  - '0 depth 0 (StructObject UserType) route route.Route struct{ID string, Stations
    []string, Distances []int64, StartStation string, EndStation string} --> w-tainted
    1x: write(route_db.Route)'
  - '_1 depth 1 (FieldObject FieldType) Distances []int64 --> w-tainted 1x: write(route_db.Route.Distances)'
  - '__2 depth 2 (ArrayObject SliceType) distances []int64 --> w-tainted 1x: write(route_db.Route.Distances)'
  - '_3 depth 1 (FieldObject FieldType) EndStation string --> w-tainted 1x: write(route_db.Route.EndStation)'
  - '__4 depth 2 (BasicObject BasicType) EndStation string --> w-tainted 1x: write(route_db.Route.EndStation)'
  - '_5 depth 1 (FieldObject FieldType) ID string --> w-tainted 1x: write(route_db.Route.ID)'
  - '__6 depth 2 (BasicObject BasicType) ID string --> r-tainted 1x: read(route_db.Route.ID)'
  - '_7 depth 1 (FieldObject FieldType) StartStation string --> w-tainted 1x: write(route_db.Route.StartStation)'
  - '__8 depth 2 (BasicObject BasicType) StartStation string --> w-tainted 1x: write(route_db.Route.StartStation)'
  - '_9 depth 1 (FieldObject FieldType) Stations []string --> w-tainted 1x: write(route_db.Route.Stations)'
  - '__10 depth 2 (SliceObject SliceType) stations []string --> w-tainted 1x: write(route_db.Route.Stations)'
  - '___11 depth 3 (BasicObject BasicType) StationList string --> w-tainted 1x: write(route_db.Route.Stations)'
  - '___12 depth 3 (BasicObject BasicType) "," string --> w-tainted 1x: write(route_db.Route.Stations)'
  - 0 depth 0 (BasicObject BasicType) MAXIDLEN 32 int
  - 0 depth 0 (BasicObject BasicType) old_exists false bool
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = route, collection = route} --> r-tainted 1x: read(route_db.Route)'
  - '_1 depth 1 (StructObject UserType) old_route route.Route struct{ID string, Stations
    []string, Distances []int64, StartStation string, EndStation string} --> r-tainted
    3x: read(route_db.Route, route_db.ID, route_db.string)'
  - '__2 depth 2 (FieldObject FieldType) ID string --> r-tainted 1x: read(route_db.ID)'
  - '___3 depth 3 (BasicObject BasicType) ID string --> r-tainted 1x: read(route_db.string)'
  - 0 depth 0 (InterfaceObject UserType) err .error

(*RouteServiceImpl).DeleteRoute(ctx context.Context, id string):
  block 2 (IfDone):
  - 0 depth 0 (PointerObject PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) id string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - 0 depth 0 (InterfaceObject UserType) err .error

(*RouteServiceImpl).GetAllRoutes(ctx context.Context):
  block 8 (IfDone):
  - 0 depth 0 (PointerObject PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (ArrayObject ArrayType) routes []route.Route struct{ID string, Stations
    []string, Distances []int64, StartStation string, EndStation string} --> r-tainted
    1x: read(route_db.[]route.Route struct{ID string, Stations []string, Distances
    []int64, StartStation string, EndStation string})'
  - 0 depth 0 (BasicObject BasicType) err error
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = route, collection = route} --> r-tainted 1x: read(route_db._)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (InterfaceObject UserType) err .error

(*RouteServiceImpl).GetRouteById(ctx context.Context, id string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ RouteService
  - '0 depth 0 (BasicObject BasicType) id string --> r-tainted 1x: read(route_db._.id)'
  - '_1 depth 1 (Reference BasicType) ref <string> @ RouteService --> r-tainted 1x:
    read(route_db._.id)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = route, collection = route} --> r-tainted 1x: read(route_db._)'
  - '_1 depth 1 (StructObject UserType) route route.Route struct{ID string, Stations
    []string, Distances []int64, StartStation string, EndStation string} --> r-tainted
    1x: read(route_db.Route)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

(*RouteServiceImpl).GetRouteByIds(ctx context.Context, ids []string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (ArrayObject ArrayType) ids []string
  - 0 depth 0 (ArrayObject ArrayType) routes []route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - _1 depth 1 (StructObject UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - '__2 depth 2 (Reference UserType) ref <route route.Route struct{ID string, Stations
    []string, Distances []int64, StartStation string, EndStation string}> @ GetRouteById
    --> r-tainted 1x: read(route_db.Route)'
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - _1 depth 1 (Reference BasicType) ref <nil> @ GetRouteById
  - 0 depth 0 (ArrayObject ArrayType) routes []route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}
  - _1 depth 1 (StructObject UserType) route route.Route struct{ID string, Stations []string, Distances []int64, StartStation string, EndStation string}

(*RouteServiceImpl).GetRouteByStartAndEnd(ctx context.Context, start string, end string):
  block 11 (IfDone):
  - 0 depth 0 (PointerObject PointerType) r (*route.RouteServiceImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) route.RouteServiceImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (BasicObject BasicType) start string --> r-tainted 1x: read(route_db._.startstation)'
  - '0 depth 0 (BasicObject BasicType) end string --> r-tainted 1x: read(route_db._.endstation)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) coll NoSQLCollection {database = route, collection = route}
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (SliceObject UserType) query primitive.D
  - _1 depth 1 (StructObject StructType) struct{ primitive.A, "$and" string, primitive.A}
  - '0 depth 0 (BlueprintBackendObject BlueprintBackendType) res NoSQLCursor {database
    = route, collection = route} --> r-tainted 1x: read(route_db._)'
  - '_1 depth 1 (StructObject UserType) route route.Route struct{ID string, Stations
    []string, Distances []int64, StartStation string, EndStation string} --> r-tainted
    1x: read(route_db.Route)'
  - 0 depth 0 (InterfaceObject UserType) err .error
  - 0 depth 0 (BasicObject BasicType) exists bool
  - 0 depth 0 (InterfaceObject UserType) err .error

.NewRouteServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
