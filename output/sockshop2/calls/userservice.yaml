(*userServiceImpl).Delete(ctx context.Context, entity string, id string):
- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.DeleteOne(ctx context.Context, filter bson.D) interface{}

(*userServiceImpl).GetAddresses(ctx context.Context, addressid string):
- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*userServiceImpl).GetCards(ctx context.Context, cardid string):
- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*userServiceImpl).GetUsers(ctx context.Context, userid string):
- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*userServiceImpl).Login(ctx context.Context, username string, password string):
- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

(*userServiceImpl).PostAddress(ctx context.Context, userid string, address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string})
:
	- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.Upsert(ctx context.Context, filter bson.D, document interface{}) (err, interface{})

(*userServiceImpl).PostCard(ctx context.Context, userid string, card user.Card struct{LongNum string, Expires string, CCV string, ID string})
:
	- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.Upsert(ctx context.Context, filter bson.D, document interface{}) (err, interface{})

(*userServiceImpl).PostUser(ctx context.Context, u user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string})
:
	- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

(*userServiceImpl).Register(ctx context.Context, username string, password string, email string, first string, last string):
- DATASTORE CALL @ user_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

.NewUserServiceImpl(ctx context.Context, db NoSQLDatabase): []
