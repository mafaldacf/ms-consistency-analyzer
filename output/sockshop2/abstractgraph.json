[
  {
    "method": "(*FrontendImpl).GetSock(ctx context.Context, itemID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).Get(ctx context.Context, id string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "query",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"id\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"id\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"id\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "id",
                            "type": "string",
                            "refs": [
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = catalogue, collection = catalogue}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "itemID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).GetOrders(ctx context.Context, userID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*orderImpl).GetOrders(ctx context.Context, customerID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "OrderService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"customerid\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "userID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "cursor",
                  "type": "NoSQLCursor {database = order_service, collection = orders}"
                }
              },
              {
                "variable": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "order_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status string}, Date string, Total float32}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).PostCard(ctx context.Context, userID string, card user.Card struct{LongNum string, Expires string, CCV string, ID string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).PostCard(ctx context.Context, userid string, card user.Card struct{LongNum string, Expires string, CCV string, ID string})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"userid\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"userid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"userid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "userid",
                            "type": "string",
                            "refs": [
                              {
                                "name": "userID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "update",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"card\" string, Value user.Card struct{LongNum string, Expires string, CCV string, ID string}}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"card\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"card\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "user.Card struct{LongNum string, Expires string, CCV string, ID string}"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "card",
                            "type": "user.Card struct{LongNum string, Expires string, CCV string, ID string}",
                            "refs": [
                              {
                                "name": "card",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "bool"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "string"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "card",
          "type": "user.Card struct{LongNum string, Expires string, CCV string, ID string}"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).LoadCatalogue(ctx context.Context)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).AddSock(ctx context.Context, sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "sock",
                  "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}",
                  "refs": [
                    {
                      "name": "sock",
                      "creator": "FrontendService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "string"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).GetCart(ctx context.Context, sessionID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*cartImpl).GetCart(ctx context.Context, customerID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": null,
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]cart.Item struct{ID string, Quantity int, UnitPrice float32}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).RemoveItem(ctx context.Context, sessionID string, itemID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*cartImpl).RemoveItem(ctx context.Context, customerID string, itemID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.ReplaceOne(ctx context.Context, filter bson.D, interface{})",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "cart",
                  "type": "(\u0026cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})"
                },
                "addr_of": {
                  "variable": {
                    "type": "cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}"
                  },
                  "struct_fields": {
                    "ID": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      },
                      "wrapped_variable": {
                        "variable": {
                          "name": "customerID",
                          "type": "string",
                          "refs": [
                            {
                              "name": "sessionID",
                              "creator": "FrontendService"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "int"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "itemID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).AddItem(ctx context.Context, sessionID string, itemID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).Get(ctx context.Context, id string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "query",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"id\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"id\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"id\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "id",
                            "type": "string",
                            "refs": [
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = catalogue, collection = catalogue}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "name": "sock",
              "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}"
            },
            "struct_fields": {
              "ID": {
                "variable": {
                  "name": "ID",
                  "type": "string"
                },
                "wrapped_variable": {
                  "variable": {
                    "name": "ID",
                    "type": "string"
                  }
                }
              },
              "Price": {
                "variable": {
                  "name": "Price",
                  "type": "float32"
                },
                "wrapped_variable": {
                  "variable": {
                    "name": "Price",
                    "type": "float32"
                  }
                }
              }
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error"
            }
          }
        ]
      },
      {
        "method": "(*cartImpl).AddItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "cart",
                  "type": "(\u0026cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})"
                },
                "addr_of": {
                  "variable": {
                    "type": "cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}"
                  },
                  "struct_fields": {
                    "ID": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      },
                      "wrapped_variable": {
                        "variable": {
                          "name": "customerID",
                          "type": "string",
                          "refs": [
                            {
                              "name": "sessionID",
                              "creator": "FrontendService"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "bool"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "name": "_",
              "type": "cart.Item struct{ID string, Quantity int, UnitPrice float32}"
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "itemID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).NewOrder(ctx context.Context, userID string, addressID string, cardID string, cartID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*orderImpl).NewOrder(ctx context.Context, customerID string, addressID string, cardID string, cartID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "(*cartImpl).GetCart(ctx context.Context, customerID string)",
            "depth": 2,
            "caller": "OrderService",
            "edges": null,
            "params": null,
            "returns": [
              {
                "variable": {
                  "name": "items",
                  "type": "[]cart.Item struct{ID string, Quantity int, UnitPrice float32}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*userServiceImpl).GetUsers(ctx context.Context, userid string)",
            "depth": 2,
            "caller": "OrderService",
            "edges": [
              {
                "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "OrderService"
                        },
                        {
                          "name": "ctx",
                          "creator": "FrontendService"
                        }
                      ]
                    }
                  },
                  {
                    "variable": {
                      "name": "filter",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "variable": {
                          "type": "struct{Key \"userid\" string, Value string}"
                        },
                        "struct_fields": {
                          "Key": {
                            "variable": {
                              "name": "Key",
                              "type": "\"userid\" string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "\"userid\" string"
                              }
                            }
                          },
                          "Value": {
                            "variable": {
                              "name": "Value",
                              "type": "string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "name": "userid",
                                "type": "string",
                                "refs": [
                                  {
                                    "name": "customerID",
                                    "creator": "OrderService"
                                  },
                                  {
                                    "name": "userID",
                                    "creator": "FrontendService"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "variable": {
                      "name": "result",
                      "type": "NoSQLCursor {database = users, collection = users}"
                    }
                  },
                  {
                    "variable": {
                      "name": "_",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              }
            ],
            "params": null,
            "returns": [
              {
                "variable": {
                  "type": "[]user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*userServiceImpl).GetAddresses(ctx context.Context, addressid string)",
            "depth": 2,
            "caller": "OrderService",
            "edges": [
              {
                "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "OrderService"
                        },
                        {
                          "name": "ctx",
                          "creator": "FrontendService"
                        }
                      ]
                    }
                  },
                  {
                    "variable": {
                      "name": "filter",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "variable": {
                          "type": "struct{Key \"addressid\" string, Value string}"
                        },
                        "struct_fields": {
                          "Key": {
                            "variable": {
                              "name": "Key",
                              "type": "\"addressid\" string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "\"addressid\" string"
                              }
                            }
                          },
                          "Value": {
                            "variable": {
                              "name": "Value",
                              "type": "string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "name": "addressid",
                                "type": "string",
                                "refs": [
                                  {
                                    "name": "addressID",
                                    "creator": "OrderService"
                                  },
                                  {
                                    "name": "addressID",
                                    "creator": "FrontendService"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "variable": {
                      "name": "projection",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "variable": {
                          "type": "struct{Key \"addressid\" string, Value true bool}"
                        },
                        "struct_fields": {
                          "Key": {
                            "variable": {
                              "name": "Key",
                              "type": "\"addressid\" string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "\"addressid\" string"
                              }
                            }
                          },
                          "Value": {
                            "variable": {
                              "name": "Value",
                              "type": "true bool"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "true bool"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "variable": {
                      "name": "result",
                      "type": "NoSQLCursor {database = users, collection = users}"
                    }
                  },
                  {
                    "variable": {
                      "name": "_",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              }
            ],
            "params": null,
            "returns": [
              {
                "variable": {
                  "name": "addresses",
                  "type": "[]user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*userServiceImpl).GetCards(ctx context.Context, cardid string)",
            "depth": 2,
            "caller": "OrderService",
            "edges": [
              {
                "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
                "depth": 3,
                "caller": "UserService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "OrderService"
                        },
                        {
                          "name": "ctx",
                          "creator": "FrontendService"
                        }
                      ]
                    }
                  },
                  {
                    "variable": {
                      "name": "filter",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "variable": {
                          "type": "struct{Key \"addressid\" string, Value string}"
                        },
                        "struct_fields": {
                          "Key": {
                            "variable": {
                              "name": "Key",
                              "type": "\"addressid\" string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "\"addressid\" string"
                              }
                            }
                          },
                          "Value": {
                            "variable": {
                              "name": "Value",
                              "type": "string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "name": "cardid",
                                "type": "string",
                                "refs": [
                                  {
                                    "name": "cardID",
                                    "creator": "OrderService"
                                  },
                                  {
                                    "name": "cardID",
                                    "creator": "FrontendService"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  {
                    "variable": {
                      "name": "projection",
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "variable": {
                          "type": "struct{Key \"addressid\" string, Value true bool}"
                        },
                        "struct_fields": {
                          "Key": {
                            "variable": {
                              "name": "Key",
                              "type": "\"addressid\" string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "\"addressid\" string"
                              }
                            }
                          },
                          "Value": {
                            "variable": {
                              "name": "Value",
                              "type": "true bool"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "type": "true bool"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "variable": {
                      "name": "result",
                      "type": "NoSQLCursor {database = users, collection = users}"
                    }
                  },
                  {
                    "variable": {
                      "name": "_",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "user_db"
              }
            ],
            "params": null,
            "returns": [
              {
                "variable": {
                  "name": "cards",
                  "type": "[]user.Card struct{LongNum string, Expires string, CCV string, ID string}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*paymentImpl).Authorise(ctx context.Context, amount float32)",
            "depth": 2,
            "caller": "OrderService",
            "edges": null,
            "params": null,
            "returns": [
              {
                "variable": {
                  "type": "payment.Authorisation struct{Authorised bool, Message string}"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "(*shippingImpl).PostShipping(ctx context.Context, shipment shipping.Shipment struct{ID string, Name string, Status string})",
            "depth": 2,
            "caller": "OrderService",
            "edges": [
              {
                "method": "Queue.Push(ctx context.Context, item interface{})",
                "depth": 3,
                "caller": "ShippingService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "OrderService"
                        }
                      ]
                    }
                  },
                  {
                    "variable": {
                      "name": "shipment",
                      "type": "shipping.Shipment struct{ID string, Name string, Status string}",
                      "refs": [
                        {
                          "name": "shipment",
                          "creator": "OrderService"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "variable": {
                      "type": "bool"
                    }
                  },
                  {
                    "variable": {
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "shipqueue"
              },
              {
                "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
                "depth": 3,
                "caller": "ShippingService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "OrderService"
                        }
                      ]
                    }
                  },
                  {
                    "variable": {
                      "name": "shipment",
                      "type": "shipping.Shipment struct{ID string, Name string, Status string}",
                      "refs": [
                        {
                          "name": "shipment",
                          "creator": "OrderService"
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "variable": {
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "shipdb"
              }
            ],
            "params": null,
            "returns": [
              {
                "variable": {
                  "name": "shipment",
                  "type": "shipping.Shipment struct{ID string, Name string, Status string}"
                },
                "struct_fields": {
                  "ID": {
                    "variable": {
                      "name": "ID",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              {
                "variable": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ]
          },
          {
            "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
            "depth": 2,
            "caller": "OrderService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "order",
                  "type": "order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status string}, Date string, Total float32}"
                },
                "struct_fields": {
                  "Address": {
                    "variable": {
                      "name": "Address",
                      "type": "[]user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "addresses",
                        "type": "[]user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
                      }
                    }
                  },
                  "Card": {
                    "variable": {
                      "name": "Card",
                      "type": "[]user.Card struct{LongNum string, Expires string, CCV string, ID string}"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "cards",
                        "type": "[]user.Card struct{LongNum string, Expires string, CCV string, ID string}"
                      }
                    }
                  },
                  "CustomerID": {
                    "variable": {
                      "name": "CustomerID",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "customerID",
                        "type": "string",
                        "refs": [
                          {
                            "name": "userID",
                            "creator": "FrontendService"
                          }
                        ]
                      }
                    }
                  },
                  "Date": {
                    "variable": {
                      "name": "Date",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "type": "string"
                      }
                    }
                  },
                  "ID": {
                    "variable": {
                      "name": "ID",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      }
                    }
                  },
                  "Items": {
                    "variable": {
                      "name": "Items",
                      "type": "[]cart.Item struct{ID string, Quantity int, UnitPrice float32}"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "items",
                        "type": "[]cart.Item struct{ID string, Quantity int, UnitPrice float32}"
                      }
                    }
                  },
                  "Shipment": {
                    "variable": {
                      "name": "Shipment",
                      "type": "shipping.Shipment struct{ID string, Name string, Status string}"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "shipment",
                        "type": "shipping.Shipment struct{ID string, Name string, Status string}"
                      },
                      "struct_fields": {
                        "ID": {
                          "variable": {
                            "name": "ID",
                            "type": "string"
                          },
                          "wrapped_variable": {
                            "variable": {
                              "name": "ID",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "Total": {
                    "variable": {
                      "name": "Total",
                      "type": "10 float32"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "amount",
                        "type": "10 float32"
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "order_db"
          },
          {
            "method": "(*cartImpl).DeleteCart(ctx context.Context, customerID string)",
            "depth": 2,
            "caller": "OrderService",
            "edges": [
              {
                "method": "NoSQLDatabase.DeleteMany(ctx context.Context, filter bson.D)",
                "depth": 3,
                "caller": "CartService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "refs": [
                        {
                          "name": "ctx",
                          "creator": "OrderService"
                        },
                        {
                          "name": "ctx",
                          "creator": "FrontendService"
                        }
                      ]
                    }
                  },
                  {
                    "variable": {
                      "type": "primitive.D"
                    },
                    "slice_variables": [
                      {
                        "variable": {
                          "type": "struct{ \"id\" string,  string}"
                        },
                        "struct_fields": {
                          "": {
                            "variable": {
                              "type": "string"
                            },
                            "wrapped_variable": {
                              "variable": {
                                "name": "customerID",
                                "type": "string",
                                "refs": [
                                  {
                                    "name": "customerID",
                                    "creator": "OrderService"
                                  },
                                  {
                                    "name": "sessionID",
                                    "creator": "FrontendService"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                ],
                "returns": [
                  {
                    "variable": {
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "cart_db"
              }
            ],
            "params": null,
            "returns": [
              {
                "variable": {
                  "type": ".error"
                }
              }
            ]
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status string}, Date string, Total float32}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "addressID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "cardID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "cartID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).GetOrder(ctx context.Context, orderID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*orderImpl).GetOrder(ctx context.Context, orderID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "OrderService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "orderID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "orderID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "cursor",
                  "type": "NoSQLCursor {database = order_service, collection = orders}"
                }
              },
              {
                "variable": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "order_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status string}, Date string, Total float32}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "orderID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).Login(ctx context.Context, sessionID string, username string, password string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).Login(ctx context.Context, username string, password string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "query",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"username\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"username\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"username\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "username",
                            "type": "string",
                            "refs": [
                              {
                                "name": "username",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "projection",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"password\" string, Value true bool}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"password\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"password\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "true bool"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "true bool"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = users, collection = users}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "name": "u",
              "type": "user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}"
            },
            "struct_fields": {
              "UserID": {
                "variable": {
                  "name": "UserID",
                  "type": "string"
                },
                "wrapped_variable": {
                  "variable": {
                    "name": "UserID",
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error"
            }
          }
        ]
      },
      {
        "method": "(*cartImpl).MergeCarts(ctx context.Context, customerID string, sessionID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "UserID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "userID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "cart",
                  "type": "(\u0026cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})"
                },
                "addr_of": {
                  "variable": {
                    "type": "cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}"
                  },
                  "struct_fields": {
                    "ID": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      },
                      "wrapped_variable": {
                        "variable": {
                          "name": "customerID",
                          "type": "string",
                          "refs": [
                            {
                              "name": "UserID",
                              "creator": "FrontendService"
                            },
                            {
                              "name": "userID",
                              "creator": "FrontendService"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "bool"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          },
          {
            "method": "NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D)",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "sessionID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "name": "err",
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "password",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).UpdateItem(ctx context.Context, sessionID string, itemID string, quantity int)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).Get(ctx context.Context, id string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "query",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"id\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"id\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"id\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "id",
                            "type": "string",
                            "refs": [
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = catalogue, collection = catalogue}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "name": "item",
              "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}"
            },
            "struct_fields": {
              "ID": {
                "variable": {
                  "name": "ID",
                  "type": "string"
                },
                "wrapped_variable": {
                  "variable": {
                    "name": "ID",
                    "type": "string"
                  }
                }
              },
              "Price": {
                "variable": {
                  "name": "Price",
                  "type": "float32"
                },
                "wrapped_variable": {
                  "variable": {
                    "name": "Price",
                    "type": "float32"
                  }
                }
              }
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error"
            }
          }
        ]
      },
      {
        "method": "(*cartImpl).UpdateItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "cart",
                  "type": "(\u0026cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})"
                },
                "addr_of": {
                  "variable": {
                    "type": "cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}"
                  },
                  "struct_fields": {
                    "ID": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      },
                      "wrapped_variable": {
                        "variable": {
                          "name": "customerID",
                          "type": "string",
                          "refs": [
                            {
                              "name": "sessionID",
                              "creator": "FrontendService"
                            }
                          ]
                        }
                      }
                    },
                    "Items": {
                      "variable": {
                        "name": "Items",
                        "type": "[]cart.Item struct{ID string, Quantity int, UnitPrice float32}"
                      },
                      "wrapped_variable": {
                        "variable": {
                          "type": "[]cart.Item struct{ID string, Quantity int, UnitPrice float32}"
                        },
                        "array_elems": [
                          {
                            "variable": {
                              "name": "item",
                              "type": "cart.Item struct{ID string, Quantity int, UnitPrice float32}",
                              "refs": [
                                {
                                  "name": "",
                                  "creator": "FrontendService"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "bool"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "itemID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "quantity",
          "type": "int"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).ListTags(ctx context.Context)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).Tags(ctx context.Context)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                }
              },
              {
                "variable": {
                  "name": "projection",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"tags\" string, Value true bool}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"tags\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"tags\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "true bool"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "true bool"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = catalogue, collection = catalogue}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]string"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).GetAddress(ctx context.Context, addressID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).GetAddresses(ctx context.Context, addressid string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "OrderService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"addressid\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"addressid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"addressid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "addressid",
                            "type": "string",
                            "refs": [
                              {
                                "name": "addressID",
                                "creator": "OrderService"
                              },
                              {
                                "name": "addressID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "projection",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"addressid\" string, Value true bool}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"addressid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"addressid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "true bool"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "true bool"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = users, collection = users}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "addressID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).GetCard(ctx context.Context, cardID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).GetCards(ctx context.Context, cardid string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "OrderService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"addressid\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"addressid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"addressid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "cardid",
                            "type": "string",
                            "refs": [
                              {
                                "name": "cardID",
                                "creator": "OrderService"
                              },
                              {
                                "name": "cardID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "projection",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"addressid\" string, Value true bool}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"addressid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"addressid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "true bool"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "true bool"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = users, collection = users}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]user.Card struct{LongNum string, Expires string, CCV string, ID string}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "cardID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).DeleteCart(ctx context.Context, sessionID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*cartImpl).DeleteCart(ctx context.Context, customerID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.DeleteMany(ctx context.Context, filter bson.D)",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "OrderService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "customerID",
                                "creator": "OrderService"
                              },
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).ListItems(ctx context.Context, tags []string, order string, pageNum int, pageSize int)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).List(ctx context.Context, tags []string, order string, pageNum int, pageSize int)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = catalogue, collection = catalogue}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "tags",
          "type": "[]string"
        }
      },
      {
        "variable": {
          "name": "order",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "pageNum",
          "type": "int"
        }
      },
      {
        "variable": {
          "name": "pageSize",
          "type": "int"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).Register(ctx context.Context, sessionID string, username string, password string, email string, first string, last string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).Register(ctx context.Context, username string, password string, email string, first string, last string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "u",
                  "type": "user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}"
                },
                "struct_fields": {
                  "Addresses": {
                    "variable": {
                      "name": "Addresses",
                      "type": "user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "type": "user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
                      }
                    }
                  },
                  "Cards": {
                    "variable": {
                      "name": "Cards",
                      "type": "user.Card struct{LongNum string, Expires string, CCV string, ID string}"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "type": "user.Card struct{LongNum string, Expires string, CCV string, ID string}"
                      }
                    }
                  },
                  "Email": {
                    "variable": {
                      "name": "Email",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "email",
                        "type": "string",
                        "refs": [
                          {
                            "name": "email",
                            "creator": "FrontendService"
                          }
                        ]
                      }
                    }
                  },
                  "FirstName": {
                    "variable": {
                      "name": "FirstName",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "first",
                        "type": "string",
                        "refs": [
                          {
                            "name": "first",
                            "creator": "FrontendService"
                          }
                        ]
                      }
                    }
                  },
                  "LastName": {
                    "variable": {
                      "name": "LastName",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "last",
                        "type": "string",
                        "refs": [
                          {
                            "name": "last",
                            "creator": "FrontendService"
                          }
                        ]
                      }
                    }
                  },
                  "Password": {
                    "variable": {
                      "name": "Password",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "password",
                        "type": "string",
                        "refs": [
                          {
                            "name": "password",
                            "creator": "FrontendService"
                          }
                        ]
                      }
                    }
                  },
                  "Username": {
                    "variable": {
                      "name": "Username",
                      "type": "string"
                    },
                    "wrapped_variable": {
                      "variable": {
                        "name": "username",
                        "type": "string",
                        "refs": [
                          {
                            "name": "username",
                            "creator": "FrontendService"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "name": "userID",
              "type": "string"
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error"
            }
          }
        ]
      },
      {
        "method": "(*cartImpl).MergeCarts(ctx context.Context, customerID string, sessionID string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "customerID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "UserID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "userID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "cart",
                  "type": "(\u0026cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})"
                },
                "addr_of": {
                  "variable": {
                    "type": "cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}"
                  },
                  "struct_fields": {
                    "ID": {
                      "variable": {
                        "name": "ID",
                        "type": "string"
                      },
                      "wrapped_variable": {
                        "variable": {
                          "name": "customerID",
                          "type": "string",
                          "refs": [
                            {
                              "name": "UserID",
                              "creator": "FrontendService"
                            },
                            {
                              "name": "userID",
                              "creator": "FrontendService"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "bool"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          },
          {
            "method": "NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D)",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{ \"id\" string,  string}"
                    },
                    "struct_fields": {
                      "": {
                        "variable": {
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "sessionID",
                            "type": "string",
                            "refs": [
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              },
                              {
                                "name": "sessionID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "sessionID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "password",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "email",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "first",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "last",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).GetUser(ctx context.Context, userID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).GetUsers(ctx context.Context, userid string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "OrderService"
                    },
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"userid\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"userid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"userid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "userid",
                            "type": "string",
                            "refs": [
                              {
                                "name": "customerID",
                                "creator": "OrderService"
                              },
                              {
                                "name": "userID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "name": "result",
                  "type": "NoSQLCursor {database = users, collection = users}"
                }
              },
              {
                "variable": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "[]user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).PostAddress(ctx context.Context, userID string, address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*userServiceImpl).PostAddress(ctx context.Context, userid string, address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "UserService",
            "params": [
              {
                "variable": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "variable": {
                  "name": "filter",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"userid\" string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"userid\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"userid\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "userid",
                            "type": "string",
                            "refs": [
                              {
                                "name": "userID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              {
                "variable": {
                  "name": "update",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "variable": {
                      "type": "struct{Key \"address\" string, Value user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}}"
                    },
                    "struct_fields": {
                      "Key": {
                        "variable": {
                          "name": "Key",
                          "type": "\"address\" string"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "type": "\"address\" string"
                          }
                        }
                      },
                      "Value": {
                        "variable": {
                          "name": "Value",
                          "type": "user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
                        },
                        "wrapped_variable": {
                          "variable": {
                            "name": "address",
                            "type": "user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}",
                            "refs": [
                              {
                                "name": "address",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "variable": {
                  "type": "bool"
                }
              },
              {
                "variable": {
                  "type": ".error"
                }
              }
            ],
            "datastore": "user_db"
          }
        ],
        "params": null,
        "returns": [
          {
            "variable": {
              "type": "string"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ]
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string"
        }
      },
      {
        "variable": {
          "name": "address",
          "type": "user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}"
        }
      }
    ]
  }
]