[
  {
    "method": "(*FrontendImpl).LoadCatalogue(ctx context.Context)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).AddSock(ctx context.Context, sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{})",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "struct": {
                  "name": "sock",
                  "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}",
                  "refs": [
                    {
                      "name": "sock",
                      "creator": "FrontendService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "struct": {
              "name": "sock",
              "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}"
            }
          }
        ],
        "returns": [
          {
            "basic": {
              "name": "",
              "type": "string",
              "refs": [
                {
                  "name": "ID",
                  "creator": "CatalogueService"
                }
              ]
            }
          },
          {
            "interface": {
              "name": "",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "CatalogueService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      }
    ]
  },
  {
    "method": "(*FrontendImpl).AddItem(ctx context.Context, sessionID string, itemID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*catalogueImpl).Get(ctx context.Context, id string)",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
            "depth": 2,
            "caller": "CatalogueService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "slice": {
                  "name": "query",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "struct": {
                      "name": "",
                      "type": "struct{Key \"id\" string, Key \"id\" string, Value string, Value string}"
                    },
                    "struct_fields": {
                      "Key": {
                        "field": {
                          "name": "Key",
                          "type": "\"id\" string"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "",
                            "type": "\"id\" string"
                          }
                        }
                      },
                      "Value": {
                        "field": {
                          "name": "Value",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "id",
                            "type": "string",
                            "refs": [
                              {
                                "name": "itemID",
                                "creator": "FrontendService"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            ],
            "returns": [
              {
                "blueprint_backend": {
                  "name": "result",
                  "type": "NoSQLCursor {database = catalogue, collection = catalogue}"
                },
                "target_variable": {
                  "pointer": {
                    "name": "sock",
                    "type": "(*catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string})"
                  },
                  "ptr_to": {
                    "struct": {
                      "name": "sock",
                      "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}"
                    },
                    "struct_fields": {
                      "ImageURL": {
                        "field": {
                          "name": "ImageURL",
                          "type": "[]string"
                        },
                        "wrapped_variable": {
                          "array": {
                            "name": "",
                            "type": "[]string"
                          },
                          "array_elems": [
                            {
                              "basic": {
                                "name": "ImageURL_1",
                                "type": "string"
                              }
                            },
                            {
                              "basic": {
                                "name": "ImageURL_2",
                                "type": "string"
                              }
                            }
                          ]
                        }
                      },
                      "ImageURL_1": {
                        "field": {
                          "name": "ImageURL_1",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "ImageURL_1",
                            "type": "string"
                          }
                        }
                      },
                      "ImageURL_2": {
                        "field": {
                          "name": "ImageURL_2",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "ImageURL_2",
                            "type": "string"
                          }
                        }
                      },
                      "TagString": {
                        "field": {
                          "name": "TagString",
                          "type": "string"
                        },
                        "wrapped_variable": {
                          "basic": {
                            "name": "TagString",
                            "type": "string"
                          }
                        }
                      },
                      "Tags": {
                        "field": {
                          "name": "Tags",
                          "type": "[]string"
                        },
                        "wrapped_variable": {
                          "slice": {
                            "name": "",
                            "type": "[]string"
                          },
                          "slice_variables": [
                            {
                              "basic": {
                                "name": "TagString",
                                "type": "string"
                              }
                            },
                            {
                              "basic": {
                                "name": "",
                                "type": "\",\" string"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              {
                "interface": {
                  "name": "_",
                  "type": ".error"
                }
              }
            ],
            "datastore": "catalogue_db"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "itemID",
              "type": "string"
            }
          }
        ],
        "returns": [
          {
            "struct": {
              "name": "sock",
              "type": "catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}",
              "refs": [
                {
                  "name": "sock",
                  "creator": "CatalogueService"
                }
              ]
            },
            "struct_fields": {
              "ID": {
                "field": {
                  "name": "ID",
                  "type": "string"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "ID",
                    "type": "string"
                  }
                }
              },
              "Price": {
                "field": {
                  "name": "Price",
                  "type": "float32"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "Price",
                    "type": "float32"
                  }
                }
              }
            }
          },
          {
            "interface": {
              "name": "err",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "CatalogueService"
                }
              ]
            }
          }
        ]
      },
      {
        "method": "(*cartImpl).AddItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32})",
        "depth": 1,
        "caller": "FrontendService",
        "edges": [
          {
            "method": "NoSQLDatabase.NoSQLCollection.Upsert(ctx context.Context, filter bson.D, document interface{})",
            "depth": 2,
            "caller": "CartService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "FrontendService"
                    }
                  ]
                }
              },
              {
                "slice": {
                  "name": "",
                  "type": "primitive.D"
                },
                "slice_variables": [
                  {
                    "struct": {
                      "name": "",
                      "type": "struct{ string,  \"id\" string,  string}"
                    }
                  }
                ]
              },
              {
                "pointer": {
                  "name": "cart",
                  "type": "(*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})"
                },
                "ptr_to": {
                  "struct": {
                    "name": "",
                    "type": "cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}"
                  },
                  "struct_fields": {
                    "ID": {
                      "field": {
                        "name": "ID",
                        "type": "string"
                      },
                      "wrapped_variable": {
                        "basic": {
                          "name": "customerID",
                          "type": "string",
                          "refs": [
                            {
                              "name": "sessionID",
                              "creator": "FrontendService"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            ],
            "returns": [
              {
                "basic": {
                  "name": "",
                  "type": "bool"
                }
              },
              {
                "interface": {
                  "name": "",
                  "type": ".error"
                }
              }
            ],
            "datastore": "cart_db"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "sessionID",
              "type": "string"
            }
          },
          {
            "struct": {
              "name": "",
              "type": "cart.Item struct{ID string, Quantity int, UnitPrice float32}"
            },
            "struct_fields": {
              "ID": {
                "field": {
                  "name": "ID",
                  "type": "string"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "ID",
                    "type": "string"
                  }
                }
              },
              "Quantity": {
                "field": {
                  "name": "Quantity",
                  "type": "1 int"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "",
                    "type": "1 int"
                  }
                }
              },
              "UnitPrice": {
                "field": {
                  "name": "UnitPrice",
                  "type": "float32"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "Price",
                    "type": "float32"
                  }
                }
              }
            }
          }
        ],
        "returns": [
          {
            "struct": {
              "name": "_",
              "type": "cart.Item struct{ID string, Quantity 1 int, UnitPrice float32}",
              "refs": [
                {
                  "name": "item",
                  "creator": "CartService"
                },
                {
                  "name": "",
                  "creator": "FrontendService"
                }
              ]
            }
          },
          {
            "interface": {
              "name": "err",
              "type": ".error",
              "refs": [
                {
                  "name": "",
                  "creator": "CartService"
                }
              ]
            }
          }
        ]
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "sessionID",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "itemID",
          "type": "string"
        }
      }
    ]
  }
]