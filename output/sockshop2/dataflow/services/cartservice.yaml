(*cartImpl).AddItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32}):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) customerID string
  - _1 depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - 0 depth 0 (StructObject UserType) item cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - _1 depth 1 (Reference UserType) ref <cart.Item struct{ID string, Quantity int, UnitPrice float32}> @ FrontendService
  - __2 depth 2 (FieldObject FieldType) ID string
  - ___3 depth 3 (BasicObject BasicType) ID string
  - __4 depth 2 (FieldObject FieldType) Quantity 1 int
  - ___5 depth 3 (BasicObject BasicType) 1 int
  - __6 depth 2 (FieldObject FieldType) UnitPrice float32
  - ___7 depth 3 (BasicObject BasicType) Price float32
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}
  - 0 depth 0 (InterfaceObject UserType) _ .error
  - 0 depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - _1 depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __2 depth 2 (FieldObject FieldType) ID string

(*cartImpl).DeleteCart(ctx context.Context, customerID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - _2 depth 1 (Reference UserType) ref <ctx context.Context> @ OrderService
  - __3 depth 2 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - '0 depth 0 (BasicObject BasicType) customerID string --> w-tainted 3x: write(shipqueue.Shipment.Name,
    shipdb.Shipment.Name, order_db.Order.Shipment) --> r-tainted 2x: read(user_db._.userid,
    shipqueue.Shipment.Name)'
  - _1 depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - '_2 depth 1 (Reference BasicType) ref <customerID string> @ OrderService --> w-tainted
    4x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID,
    order_db.Order.Shipment) --> r-tainted 2x: read(shipqueue.Shipment.Name, user_db._.userid)'
  - '__3 depth 2 (Reference BasicType) ref <userID string> @ FrontendService --> w-tainted
    3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.Shipment)
    --> r-tainted 2x: read(user_db._.userid, shipqueue.Shipment.Name)'
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}
  - 0 depth 0 (InterfaceObject UserType) _ .error

(*cartImpl).GetCart(ctx context.Context, customerID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ OrderService
  - __2 depth 2 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) customerID string
  - _1 depth 1 (Reference BasicType) ref <cartID string> @ OrderService
  - __2 depth 2 (Reference BasicType) ref <cartID string> @ FrontendService
  - 0 depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - _1 depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __2 depth 2 (FieldObject FieldType) ID string
  - __6 depth 2 (FieldObject FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - ___7 depth 3 (SliceObject SliceType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}

(*cartImpl).GetItem(ctx context.Context, customerID string, itemID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BasicObject BasicType) customerID string
  - 0 depth 0 (BasicObject BasicType) itemID string

(*cartImpl).MergeCarts(ctx context.Context, customerID string, sessionID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - _2 depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) customerID string
  - _1 depth 1 (Reference BasicType) ref <userID string> @ FrontendService
  - __2 depth 2 (Reference BasicType) ref <UserID string> @ UserService
  - _3 depth 1 (Reference BasicType) ref <UserID string> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) sessionID string
  - _1 depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - _2 depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - 0 depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - _1 depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __2 depth 2 (FieldObject FieldType) ID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}
  - 0 depth 0 (InterfaceObject UserType) _ .error

(*cartImpl).RemoveItem(ctx context.Context, customerID string, itemID string):
  block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) customerID string
  - _1 depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) itemID string
  - _1 depth 1 (Reference BasicType) ref <itemID string> @ FrontendService
  - 0 depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - _1 depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __2 depth 2 (FieldObject FieldType) ID string
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}
  - 0 depth 0 (InterfaceObject UserType) _ .error

(*cartImpl).UpdateItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32})
:
 block 0 (Body):
  - 0 depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - _1 depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __2 depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___3 depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - _1 depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - 0 depth 0 (BasicObject BasicType) customerID string
  - _1 depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - 0 depth 0 (StructObject UserType) item cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - _1 depth 1 (Reference UserType) ref <cart.Item struct{ID string, Quantity int, UnitPrice float32}> @ FrontendService
  - __2 depth 2 (FieldObject FieldType) ID string
  - ___3 depth 3 (BasicObject BasicType) ID string
  - __4 depth 2 (FieldObject FieldType) Quantity int
  - ___5 depth 3 (BasicObject BasicType) quantity int
  - __6 depth 2 (FieldObject FieldType) UnitPrice float32
  - ___7 depth 3 (BasicObject BasicType) Price float32
  - 0 depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - _1 depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __2 depth 2 (FieldObject FieldType) ID string
  - __5 depth 2 (FieldObject FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - ___6 depth 3 (ArrayObject ArrayType) []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}
  - 0 depth 0 (InterfaceObject UserType) _ .error

.NewCartService(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
