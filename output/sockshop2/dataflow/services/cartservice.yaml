(*cartImpl).AddItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32}):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - (BasicVariable BasicType) customerID string
  - (inline) (BasicVariable BasicType) Price float32
  - (inline) (FieldVariable FieldType) UnitPrice float32
  - (inline) (BasicVariable BasicType) 1 int
  - (inline) (FieldVariable FieldType) Quantity 1 int
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (Reference UserType) ref <cart.Item struct{ID string, Quantity int, UnitPrice float32}> @ FrontendService
  - (StructVariable UserType) item cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart, collection = carts}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (StructVariable UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - (PointerVariable PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})

(*cartImpl).DeleteCart(ctx context.Context, customerID string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ OrderService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - |-
    (inline) (Reference BasicType) ref <userID string> @ FrontendService -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - |-
    (inline) (Reference BasicType) ref <customerID string> @ OrderService -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - (BasicVariable BasicType) customerID string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart, collection = carts}
  - (InterfaceVariable UserType) _ .error

(*cartImpl).GetCart(ctx context.Context, customerID string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ OrderService
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <cartID string> @ FrontendService
  - (inline) (Reference BasicType) ref <cartID string> @ OrderService
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - (BasicVariable BasicType) customerID string
  - (inline) (ArrayVariable ArrayType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - (inline) (FieldVariable FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (StructVariable UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - (PointerVariable PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})

(*cartImpl).GetItem(ctx context.Context, customerID string, itemID string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) customerID string
  - (BasicVariable BasicType) itemID string

(*cartImpl).MergeCarts(ctx context.Context, customerID string, sessionID string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <userID string> @ FrontendService
  - (inline) (Reference BasicType) ref <UserID string> @ FrontendService
  - (BasicVariable BasicType) customerID string
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - (BasicVariable BasicType) sessionID string
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (StructVariable UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - (PointerVariable PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart, collection = carts}
  - (InterfaceVariable UserType) _ .error

(*cartImpl).RemoveItem(ctx context.Context, customerID string, itemID string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - (BasicVariable BasicType) customerID string
  - (inline) (Reference BasicType) ref <itemID string> @ FrontendService
  - (BasicVariable BasicType) itemID string
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (StructVariable UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - (PointerVariable PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart, collection = carts}
  - (InterfaceVariable UserType) _ .error

(*cartImpl).UpdateItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32})
:
 block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) cart.cartImpl struct{db NoSQLDatabase}
  - (PointerVariable PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <sessionID string> @ FrontendService
  - (BasicVariable BasicType) customerID string
  - (inline) (BasicVariable BasicType) Price float32
  - (inline) (FieldVariable FieldType) UnitPrice float32
  - (inline) (BasicVariable BasicType) quantity int
  - (inline) (FieldVariable FieldType) Quantity int
  - (inline) (BasicVariable BasicType) ID string
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (Reference UserType) ref <cart.Item struct{ID string, Quantity int, UnitPrice float32}> @ FrontendService
  - (StructVariable UserType) item cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - (inline) (ArrayVariable ArrayType) []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - (inline) (FieldVariable FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - (inline) (FieldVariable FieldType) ID string
  - (inline) (StructVariable UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - (PointerVariable PointerType) cart (*cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}})
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = cart, collection = carts}
  - (InterfaceVariable UserType) _ .error

.NewCartService(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
