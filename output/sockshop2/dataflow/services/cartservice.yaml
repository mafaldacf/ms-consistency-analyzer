(*cartImpl).AddItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32}):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - _ depth 1 (Reference UserType) ref <ctx context.Context> @ FrontendService
  - ' depth 0 (BasicObject BasicType) customerID string'
  - _ depth 1 (Reference BasicType) ref <sessionID string> @ FrontendService
  - ' depth 0 (StructObject UserType) item cart.Item struct{ID string, Quantity int,
    UnitPrice float32}'
  - _ depth 1 (Reference UserType) ref <cart.Item struct{ID string, Quantity int, UnitPrice float32}> @ FrontendService
  - __ depth 2 (FieldObject FieldType) ID string
  - ___ depth 3 (BasicObject BasicType) ID string
  - __ depth 2 (FieldObject FieldType) Quantity 1 int
  - ___ depth 3 (BasicObject BasicType) 1 int
  - __ depth 2 (FieldObject FieldType) UnitPrice float32
  - ___ depth 3 (BasicObject BasicType) Price float32
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items
    []cart.Item struct{ID string, Quantity int, UnitPrice float32}})'
  - _ depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __ depth 2 (FieldObject FieldType) ID string

(*cartImpl).DeleteCart(ctx context.Context, customerID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}'
  - ' depth 0 (InterfaceObject UserType) _ .error'

(*cartImpl).GetCart(ctx context.Context, customerID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items
    []cart.Item struct{ID string, Quantity int, UnitPrice float32}})'
  - _ depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __ depth 2 (FieldObject FieldType) ID string
  - __ depth 2 (FieldObject FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - ___ depth 3 (SliceObject SliceType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}

(*cartImpl).GetItem(ctx context.Context, customerID string, itemID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (BasicObject BasicType) itemID string'

(*cartImpl).MergeCarts(ctx context.Context, customerID string, sessionID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (BasicObject BasicType) sessionID string'
  - ' depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items
    []cart.Item struct{ID string, Quantity int, UnitPrice float32}})'
  - _ depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __ depth 2 (FieldObject FieldType) ID string
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}'
  - ' depth 0 (InterfaceObject UserType) _ .error'

(*cartImpl).RemoveItem(ctx context.Context, customerID string, itemID string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (BasicObject BasicType) itemID string'
  - ' depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items
    []cart.Item struct{ID string, Quantity int, UnitPrice float32}})'
  - _ depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __ depth 2 (FieldObject FieldType) ID string
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}'
  - ' depth 0 (InterfaceObject UserType) _ .error'

(*cartImpl).UpdateItem(ctx context.Context, customerID string, item cart.Item struct{ID string, Quantity int, UnitPrice float32})
:
 block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*cart.cartImpl struct{db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) cart.cartImpl struct{db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (StructObject UserType) item cart.Item struct{ID string, Quantity int,
    UnitPrice float32}'
  - ' depth 0 (PointerObject PointerType) cart (*cart.cart struct{ID string, Items
    []cart.Item struct{ID string, Quantity int, UnitPrice float32}})'
  - _ depth 1 (StructObject UserType) cart.cart struct{ID string, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}}
  - __ depth 2 (FieldObject FieldType) ID string
  - __ depth 2 (FieldObject FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - ___ depth 3 (ArrayObject ArrayType) []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = cart, collection = carts}'
  - ' depth 0 (InterfaceObject UserType) _ .error'

.NewCartService(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase'
