(*queueMasterImpl).Run(ctx context.Context):
  block 5 (SelectAfterCase):
  - (inline) (ServiceVariable ServiceType) shipping shipping.ShippingService
  - (inline) (FieldVariable FieldType) shipping shipping.ShippingService
  - (inline) (BlueprintBackendVariable BlueprintBackendType) queue Queue
  - (inline) (FieldVariable FieldType) q Queue
  - (inline) (BasicVariable BasicType) 0 int
  - (inline) (FieldVariable FieldType) processed 0 int
  - (inline) (BasicVariable BasicType) false bool
  - (inline) (FieldVariable FieldType) exitOnError false bool
  - (inline) (StructVariable UserType) queuemaster.queueMasterImpl struct{q Queue, shipping shipping.ShippingService, exitOnError false bool, processed 0 int}
  - (PointerVariable PointerType) q (*queuemaster.queueMasterImpl struct{q Queue, shipping shipping.ShippingService, exitOnError false bool, processed 0 int})
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) string -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - |-
    (inline) (Reference FieldType) ref <ID string> @ OrderService -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - (inline) (BasicVariable BasicType) ID string
  - |-
    (inline) (Reference FieldType) ref <ID string> @ OrderService -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - (inline) (FieldVariable FieldType) ID string
  - |-
    (inline) (BasicVariable BasicType) "awaiting shipment" string -->
       w-tainted 2x: write(shipqueue.Shipment.Status, shipdb.Shipment.Status)
  - |-
    (inline) (FieldVariable FieldType) Status "awaiting shipment" string -->
       w-tainted 2x: write(shipqueue.Shipment.Status, shipdb.Shipment.Status)
  - |-
    (inline) (Reference BasicType) ref <userID string> @ FrontendService -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - |-
    (inline) (BasicVariable BasicType) customerID string -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - |-
    (inline) (FieldVariable FieldType) Name string -->
       w-tainted 2x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - |-
    (inline) (Reference UserType) ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}> @ OrderService -->
       w-tainted 2x: write(shipqueue.Shipment, shipdb.Shipment)
  - |-
    (inline) (Reference UserType) ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}> @ OrderService -->
       w-tainted 2x: write(shipqueue.Shipment, shipdb.Shipment)
  - |-
    (inline) (Reference UserType) ref <shipment shipping.Shipment struct{ID string, Name string, Status string}> @ QueueMaster -->
       w-tainted 2x: write(shipqueue.Shipment, shipdb.Shipment)
  - (StructVariable UserType) shipment shipping.Shipment struct{ID string, Name string, Status string}

.NewQueueMaster(ctx context.Context, queue Queue, shipping shipping.ShippingService):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) queue Queue
  - (ServiceVariable ServiceType) shipping shipping.ShippingService
