(*queueMasterImpl).Run(ctx context.Context):
  block 5 (SelectAfterCase):
  - 0 depth 0 (PointerObject PointerType) q (*queuemaster.queueMasterImpl struct{q Queue, shipping shipping.ShippingService, exitOnError bool, processed int32})
  - _1 depth 1 (StructObject UserType) queuemaster.queueMasterImpl struct{q Queue, shipping shipping.ShippingService, exitOnError false bool, processed 0 int}
  - __2 depth 2 (FieldObject FieldType) exitOnError false bool
  - ___3 depth 3 (BasicObject BasicType) false bool
  - __4 depth 2 (FieldObject FieldType) processed 0 int
  - ___5 depth 3 (BasicObject BasicType) 0 int
  - __6 depth 2 (FieldObject FieldType) q Queue
  - ___7 depth 3 (BlueprintBackendObject BlueprintBackendType) queue Queue
  - __8 depth 2 (FieldObject FieldType) shipping shipping.ShippingService
  - ___9 depth 3 (ServiceObject ServiceType) shipping shipping.ShippingService
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - '0 depth 0 (StructObject UserType) shipment shipping.Shipment struct{ID string,
    Name string, Status string} --> w-tainted 3x: write(shipqueue.Shipment, shipdb.Shipment,
    order_db.Order.Shipment) --> r-tainted 1x: read(shipqueue.Shipment)'
  - '_1 depth 1 (Reference UserType) ref <shipment shipping.Shipment struct{ID string,
    Name string, Status string}> @ QueueMaster --> w-tainted 3x: write(shipqueue.Shipment,
    shipdb.Shipment, order_db.Order.Shipment) --> r-tainted 1x: read(shipqueue.Shipment)'
  - '__2 depth 2 (Reference UserType) ref <shipment shipping.Shipment struct{ID string,
    Name string, Status "awaiting shipment" string}> @ OrderService --> w-tainted
    3x: write(shipqueue.Shipment, shipdb.Shipment, order_db.Order.Shipment) --> r-tainted
    1x: read(shipqueue.Shipment)'
  - '___3 depth 3 (FieldObject FieldType) ID string --> w-tainted 3x: write(shipqueue.Shipment.ID,
    shipdb.Shipment.ID, order_db.Order.Shipment.ID) --> r-tainted 1x: read(shipqueue.Shipment.ID)'
  - '____4 depth 4 (BasicObject BasicType) string --> w-tainted 3x: write(shipqueue.Shipment.ID,
    shipdb.Shipment.ID, order_db.Order.Shipment.ID) --> r-tainted 1x: read(shipqueue.Shipment.ID)'
  - '___5 depth 3 (FieldObject FieldType) Name string --> w-tainted 3x: write(shipqueue.Shipment.Name,
    shipdb.Shipment.Name, order_db.Order.Shipment) --> r-tainted 1x: read(shipqueue.Shipment.Name)'
  - '____6 depth 4 (BasicObject BasicType) customerID string --> w-tainted 4x: write(shipqueue.Shipment.Name,
    shipdb.Shipment.Name, order_db.Order.CustomerID, order_db.Order.Shipment) -->
    r-tainted 2x: read(shipqueue.Shipment.Name, user_db._.userid)'
  - '_____7 depth 5 (Reference BasicType) ref <userID string> @ FrontendService -->
    w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.Shipment)
    --> r-tainted 2x: read(user_db._.userid, shipqueue.Shipment.Name)'
  - '___8 depth 3 (FieldObject FieldType) Status "awaiting shipment" string --> w-tainted
    3x: write(shipqueue.Shipment.Status, shipdb.Shipment.Status, order_db.Order.Shipment)
    --> r-tainted 1x: read(shipqueue.Shipment.Status)'
  - '____9 depth 4 (BasicObject BasicType) "awaiting shipment" string --> w-tainted
    3x: write(shipqueue.Shipment.Status, shipdb.Shipment.Status, order_db.Order.Shipment)
    --> r-tainted 1x: read(shipqueue.Shipment.Status)'
  - '_10 depth 1 (Reference UserType) ref <shipment shipping.Shipment struct{ID string,
    Name string, Status "awaiting shipment" string}> @ OrderService --> w-tainted
    3x: write(shipqueue.Shipment, shipdb.Shipment, order_db.Order.Shipment) --> r-tainted
    1x: read(shipqueue.Shipment)'
  - '_18 depth 1 (FieldObject FieldType) ID string --> w-tainted 2x: write(shipqueue.Shipment.ID,
    shipdb.Shipment.ID) --> r-tainted 1x: read(shipqueue.Shipment.ID)'
  - '__19 depth 2 (Reference FieldType) ref <ID string> @ OrderService --> w-tainted
    3x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID, order_db.Order.Shipment.ID)
    --> r-tainted 1x: read(shipqueue.Shipment.ID)'
  - '__21 depth 2 (BasicObject BasicType) ID string --> w-tainted 2x: write(shipqueue.Shipment.ID,
    shipdb.Shipment.ID) --> r-tainted 1x: read(shipqueue.Shipment.ID)'
  - '___22 depth 3 (Reference FieldType) ref <ID string> @ OrderService --> w-tainted
    3x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID, order_db.Order.Shipment.ID)
    --> r-tainted 1x: read(shipqueue.Shipment.ID)'

.NewQueueMaster(ctx context.Context, queue Queue, shipping shipping.ShippingService):
  block 0 (Body):
  - 0 depth 0 (InterfaceObject UserType) ctx context.Context
  - 0 depth 0 (BlueprintBackendObject BlueprintBackendType) queue Queue
  - 0 depth 0 (ServiceObject ServiceType) shipping shipping.ShippingService
