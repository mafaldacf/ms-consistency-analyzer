(*userServiceImpl).Delete(ctx context.Context, entity string, id string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) entity string
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "id" string
  - (inline) (FieldVariable FieldType) Key "id" string
  - (inline) (StructVariable StructType) struct{Key "id" string, Value string}
  - (SliceVariable UserType) query primitive.D

(*userServiceImpl).GetAddresses(ctx context.Context, addressid string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ OrderService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <addressID string> @ FrontendService
  - (inline) (Reference BasicType) ref <addressID string> @ FrontendService
  - (inline) (Reference BasicType) ref <addressID string> @ OrderService
  - (BasicVariable BasicType) addressid string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (ArrayVariable ArrayType) addresses []user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "addressid" string
  - (inline) (FieldVariable FieldType) Key "addressid" string
  - (inline) (StructVariable StructType) struct{Key "addressid" string, Value string}
  - (SliceVariable UserType) filter primitive.D
  - (inline) (BasicVariable BasicType) true bool
  - (inline) (FieldVariable FieldType) Value true bool
  - (inline) (BasicVariable BasicType) "addressid" string
  - (inline) (FieldVariable FieldType) Key "addressid" string
  - (inline) (StructVariable StructType) struct{Key "addressid" string, Value true bool}
  - (SliceVariable UserType) projection primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error

(*userServiceImpl).GetCards(ctx context.Context, cardid string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ OrderService
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <cardID string> @ FrontendService
  - (inline) (Reference BasicType) ref <cardID string> @ OrderService
  - (inline) (Reference BasicType) ref <cardID string> @ FrontendService
  - (BasicVariable BasicType) cardid string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (ArrayVariable ArrayType) cards []user.Card struct{LongNum string, Expires string, CCV string, ID string}
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "addressid" string
  - (inline) (FieldVariable FieldType) Key "addressid" string
  - (inline) (StructVariable StructType) struct{Key "addressid" string, Value string}
  - (SliceVariable UserType) filter primitive.D
  - (inline) (BasicVariable BasicType) true bool
  - (inline) (FieldVariable FieldType) Value true bool
  - (inline) (BasicVariable BasicType) "addressid" string
  - (inline) (FieldVariable FieldType) Key "addressid" string
  - (inline) (StructVariable StructType) struct{Key "addressid" string, Value true bool}
  - (SliceVariable UserType) projection primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error

(*userServiceImpl).GetUsers(ctx context.Context, userid string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ OrderService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <userID string> @ FrontendService
  - |-
    (inline) (Reference BasicType) ref <userID string> @ FrontendService -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - |-
    (inline) (Reference BasicType) ref <customerID string> @ OrderService -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - (BasicVariable BasicType) userid string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (ArrayVariable ArrayType) users []user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "userid" string
  - (inline) (FieldVariable FieldType) Key "userid" string
  - (inline) (StructVariable StructType) struct{Key "userid" string, Value string}
  - (SliceVariable UserType) filter primitive.D
  - (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error

(*userServiceImpl).Login(ctx context.Context, username string, password string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <username string> @ FrontendService
  - (BasicVariable BasicType) username string
  - (inline) (Reference BasicType) ref <password string> @ FrontendService
  - (BasicVariable BasicType) password string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "username" string
  - (inline) (FieldVariable FieldType) Key "username" string
  - (inline) (StructVariable StructType) struct{Key "username" string, Value string}
  - (SliceVariable UserType) query primitive.D
  - (inline) (BasicVariable BasicType) true bool
  - (inline) (FieldVariable FieldType) Value true bool
  - (inline) (BasicVariable BasicType) "password" string
  - (inline) (FieldVariable FieldType) Key "password" string
  - (inline) (StructVariable StructType) struct{Key "password" string, Value true bool}
  - (SliceVariable UserType) projection primitive.D
  - (StructVariable UserType) user user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string},
    Cards user.Card struct{LongNum string, Expires string, CCV string, ID string},
    UserID string, Salt string}
  - (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error

(*userServiceImpl).PostAddress(ctx context.Context, userid string, address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string})
:
 block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <userID string> @ FrontendService
  - (BasicVariable BasicType) userid string
  - (inline) (Reference UserType) ref <address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}> @ FrontendService
  - (StructVariable UserType) address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "userid" string
  - (inline) (FieldVariable FieldType) Key "userid" string
  - (inline) (StructVariable StructType) struct{Key "userid" string, Value string}
  - (SliceVariable UserType) filter primitive.D
  - (inline) (FieldVariable FieldType) Value user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}
  - (inline) (BasicVariable BasicType) "address" string
  - (inline) (FieldVariable FieldType) Key "address" string
  - (inline) (StructVariable StructType) struct{Key "address" string, Value user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}}
  - (SliceVariable UserType) update primitive.D

(*userServiceImpl).PostCard(ctx context.Context, userid string, card user.Card struct{LongNum string, Expires string, CCV string, ID string})
:
 block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (Reference BasicType) ref <userID string> @ FrontendService
  - (BasicVariable BasicType) userid string
  - (inline) (Reference UserType) ref <card user.Card struct{LongNum string, Expires string, CCV string, ID string}> @ FrontendService
  - (StructVariable UserType) card user.Card struct{LongNum string, Expires string, CCV string, ID string}
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error
  - (inline) (FieldVariable FieldType) Value string
  - (inline) (BasicVariable BasicType) "userid" string
  - (inline) (FieldVariable FieldType) Key "userid" string
  - (inline) (StructVariable StructType) struct{Key "userid" string, Value string}
  - (SliceVariable UserType) filter primitive.D
  - (inline) (FieldVariable FieldType) Value user.Card struct{LongNum string, Expires string, CCV string, ID string}
  - (inline) (BasicVariable BasicType) "card" string
  - (inline) (FieldVariable FieldType) Key "card" string
  - (inline) (StructVariable StructType) struct{Key "card" string, Value user.Card struct{LongNum string, Expires string, CCV string, ID string}}
  - (SliceVariable UserType) update primitive.D

(*userServiceImpl).PostUser(ctx context.Context, u user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string})
:
 block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (inline) (BasicVariable BasicType) UserID string
  - (inline) (FieldVariable FieldType) UserID string
  - (StructVariable UserType) u user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string},
    Cards user.Card struct{LongNum string, Expires string, CCV string, ID string},
    UserID string, Salt string}
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error

(*userServiceImpl).Register(ctx context.Context, username string, password string, email string, first string, last string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*user.userServiceImpl struct{db NoSQLDatabase, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (Reference BasicType) ref <username string> @ FrontendService -->
       w-tainted 1x: write(user_db.User.Username)
  - |-
    (BasicVariable BasicType) username string -->
       w-tainted 1x: write(user_db.User.Username)
  - |-
    (inline) (Reference BasicType) ref <password string> @ FrontendService -->
       w-tainted 1x: write(user_db.User.Password)
  - |-
    (BasicVariable BasicType) password string -->
       w-tainted 1x: write(user_db.User.Password)
  - |-
    (inline) (Reference BasicType) ref <email string> @ FrontendService -->
       w-tainted 1x: write(user_db.User.Email)
  - |-
    (BasicVariable BasicType) email string -->
       w-tainted 1x: write(user_db.User.Email)
  - |-
    (inline) (Reference BasicType) ref <first string> @ FrontendService -->
       w-tainted 1x: write(user_db.User.FirstName)
  - |-
    (BasicVariable BasicType) first string -->
       w-tainted 1x: write(user_db.User.FirstName)
  - |-
    (inline) (Reference BasicType) ref <last string> @ FrontendService -->
       w-tainted 1x: write(user_db.User.LastName)
  - |-
    (BasicVariable BasicType) last string -->
       w-tainted 1x: write(user_db.User.LastName)
  - |-
    (inline) (BasicVariable BasicType) username string -->
       w-tainted 1x: write(user_db.User.Username)
  - |-
    (inline) (FieldVariable FieldType) Username string -->
       w-tainted 1x: write(user_db.User.Username)
  - (inline) (BasicVariable BasicType) UserID string
  - (inline) (FieldVariable FieldType) UserID string
  - |-
    (inline) (BasicVariable BasicType) password string -->
       w-tainted 1x: write(user_db.User.Password)
  - |-
    (inline) (FieldVariable FieldType) Password string -->
       w-tainted 1x: write(user_db.User.Password)
  - |-
    (inline) (BasicVariable BasicType) last string -->
       w-tainted 1x: write(user_db.User.LastName)
  - |-
    (inline) (FieldVariable FieldType) LastName string -->
       w-tainted 1x: write(user_db.User.LastName)
  - |-
    (inline) (BasicVariable BasicType) first string -->
       w-tainted 1x: write(user_db.User.FirstName)
  - |-
    (inline) (FieldVariable FieldType) FirstName string -->
       w-tainted 1x: write(user_db.User.FirstName)
  - |-
    (inline) (BasicVariable BasicType) email string -->
       w-tainted 1x: write(user_db.User.Email)
  - |-
    (inline) (FieldVariable FieldType) Email string -->
       w-tainted 1x: write(user_db.User.Email)
  - |-
    (inline) (StructVariable UserType) user.Card struct{LongNum string, Expires string, CCV string, ID string} -->
       w-tainted 1x: write(user_db.User.Cards)
  - |-
    (inline) (FieldVariable FieldType) Cards user.Card struct{LongNum string, Expires string, CCV string, ID string} -->
       w-tainted 1x: write(user_db.User.Cards)
  - |-
    (inline) (StructVariable UserType) user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string} -->
       w-tainted 1x: write(user_db.User.Addresses)
  - |-
    (inline) (FieldVariable FieldType) Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string} -->
       w-tainted 1x: write(user_db.User.Addresses)
  - |-
    (StructVariable UserType) u user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string} -->
       w-tainted 1x: write(user_db.User)
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = users, collection = users}
  - (InterfaceVariable UserType) _ .error

.NewUserServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
