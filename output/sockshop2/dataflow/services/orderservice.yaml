(*orderImpl).GetOrder(ctx context.Context, orderID string):
  block 2 (IfDone):
  - ' depth 0 (PointerObject PointerType) s (*order.orderImpl struct{users user.UserService,
    carts cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService,
    db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) order.orderImpl struct{users user.UserService, carts cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService, db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) carts cart.CartService
  - ___ depth 3 (ServiceObject ServiceType) cartService cart.CartService
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) orderDB NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) payments payment.PaymentService
  - ___ depth 3 (ServiceObject ServiceType) payments payment.PaymentService
  - __ depth 2 (FieldObject FieldType) shipping shipping.ShippingService
  - ___ depth 3 (ServiceObject ServiceType) shipping shipping.ShippingService
  - __ depth 2 (FieldObject FieldType) users user.UserService
  - ___ depth 3 (ServiceObject ServiceType) userService user.UserService
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) orderID string'
  - ' depth 0 (SliceObject UserType) filter primitive.D'
  - _ depth 1 (StructObject StructType) struct{ "id" string, string}
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = order_service, collection = orders}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) cursor NoSQLCursor {database
    = order_service, collection = orders}'
  - _ depth 1 (StructObject UserType) order order.Order struct{ID string, CustomerID string, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32, Total float32}
  - ' depth 0 (InterfaceObject UserType) err .error'

(*orderImpl).GetOrders(ctx context.Context, customerID string):
  block 5 (IfDone):
  - ' depth 0 (PointerObject PointerType) s (*order.orderImpl struct{users user.UserService,
    carts cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService,
    db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) order.orderImpl struct{users user.UserService, carts cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService, db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) carts cart.CartService
  - ___ depth 3 (ServiceObject ServiceType) cartService cart.CartService
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) orderDB NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) payments payment.PaymentService
  - ___ depth 3 (ServiceObject ServiceType) payments payment.PaymentService
  - __ depth 2 (FieldObject FieldType) shipping shipping.ShippingService
  - ___ depth 3 (ServiceObject ServiceType) shipping shipping.ShippingService
  - __ depth 2 (FieldObject FieldType) users user.UserService
  - ___ depth 3 (ServiceObject ServiceType) userService user.UserService
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (SliceObject UserType) filter primitive.D'
  - _ depth 1 (StructObject StructType) struct{ "customerid" string, string}
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = order_service, collection = orders}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) cursor NoSQLCursor {database
    = order_service, collection = orders}'
  - _ depth 1 (ArrayObject ArrayType) orders []order.Order struct{ID string, CustomerID string, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32, Total float32}
  - ' depth 0 (InterfaceObject UserType) err .error'
  - ' depth 0 (InterfaceObject UserType) err .error'

(*orderImpl).NewOrder(ctx context.Context, customerID string, addressID string, cardID string, cartID string):
  block 5 (IfDone):
  - ' depth 0 (PointerObject PointerType) s (*order.orderImpl struct{users user.UserService,
    carts cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService,
    db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) order.orderImpl struct{users user.UserService, carts cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService, db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) carts cart.CartService
  - ___ depth 3 (ServiceObject ServiceType) cartService cart.CartService
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) orderDB NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) payments payment.PaymentService
  - ___ depth 3 (ServiceObject ServiceType) payments payment.PaymentService
  - __ depth 2 (FieldObject FieldType) shipping shipping.ShippingService
  - ___ depth 3 (ServiceObject ServiceType) shipping shipping.ShippingService
  - __ depth 2 (FieldObject FieldType) users user.UserService
  - ___ depth 3 (ServiceObject ServiceType) userService user.UserService
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) customerID string'
  - ' depth 0 (BasicObject BasicType) addressID string'
  - ' depth 0 (BasicObject BasicType) cardID string'
  - ' depth 0 (BasicObject BasicType) cartID string'
  - ' depth 0 (StructObject UserType) wg sync.WaitGroup'
  - ' depth 0 (ArrayObject ArrayType) items []cart.Item struct{ID string, Quantity
    int, UnitPrice float32}'
  - ' depth 0 (ArrayObject ArrayType) addresses []user.Address struct{Street string,
    Number string, Country string, City string, PostCode string, ID string}'
  - ' depth 0 (ArrayObject ArrayType) cards []user.Card struct{LongNum string, Expires
    string, CCV string, ID string}'
  - ' depth 0 (BasicObject BasicType) amount 10 float32'
  - ' depth 0 (StructObject UserType) shipment shipping.Shipment struct{ID string,
    Name string, Status "awaiting shipment" string}'
  - _ depth 1 (FieldObject FieldType) ID string
  - __ depth 2 (BasicObject BasicType) string
  - _ depth 1 (FieldObject FieldType) Name string
  - _ depth 1 (FieldObject FieldType) Status "awaiting shipment" string
  - __ depth 2 (BasicObject BasicType) "awaiting shipment" string
  - ' depth 0 (StructObject UserType) shipment shipping.Shipment struct{ID string,
    Name string, Status "awaiting shipment" string}'
  - _ depth 1 (FieldObject FieldType) ID string
  - __ depth 2 (BasicObject BasicType) ID string
  - ' depth 0 (InterfaceObject UserType) err .error'
  - ' depth 0 (StructObject UserType) order order.Order struct{ID string, CustomerID
    string, Address user.Address struct{Street string, Number string, Country string,
    City string, PostCode string, ID string}, Card user.Card struct{LongNum string,
    Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity
    int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string,
    Status "awaiting shipment" string}, Date string, Total 10 float32, Total float32}'
  - _ depth 1 (FieldObject FieldType) Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}
  - __ depth 2 (StructObject UserType) user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}
  - _ depth 1 (FieldObject FieldType) Card user.Card struct{LongNum string, Expires string, CCV string, ID string}
  - __ depth 2 (StructObject UserType) user.Card struct{LongNum string, Expires string, CCV string, ID string}
  - _ depth 1 (FieldObject FieldType) CustomerID string
  - _ depth 1 (FieldObject FieldType) Date string
  - __ depth 2 (BasicObject BasicType) string
  - _ depth 1 (FieldObject FieldType) ID string
  - _ depth 1 (FieldObject FieldType) Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}
  - _ depth 1 (FieldObject FieldType) Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}
  - _ depth 1 (FieldObject FieldType) Total 10 float32
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = order_service, collection = orders}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (InterfaceObject UserType) err .error'

.NewOrderService(ctx context.Context, userService user.UserService, cartService cart.CartService, payments payment.PaymentService, shipping shipping.ShippingService, orderDB NoSQLDatabase)
:
 block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (ServiceObject ServiceType) userService user.UserService'
  - ' depth 0 (ServiceObject ServiceType) cartService cart.CartService'
  - ' depth 0 (ServiceObject ServiceType) payments payment.PaymentService'
  - ' depth 0 (ServiceObject ServiceType) shipping shipping.ShippingService'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) orderDB NoSQLDatabase'
