(*shippingImpl).GetShipment(ctx context.Context, id string):
  block 2 (IfDone):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) queue Queue
  - (inline) (FieldVariable FieldType) q Queue
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) shipping.shippingImpl struct{q Queue, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*shipping.shippingImpl struct{q Queue, db NoSQLDatabase})
  - (InterfaceVariable UserType) ctx context.Context
  - (BasicVariable BasicType) id string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = shipping_service, collection = shipments}
  - (InterfaceVariable UserType) _ .error
  - (BlueprintBackendVariable BlueprintBackendType) cursor NoSQLCursor {database = shipping_service, collection = shipments}
  - (InterfaceVariable UserType) err .error
  - (StructVariable UserType) shipment shipping.Shipment struct{ID string, Name string, Status string}

(*shippingImpl).PostShipping(ctx context.Context, shipment shipping.Shipment struct{ID string, Name string, Status string}):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) queue Queue
  - (inline) (FieldVariable FieldType) q Queue
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) shipping.shippingImpl struct{q Queue, db NoSQLDatabase}
  - (PointerVariable PointerType) service (*shipping.shippingImpl struct{q Queue, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService
  - (inline) (Reference UserType) ref <ctx context.Context> @ OrderService
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) "awaiting shipment" string -->
       w-tainted 2x: write(shipqueue.Shipment.Status, shipdb.Shipment.Status)
  - |-
    (inline) (FieldVariable FieldType) Status "awaiting shipment" string -->
       w-tainted 2x: write(shipqueue.Shipment.Status, shipdb.Shipment.Status)
  - |-
    (inline) (Reference BasicType) ref <userID string> @ FrontendService -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - |-
    (inline) (BasicVariable BasicType) customerID string -->
       w-tainted 3x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name, order_db.Order.CustomerID)
  - |-
    (inline) (FieldVariable FieldType) Name string -->
       w-tainted 2x: write(shipqueue.Shipment.Name, shipdb.Shipment.Name)
  - |-
    (inline) (BasicVariable BasicType) string -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - |-
    (inline) (FieldVariable FieldType) ID string -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - |-
    (inline) (Reference UserType) ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}> @ OrderService -->
       w-tainted 2x: write(shipqueue.Shipment, shipdb.Shipment)
  - |-
    (StructVariable UserType) shipment shipping.Shipment struct{ID string, Name string, Status string} -->
       w-tainted 2x: write(shipqueue.Shipment, shipdb.Shipment)
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = shipping_service, collection = shipments}
  - (InterfaceVariable UserType) _ .error

(*shippingImpl).UpdateStatus(ctx context.Context, id string, status string):
  block 0 (Body):
  - (inline) (BlueprintBackendVariable BlueprintBackendType) queue Queue
  - (inline) (FieldVariable FieldType) q Queue
  - (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
  - (inline) (FieldVariable FieldType) db NoSQLDatabase
  - (inline) (StructVariable UserType) shipping.shippingImpl struct{q Queue, db NoSQLDatabase}
  - (PointerVariable PointerType) s (*shipping.shippingImpl struct{q Queue, db NoSQLDatabase})
  - (inline) (Reference UserType) ref <ctx context.Context> @ QueueMaster
  - (InterfaceVariable UserType) ctx context.Context
  - |-
    (inline) (BasicVariable BasicType) string -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - |-
    (inline) (Reference FieldType) ref <ID string> @ OrderService -->
       w-tainted 2x: write(shipqueue.Shipment.ID, shipdb.Shipment.ID)
  - (inline) (Reference BasicType) ref <ID string> @ QueueMaster
  - (BasicVariable BasicType) id string
  - (inline) (Reference BasicType) ref <"shipped" string> @ QueueMaster
  - (BasicVariable BasicType) status string
  - (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection {database = shipping_service, collection = shipments}
  - (InterfaceVariable UserType) _ .error

.NewShippingService(ctx context.Context, queue Queue, db NoSQLDatabase):
  block 0 (Body):
  - (InterfaceVariable UserType) ctx context.Context
  - (BlueprintBackendVariable BlueprintBackendType) queue Queue
  - (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase
