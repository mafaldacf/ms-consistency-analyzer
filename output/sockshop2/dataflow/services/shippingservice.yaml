(*shippingImpl).GetShipment(ctx context.Context, id string):
  block 2 (IfDone):
  - ' depth 0 (PointerObject PointerType) s (*shipping.shippingImpl struct{q Queue,
    db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) shipping.shippingImpl struct{q Queue, db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) q Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) queue Queue
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) id string'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = shipping_service, collection = shipments}'
  - ' depth 0 (InterfaceObject UserType) _ .error'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) cursor NoSQLCursor {database
    = shipping_service, collection = shipments}'
  - _ depth 1 (StructObject UserType) shipment shipping.Shipment struct{ID string, Name string, Status string}
  - ' depth 0 (InterfaceObject UserType) err .error'

(*shippingImpl).PostShipping(ctx context.Context, shipment shipping.Shipment struct{ID string, Name string, Status string}):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) service (*shipping.shippingImpl struct{q
    Queue, db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) shipping.shippingImpl struct{q Queue, db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) q Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) queue Queue
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (StructObject UserType) shipment shipping.Shipment struct{ID string,
    Name string, Status string}'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = shipping_service, collection = shipments}'
  - ' depth 0 (InterfaceObject UserType) _ .error'

(*shippingImpl).UpdateStatus(ctx context.Context, id string, status string):
  block 0 (Body):
  - ' depth 0 (PointerObject PointerType) s (*shipping.shippingImpl struct{q Queue,
    db NoSQLDatabase})'
  - _ depth 1 (StructObject UserType) shipping.shippingImpl struct{q Queue, db NoSQLDatabase}
  - __ depth 2 (FieldObject FieldType) db NoSQLDatabase
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase
  - __ depth 2 (FieldObject FieldType) q Queue
  - ___ depth 3 (BlueprintBackendObject BlueprintBackendType) queue Queue
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BasicObject BasicType) id string'
  - ' depth 0 (BasicObject BasicType) status string'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) collection NoSQLCollection
    {database = shipping_service, collection = shipments}'
  - ' depth 0 (InterfaceObject UserType) _ .error'

.NewShippingService(ctx context.Context, queue Queue, db NoSQLDatabase):
  block 0 (Body):
  - ' depth 0 (InterfaceObject UserType) ctx context.Context'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) queue Queue'
  - ' depth 0 (BlueprintBackendObject BlueprintBackendType) db NoSQLDatabase'
