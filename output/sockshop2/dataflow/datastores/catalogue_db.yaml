CATALOGUE_DB._:
- read <result NoSQLCursor {database = catalogue, collection = catalogue} (BlueprintBackendObject)>

CATALOGUE_DB._.id:
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>

CATALOGUE_DB.Sock:
- write <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- write <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- write <ref <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}> @ FrontendService (Reference)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- write <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>

Sock:
- read <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (ArrayObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <Tags []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (SliceObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <"," string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>

string:
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
