? '[]catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string,
  ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string,
  TagString string}'
:
	- read <allSocks []catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (ArrayObject)> from <allSocks []catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (ArrayObject)>
  - read <socks []catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (ArrayObject)> from <socks []catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (ArrayObject)>

CATALOGUE_DB._:
- read <result NoSQLCursor {database = catalogue, collection = catalogue} (BlueprintBackendObject)>
- read <result NoSQLCursor {database = catalogue, collection = catalogue} (BlueprintBackendObject)>
- read <result NoSQLCursor {database = catalogue, collection = catalogue} (BlueprintBackendObject)>
- read <result NoSQLCursor {database = catalogue, collection = catalogue} (BlueprintBackendObject)>
- read <result NoSQLCursor {database = catalogue, collection = catalogue} (BlueprintBackendObject)>

CATALOGUE_DB._.id:
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>

CATALOGUE_DB.Sock:
- write <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- write <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- write <ref <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}> @ FrontendService (Reference)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- write <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>

Sock:
- read <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (ArrayObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <Tags []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (SliceObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <"," string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (ArrayObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <Tags []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (SliceObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <"," string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (ArrayObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_1 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <ImageURL_2 string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <Tags []string (FieldObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <[]string (SliceObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <TagString string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>
- read <"," string (BasicObject)> from <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} (StructObject)>

string:
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <id string (BasicObject)>
- read <id string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <ref <itemID string> @ FrontendService (Reference)> from <id string (BasicObject)>
- read <itemID string (BasicObject)> from <id string (BasicObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userid string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userid string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userid string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userid string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- read <addressid string (BasicObject)>
- read <addressid string (BasicObject)> from <addressid string (BasicObject)>
- read <ref <addressID string> @ OrderService (Reference)> from <addressid string (BasicObject)>
- read <addressID string (BasicObject)> from <addressid string (BasicObject)>
- read <ref <addressID string> @ FrontendService (Reference)> from <addressid string (BasicObject)>
- read <addressID string (BasicObject)> from <addressid string (BasicObject)>
- read <ref <addressID string> @ FrontendService (Reference)> from <addressid string (BasicObject)>
- read <addressID string (BasicObject)> from <addressid string (BasicObject)>
- read <addressid string (BasicObject)>
- read <addressid string (BasicObject)> from <addressid string (BasicObject)>
- read <ref <addressID string> @ OrderService (Reference)> from <addressid string (BasicObject)>
- read <addressID string (BasicObject)> from <addressid string (BasicObject)>
- read <ref <addressID string> @ FrontendService (Reference)> from <addressid string (BasicObject)>
- read <addressID string (BasicObject)> from <addressid string (BasicObject)>
- read <ref <addressID string> @ FrontendService (Reference)> from <addressid string (BasicObject)>
- read <addressID string (BasicObject)> from <addressid string (BasicObject)>
- read <cardid string (BasicObject)>
- read <cardid string (BasicObject)> from <cardid string (BasicObject)>
- read <ref <cardID string> @ FrontendService (Reference)> from <cardid string (BasicObject)>
- read <cardID string (BasicObject)> from <cardid string (BasicObject)>
- read <ref <cardID string> @ OrderService (Reference)> from <cardid string (BasicObject)>
- read <cardID string (BasicObject)> from <cardid string (BasicObject)>
- read <ref <cardID string> @ FrontendService (Reference)> from <cardid string (BasicObject)>
- read <cardID string (BasicObject)> from <cardid string (BasicObject)>
- read <cardid string (BasicObject)>
- read <cardid string (BasicObject)> from <cardid string (BasicObject)>
- read <ref <cardID string> @ FrontendService (Reference)> from <cardid string (BasicObject)>
- read <cardID string (BasicObject)> from <cardid string (BasicObject)>
- read <ref <cardID string> @ OrderService (Reference)> from <cardid string (BasicObject)>
- read <cardID string (BasicObject)> from <cardid string (BasicObject)>
- read <ref <cardID string> @ FrontendService (Reference)> from <cardid string (BasicObject)>
- read <cardID string (BasicObject)> from <cardid string (BasicObject)>
- read <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <ref <orderID string> @ FrontendService (Reference)> from <orderID string (BasicObject)>
- read <orderID string (BasicObject)> from <orderID string (BasicObject)>
- read <customerID string (BasicObject)>
- read <customerID string (BasicObject)> from <customerID string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <customerID string (BasicObject)>
- read <userID string (BasicObject)> from <customerID string (BasicObject)>
- read <username string (BasicObject)>
- read <username string (BasicObject)> from <username string (BasicObject)>
- read <ref <username string> @ FrontendService (Reference)> from <username string (BasicObject)>
- read <username string (BasicObject)> from <username string (BasicObject)>
