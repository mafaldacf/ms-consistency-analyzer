ORDER_DB.Order.CustomerID:
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userid string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userid string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- write <CustomerID string (FieldObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>

SHIPDB.Shipment:
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
  from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <shipment shipping.Shipment struct{ID string, Name string, Status string}>
  @ QueueMaster (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
  from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>

SHIPDB.Shipment.ID:
- write <string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <ID string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <ID string> @ OrderService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <ID string> @ OrderService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ID string (FieldObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- read <ID string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <ID string> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <ID string> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <id string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>

SHIPDB.Shipment.Name:
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userid string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userid string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- write <Name string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <Name string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <Name string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>

SHIPDB.Shipment.Status:
- write <"awaiting shipment" string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <"awaiting shipment" string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <"awaiting shipment" string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <Status "awaiting shipment" string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <Status "awaiting shipment" string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <Status "awaiting shipment" string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>

SHIPQUEUE._:
- read <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>

SHIPQUEUE.Shipment:
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
  from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <shipment shipping.Shipment struct{ID string, Name string, Status string}>
  @ QueueMaster (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
  from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string}> @ OrderService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status "awaiting
  shipment" string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>

SHIPQUEUE.Shipment.ID:
- write <string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <ID string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <ID string> @ OrderService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <ID string> @ OrderService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ID string (FieldObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- read <ID string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <ID string> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <ID string> @ OrderService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <id string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <ID string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <ID string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <id string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>

SHIPQUEUE.Shipment.Name:
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <userid string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- read <customerID string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <userid string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <ref <userID string> @ FrontendService (Reference)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <userid string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- write <customerID string (BasicObject)> from <order order.Order struct{ID string, CustomerID string, Customer user.User struct{FirstName string, LastName string, Email string, Username string, Password string, Addresses user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Cards user.Card struct{LongNum string, Expires string, CCV string, ID string}, UserID string, Salt string}, Address user.Address struct{Street string, Number string, Country string, City string, PostCode string, ID string}, Card user.Card struct{LongNum string, Expires string, CCV string, ID string}, Items []cart.Item struct{ID string, Quantity int, UnitPrice float32}, Shipment shipping.Shipment struct{ID string, Name string, Status "awaiting shipment" string}, Date string, Total 10 float32} (StructObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <userid string (BasicObject)>
- read <userid string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <customerID string> @ OrderService (Reference)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- read <ref <userID string> @ FrontendService (Reference)> from <userid string (BasicObject)>
- read <userID string (BasicObject)> from <userid string (BasicObject)>
- read <customerID string (BasicObject)> from <userid string (BasicObject)>
- write <Name string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <Name string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <Name string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>

SHIPQUEUE.Shipment.Status:
- write <"awaiting shipment" string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <"awaiting shipment" string (BasicObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <"awaiting shipment" string (BasicObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- write <Status "awaiting shipment" string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
- read <Status "awaiting shipment" string (FieldObject)> from <shipment (*shipping.Shipment struct{ID string, Name string, Status string}) (PointerObject)>
- write <Status "awaiting shipment" string (FieldObject)> from <shipment shipping.Shipment struct{ID string, Name string, Status string} (StructObject)>
