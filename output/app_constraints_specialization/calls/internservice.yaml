? (*InternServiceImpl).CreateIntern(ctx context.Context, employeeID string, internID string, mentorID string, stipend string, duration string)
:
	- DATASTORE CALL @ interns_db >> NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{}) interface{}

(*InternServiceImpl).GetIntern(ctx context.Context, internID string):
- DATASTORE CALL @ interns_db >> NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor, interface{})

.NewEmployeeServiceImpl(ctx context.Context, freelancerService app_constraints_specialization.FreelancerService, fulltimeService app_constraints_specialization.FulltimeService, internService app_constraints_specialization.InternService, employeesDB NoSQLDatabase)
:
 []

.NewFreelancerServiceImpl(ctx context.Context, freelancersDB NoSQLDatabase): []

.NewFrontendImpl(ctx context.Context, employeeService app_constraints_specialization.EmployeeService, freelancerService app_constraints_specialization.FreelancerService, fulltimeService app_constraints_specialization.FulltimeService, internService app_constraints_specialization.InternService)
:
 []

.NewFulltimeServiceImpl(ctx context.Context, fulltimesDB NoSQLDatabase): []

.NewInternServiceImpl(ctx context.Context, internsDB NoSQLDatabase): []
