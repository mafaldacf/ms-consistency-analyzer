[
  {
    "method": "(*UploadServiceImpl).UploadPost(ctx context.Context, username string, text string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "(*StorageServiceImpl).StorePost(ctx context.Context, reqID int64, post postnotification_simple.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification_simple.Creator struct{Username \"some username\" string}, Creator postnotification_simple.Creator struct{Username \"some username\" string}})",
        "depth": 1,
        "caller": "UploadService",
        "edges": [
          {
            "method": "NoSQLDatabase.NoSQLCollection.InsertOne(ctx context.Context, document interface{})",
            "depth": 2,
            "caller": "StorageService",
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context",
                  "refs": [
                    {
                      "name": "ctx",
                      "creator": "UploadService"
                    }
                  ]
                }
              },
              {
                "struct": {
                  "name": "post",
                  "type": "postnotification_simple.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification_simple.Creator struct{Username \"some username\" string}, Creator postnotification_simple.Creator struct{Username \"some username\" string}}",
                  "refs": [
                    {
                      "name": "post",
                      "creator": "UploadService"
                    }
                  ]
                }
              }
            ],
            "returns": [
              {
                "interface": {
                  "name": "err",
                  "type": ".error"
                }
              }
            ],
            "datastore": "posts_db"
          }
        ],
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "basic": {
              "name": "reqID",
              "type": "int64"
            }
          },
          {
            "struct": {
              "name": "post",
              "type": "postnotification_simple.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification_simple.Creator struct{Username \"some username\" string}, Creator postnotification_simple.Creator struct{Username \"some username\" string}}"
            },
            "struct_fields": {
              "Creator": {
                "field": {
                  "name": "Creator",
                  "type": "postnotification_simple.Creator struct{Username \"some username\" string}"
                },
                "wrapped_variable": {
                  "struct": {
                    "name": "",
                    "type": "postnotification_simple.Creator struct{Username \"some username\" string}"
                  },
                  "struct_fields": {
                    "Username": {
                      "field": {
                        "name": "Username",
                        "type": "\"some username\" string"
                      },
                      "wrapped_variable": {
                        "basic": {
                          "name": "",
                          "type": "\"some username\" string"
                        }
                      }
                    }
                  }
                }
              },
              "Mentions": {
                "field": {
                  "name": "Mentions",
                  "type": "[]string"
                },
                "wrapped_variable": {
                  "array": {
                    "name": "mentions",
                    "type": "[]string"
                  },
                  "array_elems": [
                    {
                      "basic": {
                        "name": "",
                        "type": "\"alice\" string"
                      }
                    },
                    {
                      "basic": {
                        "name": "",
                        "type": "\"bob\" string"
                      }
                    }
                  ]
                }
              },
              "PostID": {
                "field": {
                  "name": "PostID",
                  "type": "int64"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "postID",
                    "type": "int64"
                  }
                }
              },
              "ReqID": {
                "field": {
                  "name": "ReqID",
                  "type": "int64"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "reqID",
                    "type": "int64"
                  }
                }
              },
              "Text": {
                "field": {
                  "name": "Text",
                  "type": "string"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "text",
                    "type": "string"
                  }
                }
              },
              "Timestamp": {
                "field": {
                  "name": "Timestamp",
                  "type": "int64"
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "timestamp",
                    "type": "int64"
                  }
                }
              }
            }
          }
        ],
        "returns": [
          {
            "interface": {
              "name": "",
              "type": ".error"
            }
          }
        ]
      },
      {
        "method": "Queue.Push(ctx context.Context, item interface{})",
        "depth": 1,
        "caller": "UploadService",
        "params": [
          {
            "interface": {
              "name": "ctx",
              "type": "context.Context"
            }
          },
          {
            "struct": {
              "name": "message",
              "type": "postnotification_simple.Message struct{ReqID string, PostID string, Timestamp string}"
            },
            "struct_fields": {
              "PostID": {
                "field": {
                  "name": "PostID",
                  "type": "string",
                  "refs": [
                    {
                      "name": "PostID",
                      "creator": "NotifyService"
                    }
                  ]
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "",
                    "type": "string",
                    "refs": [
                      {
                        "name": "PostID",
                        "creator": "NotifyService"
                      }
                    ]
                  }
                }
              },
              "ReqID": {
                "field": {
                  "name": "ReqID",
                  "type": "string",
                  "refs": [
                    {
                      "name": "ReqID",
                      "creator": "NotifyService"
                    }
                  ]
                },
                "wrapped_variable": {
                  "basic": {
                    "name": "",
                    "type": "string",
                    "refs": [
                      {
                        "name": "ReqID",
                        "creator": "NotifyService"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "returns": [
          {
            "basic": {
              "name": "_",
              "type": "bool"
            }
          },
          {
            "interface": {
              "name": "err",
              "type": ".error"
            }
          }
        ],
        "queue_handlers": [
          {
            "method": "(*NotifyServiceImpl).workerThread(ctx context.Context, workerID int)",
            "depth": 2,
            "caller": "notifications_queue RabbitMQ",
            "edges": [
              {
                "method": "Queue.Pop(ctx context.Context, item interface{})",
                "depth": 3,
                "caller": "NotifyService",
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context"
                    }
                  },
                  {
                    "pointer": {
                      "name": "event",
                      "type": "(*map[string]interface{})"
                    },
                    "ptr_to": {
                      "map": {
                        "name": "event",
                        "type": "map[string]interface{}",
                        "refs": [
                          {
                            "name": "message",
                            "creator": "NotifyService"
                          }
                        ]
                      },
                      "key_values": [
                        {
                          "Key": {
                            "basic": {
                              "name": "",
                              "type": "\"ReqID\" string"
                            }
                          },
                          "Value": {
                            "interface": {
                              "name": "ReqID",
                              "type": "interface{}"
                            }
                          }
                        },
                        {
                          "Key": {
                            "basic": {
                              "name": "",
                              "type": "\"PostID\" string"
                            }
                          },
                          "Value": {
                            "interface": {
                              "name": "PostID",
                              "type": "interface{}"
                            }
                          }
                        },
                        {
                          "Key": {
                            "basic": {
                              "name": "",
                              "type": "\"Timestamp\" string"
                            }
                          },
                          "Value": {
                            "interface": {
                              "name": "Timestamp",
                              "type": "interface{}"
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "returns": [
                  {
                    "basic": {
                      "name": "",
                      "type": "bool"
                    }
                  },
                  {
                    "interface": {
                      "name": "",
                      "type": ".error"
                    }
                  }
                ],
                "datastore": "notifications_queue",
                "subscriber": true
              },
              {
                "method": "(*StorageServiceImpl).ReadPost(ctx context.Context, reqID int64, postID int64)",
                "depth": 3,
                "caller": "NotifyService",
                "edges": [
                  {
                    "method": "NoSQLDatabase.NoSQLCollection.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
                    "depth": 4,
                    "caller": "StorageService",
                    "params": [
                      {
                        "interface": {
                          "name": "ctx",
                          "type": "context.Context",
                          "refs": [
                            {
                              "name": "ctx",
                              "creator": "NotifyService"
                            }
                          ]
                        }
                      },
                      {
                        "slice": {
                          "name": "query",
                          "type": "primitive.D"
                        },
                        "slice_variables": [
                          {
                            "struct": {
                              "name": "",
                              "type": "struct{Key \"postid\" string, Value int64}"
                            },
                            "struct_fields": {
                              "Key": {
                                "field": {
                                  "name": "Key",
                                  "type": "\"postid\" string"
                                },
                                "wrapped_variable": {
                                  "basic": {
                                    "name": "",
                                    "type": "\"postid\" string"
                                  }
                                }
                              },
                              "Value": {
                                "field": {
                                  "name": "Value",
                                  "type": "int64"
                                },
                                "wrapped_variable": {
                                  "basic": {
                                    "name": "postID",
                                    "type": "int64",
                                    "refs": [
                                      {
                                        "name": "postID",
                                        "creator": "NotifyService"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "returns": [
                      {
                        "blueprint_backend": {
                          "name": "result",
                          "type": "NoSQLCursor {database = post, collection = post}"
                        },
                        "target_variable": {
                          "pointer": {
                            "name": "post",
                            "type": "(*postnotification_simple.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification_simple.Creator struct{Username \"some username\" string}, Creator postnotification_simple.Creator struct{Username \"some username\" string}})"
                          },
                          "ptr_to": {
                            "struct": {
                              "name": "post",
                              "type": "postnotification_simple.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification_simple.Creator struct{Username \"some username\" string}, Creator postnotification_simple.Creator struct{Username \"some username\" string}}"
                            }
                          }
                        }
                      },
                      {
                        "interface": {
                          "name": "err",
                          "type": ".error"
                        }
                      }
                    ],
                    "datastore": "posts_db"
                  }
                ],
                "params": [
                  {
                    "interface": {
                      "name": "ctx",
                      "type": "context.Context"
                    }
                  },
                  {
                    "basic": {
                      "name": "reqID",
                      "type": "int64"
                    }
                  },
                  {
                    "basic": {
                      "name": "postID",
                      "type": "int64"
                    }
                  }
                ],
                "returns": [
                  {
                    "struct": {
                      "name": "_",
                      "type": "postnotification_simple.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification_simple.Creator struct{Username \"some username\" string}, Creator postnotification_simple.Creator struct{Username \"some username\" string}}"
                    }
                  },
                  {
                    "interface": {
                      "name": "err",
                      "type": ".error"
                    }
                  }
                ]
              }
            ],
            "params": [
              {
                "interface": {
                  "name": "ctx",
                  "type": "context.Context"
                }
              },
              {
                "basic": {
                  "name": "workerID",
                  "type": "int"
                }
              }
            ]
          }
        ],
        "datastore": "notifications_queue"
      }
    ],
    "params": [
      {
        "interface": {
          "name": "ctx",
          "type": "context.Context"
        }
      },
      {
        "basic": {
          "name": "username",
          "type": "string"
        }
      },
      {
        "basic": {
          "name": "text",
          "type": "string"
        }
      }
    ]
  }
]