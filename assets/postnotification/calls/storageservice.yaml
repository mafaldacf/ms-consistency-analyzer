(*StorageServiceImpl).ReadPost(ctx context.Context, reqID int64, postID int64):
- Cache.Get(ctx context.Context, key string, value interface{}) (err, interface{})
(*StorageServiceImpl).ReadPostNoSQL(ctx context.Context, reqID int64, postID int64):
- NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor {database = "post", collection = "post"}, interface{})
(*StorageServiceImpl).StorePost(ctx context.Context, reqID int64, post postnotification.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification.Creator struct{Username string}}):
	- Cache.Put(ctx context.Context, key string, value interface{}) interface{}
(*StorageServiceImpl).StorePostNoSQL(ctx context.Context, reqID int64, post postnotification.Post struct{ReqID int64, PostID int64, Text string, Mentions []string, Timestamp int64, Creator postnotification.Creator struct{Username string}}):
	- NoSQLDatabase.InsertOne(ctx context.Context, document interface{}) interface{}
.NewNotifyServiceImpl(ctx context.Context, storageService postnotification.StorageService, queue Queue): []
.NewStorageServiceImpl(ctx context.Context, cache Cache, db NoSQLDatabase): []
.NewUploadServiceImpl(ctx context.Context, storageService postnotification.StorageService, queue Queue): []
