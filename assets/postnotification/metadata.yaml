_backend:
  _info:
    _module: github.com/blueprint-uservices/blueprint/runtime
    _package name: backend
    _package path: github.com/blueprint-uservices/blueprint/runtime/core/backend
    files (0): []
    imports (0): []
  datastore types: []
  declared types (5):
  - Cache interface { Cache.Put(ctx context.Context, key string, value interface{}),
    Cache.Get(ctx context.Context, key string, value interface{}) }
  - NoSQLCollection interface {  }
  - Queue interface { Queue.Push(ctx context.Context, item interface{}), Queue.Pop(ctx context.Context, item interface{}) }
  - NoSQLDatabase interface { NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) }
  - NoSQLCursor interface {  }
  declared variables: []
  imported types: []
  service types: []
common:
  _info:
    _module: github.com/blueprint-uservices/blueprint/examples/postnotification/workflow
    _package name: common
    _package path: github.com/blueprint-uservices/blueprint/examples/postnotification/workflow/postnotification/common
    files (1):
    - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/postnotification/workflow/postnotification/common/utils.go
    imports (1):
    - strconv
  datastore types: []
  declared types: []
  declared variables: []
  imported types (1):
  - .error
  service types: []
postnotification:
  _info:
    _module: github.com/blueprint-uservices/blueprint/examples/postnotification/workflow
    _package name: postnotification
    _package path: github.com/blueprint-uservices/blueprint/examples/postnotification/workflow/postnotification
    files (4):
    - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/postnotification/workflow/postnotification/NotifyService.go
    - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/postnotification/workflow/postnotification/StorageService.go
    - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/postnotification/workflow/postnotification/UploadService.go
    - /Users/mafaldacf/workspace/ms-consistency-analyzer/blueprint/examples/postnotification/workflow/postnotification/models.go
    imports (7):
    - strconv
    - sync
    - context
    - github.com/blueprint-uservices/blueprint/examples/postnotification/workflow/postnotification/common
    - github.com/blueprint-uservices/blueprint/runtime/core/backend
    - go.mongodb.org/mongo-driver/bson
    - math/rand
  datastore types (5):
  - NoSQLCursor interface {  }
  - Cache interface { Cache.Put(ctx context.Context, key string, value interface{}),
    Cache.Get(ctx context.Context, key string, value interface{}) }
  - NoSQLCollection interface {  }
  - Queue interface { Queue.Push(ctx context.Context, item interface{}), Queue.Pop(ctx context.Context, item interface{}) }
  - NoSQLDatabase interface { NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) }
  declared types (8):
  - postnotification.NotifyService
  - postnotification.StorageService
  - postnotification.Post struct { Timestamp int64, Creator string, ReqID int64, PostID int64, Text string }
  - postnotification.Message struct { Timestamp string, ReqID string, PostID string }
  - postnotification.NotifyServiceImpl struct { storageService postnotification.StorageService,
    queue Queue interface { Queue.Push(ctx context.Context, item interface{}), Queue.Pop(ctx context.Context, item interface{}) }, numWorkers int }
  - postnotification.UploadService
  - postnotification.StorageServiceImpl struct { cache Cache interface { Cache.Put(ctx context.Context, key string, value interface{}), Cache.Get(ctx context.Context, key string, value interface{}) }, db NoSQLDatabase interface { NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) } }
  - postnotification.UploadServiceImpl struct { storageService postnotification.StorageService,
    queue Queue interface { Queue.Push(ctx context.Context, item interface{}), Queue.Pop(ctx context.Context, item interface{}) } }
  declared variables: []
  imported types (9):
  - Queue interface { Queue.Push(ctx context.Context, item interface{}), Queue.Pop(ctx context.Context, item interface{}) }
  - NoSQLDatabase interface { NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) }
  - NoSQLCursor interface {  }
  - primitive.D
  - sync.WaitGroup
  - .error
  - context.Context
  - Cache interface { Cache.Put(ctx context.Context, key string, value interface{}),
    Cache.Get(ctx context.Context, key string, value interface{}) }
  - NoSQLCollection interface {  }
  service types (3):
  - postnotification.NotifyService
  - postnotification.StorageService
  - postnotification.UploadService
