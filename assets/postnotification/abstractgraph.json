{
  "method": "UploadService.UploadPost(ctx, username, text)",
  "caller": "Client",
  "edges": [
    {
      "method": "StorageService.StorePost(ctx, reqID, post)",
      "caller": "UploadService",
      "edges": [
        {
          "method": "Cache.Put(ctx, key, value)",
          "caller": "StorageService",
          "params": [
            {
              "variable": {
                "name": "ctx",
                "type": "context.Context",
                "id": 1,
                "ref": true
              }
            },
            {
              "variable": {
                "name": "postIDStr",
                "type": "\u003c strconv.FormatInt()",
                "id": 15
              }
            },
            {
              "variable": {
                "name": "post",
                "type": "postnotification.Post",
                "id": 10,
                "ref": true
              }
            }
          ],
          "ds_instance": {
            "name": "post_db",
            "datastore": {
              "name": "post_db",
              "type": "Cache",
              "kind": "Redis",
              "schema": null
            }
          }
        }
      ]
    },
    {
      "method": "Queue.Push(ctx, item)",
      "caller": "UploadService",
      "params": [
        {
          "variable": {
            "name": "ctx",
            "type": "context.Context",
            "id": 1,
            "ref": true
          }
        },
        {
          "variable": {
            "name": "message",
            "type": "struct postnotification.Message",
            "id": 13
          }
        }
      ],
      "queue_handlers": [
        {
          "handler": {
            "method": "NotifyService.workerThread(ctx, workerID)",
            "caller": "UploadService",
            "edges": [
              {
                "method": "Queue.Pop(ctx, item)",
                "caller": "NotifyService",
                "params": [
                  {
                    "variable": {
                      "name": "ctx",
                      "type": "context.Context",
                      "id": 16,
                      "ref": true
                    }
                  },
                  {
                    "variable": {
                      "name": "message",
                      "type": "\u0026map[string]interface{}"
                    }
                  }
                ],
                "ds_instance": {
                  "name": "notification_queue",
                  "datastore": {
                    "name": "notification_queue",
                    "type": "Queue",
                    "kind": "RabbitMQ",
                    "schema": null
                  }
                },
                "subscriber": true
              },
              {
                "method": "StorageService.ReadPost(ctx, reqID, postID)",
                "caller": "NotifyService",
                "edges": [
                  {
                    "method": "Cache.Get(ctx, key, value)",
                    "caller": "StorageService",
                    "params": [
                      {
                        "variable": {
                          "name": "ctx",
                          "type": "context.Context",
                          "id": 16,
                          "ref": true
                        }
                      },
                      {
                        "variable": {
                          "name": "postIDStr",
                          "type": "\u003c strconv.FormatInt()",
                          "id": 22
                        }
                      },
                      {
                        "variable": {
                          "name": "post",
                          "type": "\u0026postnotification.Post",
                          "id": 23
                        }
                      }
                    ],
                    "ds_instance": {
                      "name": "post_db",
                      "datastore": {
                        "name": "post_db",
                        "type": "Cache",
                        "kind": "Redis",
                        "schema": null
                      }
                    }
                  }
                ]
              }
            ]
          },
          "ds_instance": {
            "name": "notification_queue",
            "datastore": {
              "name": "notification_queue",
              "type": "Queue",
              "kind": "RabbitMQ",
              "schema": null
            }
          }
        }
      ],
      "ds_instance": {
        "name": "notification_queue",
        "datastore": {
          "name": "notification_queue",
          "type": "Queue",
          "kind": "RabbitMQ",
          "schema": null
        }
      }
    }
  ]
}