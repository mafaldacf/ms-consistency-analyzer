StorageService.ReadPost(ctx context.Context, reqID int64, postID int64):
  block 0 (Body):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - postIDStr string
  - postIDStr string
  - _ err
  - err interface{}
  - _ err
  - err interface{}
  block 1 (IfThen):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - postIDStr string
  - postIDStr string
  - _ err
  - err interface{}
  - _ err
  - err interface{}
  block 2 (IfDone):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - postIDStr string
  - postIDStr string
  - _ err
  - err interface{}
  - _ err
  - err interface{}
  block 3 (Unreachable): []
  block 4 (Unreachable): []
StorageService.ReadPostNoSQL(ctx context.Context, reqID int64, postID int64):
  block 0 (Body):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  block 1 (IfThen):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  block 2 (IfDone):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - query primitive.D
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  block 3 (Unreachable): []
  block 4 (IfThen):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - query primitive.D
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  block 5 (IfDone):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - query primitive.D
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - res bool
  - err .error
  - res bool
  - err .error
  block 6 (Unreachable): []
  block 7 (IfThen):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - query primitive.D
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - res bool
  - err .error
  - res bool
  - err .error
  block 8 (IfDone):
  - ctx context.Context
  - reqID int64
  - postID int64
  - post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - query primitive.D
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - 'result NoSQLCursor {database: "post", collection: "post"}'
  - err interface{}
  - res bool
  - err .error
  - res bool
  - err .error
  block 9 (Unreachable): []
  block 10 (Unreachable): []
StorageService.StorePost(ctx context.Context, reqID int64, post postnotification.Post struct):
  block 0 (Body):
  - ctx context.Context
  - reqID int64
  - post postnotification.Post struct
  - postIDStr string
  - postIDStr string
  block 1 (Unreachable): []
StorageService.StorePostNoSQL(ctx context.Context, reqID int64, post postnotification.Post struct):
  block 0 (Body):
  - ctx context.Context
  - reqID int64
  - post postnotification.Post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  block 1 (IfThen):
  - ctx context.Context
  - reqID int64
  - post postnotification.Post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  block 2 (IfDone):
  - ctx context.Context
  - reqID int64
  - post postnotification.Post struct
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  - 'collection NoSQLCollection {database: "post", collection: "post"}'
  - err interface{}
  block 3 (Unreachable): []
  block 4 (Unreachable): []
