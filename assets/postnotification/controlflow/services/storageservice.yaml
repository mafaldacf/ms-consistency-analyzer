(*StorageServiceImpl).ReadPost(ctx context.Context, reqID int64, postID int64):
  block 0 (Body):
  - s (*postnotification.StorageServiceImpl struct { cache Cache, db NoSQLDatabase })
  - ctx context.Context
  - reqID int64
  - postID int64
  - post postnotification.Post struct { ReqID int64, PostID int64, Text string, Timestamp int64, Creator postnotification.Creator struct { Username string } }
  - postIDStr string
  - _ bool
  - err .error
(*StorageServiceImpl).ReadPostNoSQL(ctx context.Context, reqID int64, postID int64):
  block 0 (Body):
  - s (*postnotification.StorageServiceImpl struct { cache Cache, db NoSQLDatabase })
  - ctx context.Context
  - reqID int64
  - postID int64
  - post postnotification.Post struct { ReqID int64, PostID int64, Text string, Timestamp int64, Creator postnotification.Creator struct { Username string } }
  - collection NoSQLCollection { database = "post", collection = "post" }
  - err .error
(*StorageServiceImpl).StorePost(ctx context.Context, reqID int64, post postnotification.Post struct { ReqID int64, PostID int64, Text string, Timestamp int64, Creator postnotification.Creator struct { Username string } }):
 block 0 (Body):
  - s (*postnotification.StorageServiceImpl struct { cache Cache, db NoSQLDatabase })
  - ctx context.Context
  - reqID int64
  - post postnotification.Post struct { ReqID int64, PostID int64, Text string, Timestamp int64, Creator postnotification.Creator struct { Username string } }
  - postIDStr string
(*StorageServiceImpl).StorePostNoSQL(ctx context.Context, reqID int64, post postnotification.Post struct { ReqID int64, PostID int64, Text string, Timestamp int64, Creator postnotification.Creator struct { Username string } }):
 block 0 (Body):
  - p (*postnotification.StorageServiceImpl struct { cache Cache, db NoSQLDatabase })
  - ctx context.Context
  - reqID int64
  - post postnotification.Post struct { ReqID int64, PostID int64, Text string, Timestamp int64, Creator postnotification.Creator struct { Username string } } ----> (TAINTED @ POST_NOSQL.Post)
  - collection NoSQLCollection { database = "post", collection = "post" }
  - err .error
