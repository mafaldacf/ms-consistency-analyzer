? (*catalogue.catalogueImpl).AddSock(ctx context.Context, sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}) (string, error):
 block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[8] (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [9] (inline) (Reference UserType) ref <sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}> @ FrontendService -->
       w-tainted 1x: write(catalogue_db.Sock)
  - |-
    [-1] (StructVariable UserType) sock catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string} -->
       w-tainted 1x: write(catalogue_db.Sock)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
(*catalogue.catalogueImpl).AddTags(ctx context.Context, tags []string) error:
  block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) tags []string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[0] (inline) (FieldVariable FieldType) Value []string'
  - '[0] (inline) (BasicVariable BasicType) "tags" string'
  - '[0] (inline) (FieldVariable FieldType) Key "tags" string'
  - '[0] (inline) (StructVariable StructType) struct{Key "tags" string, Value []string}'
  - '[-1] (SliceVariable UserType) update primitive.D'
  - '[-1] (SliceVariable UserType) filter primitive.D'
(*catalogue.catalogueImpl).Count(ctx context.Context, tags []string) (int, error):
  block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) tags []string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[-1] (ArrayVariable ArrayType) socks []catalogue.Sock struct{ID string, Name
    string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string,
    Price float32, Quantity int, Tags []string, TagString string}'
  - '[-1] (SliceVariable UserType) filter primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database
    = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
(*catalogue.catalogueImpl).DeleteSock(ctx context.Context, id string) error:
  block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[0] (inline) (BasicVariable BasicType) "id" string'
  - '[0] (inline) (FieldVariable FieldType) Key "id" string'
  - '[0] (inline) (FieldVariable FieldType) Value string'
  - '[0] (inline) (StructVariable StructType) struct{Key "id" string, Value string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
(*catalogue.catalogueImpl).Get(ctx context.Context, id string) (catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}, error):
 block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[73] (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService'
  - '[63] (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService'
  - '[53] (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [74] (inline) (Reference BasicType) ref <itemID string> @ FrontendService -->
       r-tainted 1x: read(catalogue_db.string)
  - |-
    [64] (inline) (Reference BasicType) ref <itemID string> @ FrontendService -->
       r-tainted 1x: read(catalogue_db.string)
  - |-
    [54] (inline) (Reference BasicType) ref <itemID string> @ FrontendService -->
       r-tainted 1x: read(catalogue_db.string)
  - |-
    [-1] (BasicVariable BasicType) id string -->
       r-tainted 1x: read(catalogue_db.string)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - |-
    [0] (inline) (FieldVariable FieldType) Value string -->
       r-tainted 1x: read(catalogue_db.Value)
  - |-
    [0] (inline) (BasicVariable BasicType) "id" string -->
       r-tainted 1x: read(catalogue_db."id" string)
  - |-
    [0] (inline) (FieldVariable FieldType) Key "id" string -->
       r-tainted 1x: read(catalogue_db.Key)
  - |-
    [0] (inline) (StructVariable StructType) struct{Key "id" string, Value string} -->
       r-tainted 1x: read(catalogue_db.struct{Key "id" string, Value string})
  - |-
    [-1] (SliceVariable UserType) query primitive.D -->
       r-tainted 7x: read(catalogue_db.document, catalogue_db.D, catalogue_db.struct{Key "id" string, Value string}, catalogue_db.Value, catalogue_db.string, catalogue_db.Key, catalogue_db."id" string)
  - '[0] (inline) (BasicVariable BasicType) "," string'
  - '[-1] (inline) (BasicVariable BasicType) TagString string'
  - '[0] (inline) (SliceVariable SliceType) []string'
  - '[-1] (inline) (FieldVariable FieldType) Tags []string'
  - '[-1] (inline) (BasicVariable BasicType) TagString string'
  - '[-1] (inline) (FieldVariable FieldType) TagString string'
  - '[-1] (inline) (BasicVariable BasicType) ImageURL_2 string'
  - '[-1] (inline) (BasicVariable BasicType) ImageURL_1 string'
  - '[0] (inline) (ArrayVariable SliceType) []string'
  - '[-1] (inline) (FieldVariable FieldType) ImageURL []string'
  - '[-1] (inline) (BasicVariable BasicType) ImageURL_2 string'
  - '[-1] (inline) (FieldVariable FieldType) ImageURL_2 string'
  - '[-1] (inline) (BasicVariable BasicType) ImageURL_1 string'
  - '[-1] (inline) (FieldVariable FieldType) ImageURL_1 string'
  - '[-1] (StructVariable UserType) sock catalogue.Sock struct{ID string, Name string,
    Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price
    float32, Quantity int, Tags []string, TagString string}'
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = catalogue, collection = catalogue} -->
       r-tainted 1x: read(catalogue_db.document)
  - '[-1] (InterfaceVariable UserType) _ .error'
(*catalogue.catalogueImpl).List(ctx context.Context, tags []string, order string, pageNum int, pageSize int) ([]catalogue.Sock struct{ID string, Name string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string, Price float32, Quantity int, Tags []string, TagString string}, error):
 block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[45] (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[46] (inline) (Reference ArrayType) ref <tags []string> @ FrontendService'
  - '[-1] (ArrayVariable ArrayType) tags []string'
  - '[47] (inline) (Reference BasicType) ref <order string> @ FrontendService'
  - '[-1] (BasicVariable BasicType) order string'
  - '[48] (inline) (Reference BasicType) ref <pageNum int> @ FrontendService'
  - '[-1] (BasicVariable BasicType) pageNum int'
  - '[49] (inline) (Reference BasicType) ref <pageSize int> @ FrontendService'
  - '[-1] (BasicVariable BasicType) pageSize int'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[-1] (ArrayVariable ArrayType) allSocks []catalogue.Sock struct{ID string, Name
    string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string,
    Price float32, Quantity int, Tags []string, TagString string}'
  - '[-1] (ArrayVariable ArrayType) socks []catalogue.Sock struct{ID string, Name
    string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string,
    Price float32, Quantity int, Tags []string, TagString string}'
  - |-
    [-1] (SliceVariable UserType) filter primitive.D -->
       r-tainted 2x: read(catalogue_db.document, catalogue_db.D)
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = catalogue, collection = catalogue} -->
       r-tainted 1x: read(catalogue_db.document)
  - '[-1] (InterfaceVariable UserType) _ .error'
(*catalogue.catalogueImpl).Tags(ctx context.Context) ([]string, error):
  block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
  - '[10] (inline) (Reference UserType) ref <ctx context.Context> @ FrontendService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) collection NoSQLCollection
    {database = catalogue, collection = catalogue}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[-1] (ArrayVariable ArrayType) socks []catalogue.Sock struct{ID string, Name
    string, Description string, ImageURL []string, ImageURL_1 string, ImageURL_2 string,
    Price float32, Quantity int, Tags []string, TagString string}'
  - '[0] (inline) (BasicVariable BasicType) true bool'
  - '[0] (inline) (FieldVariable FieldType) Value true bool'
  - '[0] (inline) (BasicVariable BasicType) "tags" string'
  - '[0] (inline) (FieldVariable FieldType) Key "tags" string'
  - '[0] (inline) (StructVariable StructType) struct{Key "tags" string, Value true
    bool}'
  - '[-1] (SliceVariable UserType) projection primitive.D'
  - |-
    [-1] (SliceVariable UserType) filter primitive.D -->
       r-tainted 2x: read(catalogue_db.document, catalogue_db.D)
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) result NoSQLCursor {database = catalogue, collection = catalogue} -->
       r-tainted 1x: read(catalogue_db.document)
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[-1] (ArrayVariable ArrayType) tags []string'
catalogue.NewCatalogueService(ctx context.Context, catalogue_db NoSQLDatabase) (catalogue.CatalogueService, error):
  block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (FieldVariable FieldType) catalogue_db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase}'
  - '[-1] (AddressVariable AddressType) c (&catalogue.catalogueImpl struct{catalogue_db
    NoSQLDatabase})'
