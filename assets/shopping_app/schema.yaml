ANALYTICS_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies:
  - order_db
  - billing_db
  - analytics_queue
- schema:
  - fields:
    - document: shopping_app.Analytics struct{UserID string, Categories []string}
  - unfolded_fields:
    - Analytics: shopping_app.Analytics struct{UserID string, Categories []string}
    - Analytics.UserID: string
    - Analytics.Categories: '[]string'
  - foreign_fields:
    - Analytics:
      - ANALYTICS_QUEUE.AnalyticsMessage.ProductCategory
      - ANALYTICS_QUEUE.AnalyticsMessage.UserID
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.UserID
    - Analytics.UserID:
      - ANALYTICS_QUEUE.AnalyticsMessage.UserID
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.UserID
    - Analytics.Categories:
      - ANALYTICS_QUEUE.AnalyticsMessage.ProductCategory
ANALYTICS_QUEUE:
- type: Queue
- kind: RabbitMQ
- dependencies:
  - order_db
  - billing_db
- schema:
  - fields:
    - message: shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string}
  - unfolded_fields:
    - AnalyticsMessage: shopping_app.AnalyticsMessage struct{UserID string, ProductCategory string}
    - AnalyticsMessage.UserID: string
    - AnalyticsMessage.ProductCategory: string
  - foreign_fields:
    - AnalyticsMessage:
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.UserID
    - AnalyticsMessage.UserID:
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.UserID
BILLING_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies:
  - order_db
  - stock_db
- schema:
  - fields:
    - document: shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost int}
  - unfolded_fields:
    - Bill: shopping_app.Bill struct{UserID string, ProductID string, Quantity int, PricePerUnit int, TotalCost int}
    - Bill.UserID: string
    - Bill.ProductID: string
    - Bill.Quantity: int
    - Bill.PricePerUnit: int
    - Bill.TotalCost: int
  - foreign_fields:
    - Bill:
      - ORDER_DB.Order.ProductID
      - ORDER_DB.Order.Quantity
      - ORDER_DB.Order.UserID
      - STOCK_DB.Stock.ProductID
      - STOCK_DB.Stock.Quantity
    - Bill.UserID:
      - ORDER_DB.Order.UserID
    - Bill.ProductID:
      - ORDER_DB.Order.ProductID
      - STOCK_DB.Stock.ProductID
    - Bill.Quantity:
      - ORDER_DB.Order.Quantity
      - STOCK_DB.Stock.Quantity
    - Bill.TotalCost:
      - ORDER_DB.Order.Quantity
      - STOCK_DB.Stock.Quantity
CART_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies: []
- schema:
  - fields:
    - document: shopping_app.Cart struct{CartID string, UserID string, ProductID string, Quantity int, PricePerUnit int, Status string}
  - unfolded_fields:
    - Cart: shopping_app.Cart struct{CartID string, UserID string, ProductID string, Quantity int, PricePerUnit int, Status string}
    - Cart.CartID: string
    - Cart.UserID: string
    - Cart.ProductID: string
    - Cart.Quantity: int
    - Cart.PricePerUnit: int
    - Cart.Status: string
  - foreign_fields: []
ORDER_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies: []
- schema:
  - fields:
    - document: shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp int64}
  - unfolded_fields:
    - Order: shopping_app.Order struct{OrderID string, UserID string, ProductID string, Quantity int, Timestamp int64}
    - Order.OrderID: string
    - Order.UserID: string
    - Order.ProductID: string
    - Order.Quantity: int
    - Order.Timestamp: int64
  - foreign_fields: []
PRODUCT_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies: []
- schema:
  - fields: []
  - unfolded_fields: []
  - foreign_fields: []
SHIPMENT_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies:
  - order_db
  - shipment_queue
  - billing_db
  - analytics_queue
- schema:
  - fields:
    - document: shopping_app.Shipment struct{OrderID string, UserID string, Status string}
  - unfolded_fields:
    - Shipment: shopping_app.Shipment struct{OrderID string, UserID string, Status string}
    - Shipment.OrderID: string
    - Shipment.UserID: string
    - Shipment.Status: string
  - foreign_fields:
    - Shipment:
      - ANALYTICS_QUEUE.AnalyticsMessage.UserID
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.OrderID
      - ORDER_DB.Order.UserID
      - SHIPMENT_QUEUE.ShipmentMessage.OrderID
      - SHIPMENT_QUEUE.ShipmentMessage.UserID
    - Shipment.OrderID:
      - ORDER_DB.Order.OrderID
      - SHIPMENT_QUEUE.ShipmentMessage.OrderID
    - Shipment.UserID:
      - ANALYTICS_QUEUE.AnalyticsMessage.UserID
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.UserID
      - SHIPMENT_QUEUE.ShipmentMessage.UserID
SHIPMENT_QUEUE:
- type: Queue
- kind: RabbitMQ
- dependencies:
  - order_db
  - billing_db
  - analytics_queue
  - analytics_db
- schema:
  - fields:
    - message: shopping_app.ShipmentMessage struct{OrderID string, UserID string}
  - unfolded_fields:
    - ShipmentMessage: shopping_app.ShipmentMessage struct{OrderID string, UserID string}
    - ShipmentMessage.OrderID: string
    - ShipmentMessage.UserID: string
  - foreign_fields:
    - ShipmentMessage:
      - ANALYTICS_DB.Analytics.UserID
      - ANALYTICS_QUEUE.AnalyticsMessage.UserID
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.OrderID
      - ORDER_DB.Order.UserID
    - ShipmentMessage.OrderID:
      - ORDER_DB.Order.OrderID
    - ShipmentMessage.UserID:
      - ANALYTICS_DB.Analytics.UserID
      - ANALYTICS_QUEUE.AnalyticsMessage.UserID
      - BILLING_DB.Bill.UserID
      - ORDER_DB.Order.UserID
STOCK_DB:
- type: NoSQLDatabase
- kind: MongoDB
- dependencies:
  - order_db
- schema:
  - fields:
    - document: shopping_app.Stock struct{ProductID string, Quantity int}
  - unfolded_fields:
    - Stock: shopping_app.Stock struct{ProductID string, Quantity int}
    - Stock.ProductID: string
    - Stock.Quantity: int
  - foreign_fields:
    - Stock:
      - ORDER_DB.Order.ProductID
      - ORDER_DB.Order.Quantity
    - Stock.ProductID:
      - ORDER_DB.Order.ProductID
    - Stock.Quantity:
      - ORDER_DB.Order.Quantity
