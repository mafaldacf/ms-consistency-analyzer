[
  {
    "method": "(*UserServiceImpl).FindByUsername(ctx context.Context, username string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "UserService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"user\", collection = \"user\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "user_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "username",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*UserServiceImpl).FindByUserID(ctx context.Context, userID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "UserService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"user\", collection = \"user\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "user_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*UserServiceImpl).DeleteUser(ctx context.Context, userID string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D)",
        "depth": 1,
        "caller": "UserService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "user_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "userID",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*UserServiceImpl).GetAllUsers(ctx context.Context)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "UserService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "type": "primitive.D"
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"user\", collection = \"user\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "user_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*UserServiceImpl).SaveUser(ctx context.Context, user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
        "depth": 1,
        "caller": "UserService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "user",
              "type": "user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "user_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "user",
          "type": "user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*UserServiceImpl).UpdateUser(ctx context.Context, user user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
        "depth": 1,
        "caller": "UserService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "user",
              "type": "user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": "bool"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "user_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "user",
          "type": "user.User struct{UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*ContactsServiceImpl).Delete(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D)",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "contacts_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "contact",
          "type": "contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*ContactsServiceImpl).GetAllContacts(ctx context.Context)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "type": "primitive.D"
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"contacts\", collection = \"contacts\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "contacts_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*ContactsServiceImpl).Modify(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "contact",
              "type": "contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": "bool"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "contacts_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "contact",
          "type": "contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*ContactsServiceImpl).FindContactsById(ctx context.Context, id string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"contacts\", collection = \"contacts\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "contacts_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "id",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*ContactsServiceImpl).FindContactsByAccountId(ctx context.Context, id string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"contacts\", collection = \"contacts\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "contacts_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "id",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*ContactsServiceImpl).CreateContacts(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"contacts\", collection = \"contacts\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "contacts_db"
      },
      {
        "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
        "depth": 1,
        "caller": "ContactsService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "contact",
              "type": "contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "contacts_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "contact",
          "type": "contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).FindByRouteIDsAndTrainTypes(ctx context.Context, rtsAndTypes []string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"priceConfig\", collection = \"priceConfig\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "rtsAndTypes",
          "type": "[]string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).GetAllPriceConfig(ctx context.Context)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "type": "primitive.D"
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"priceConfig\", collection = \"priceConfig\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).DeletePriceConfig(ctx context.Context, id string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D)",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "id",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).UpdatePriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "pc",
              "type": "price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": "bool"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "pc",
          "type": "price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).FindByID(ctx context.Context, id string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"priceConfig\", collection = \"priceConfig\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "id",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).CreateNewPriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"priceConfig\", collection = \"priceConfig\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "price_db"
      },
      {
        "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "pc",
              "type": "price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}",
              "id": -1
            },
            "struct_fields": {
              "ID": {
                "variable": {
                  "name": "ID",
                  "type": "string",
                  "id": -1
                },
                "underlying_field": {
                  "variable": {
                    "name": "ID",
                    "type": "string",
                    "id": -1
                  }
                }
              }
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "price_db"
      },
      {
        "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "pc",
              "type": "price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}",
              "id": -1
            },
            "struct_fields": {
              "ID": {
                "variable": {
                  "name": "ID",
                  "type": "string",
                  "id": -1
                },
                "underlying_field": {
                  "variable": {
                    "name": "ID",
                    "type": "string",
                    "id": -1
                  }
                }
              }
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "ok",
              "type": "bool",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "pc",
          "type": "price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*PriceServiceImpl).FindByRouteIDAndTrainType(ctx context.Context, routeID string, trainType string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "PriceService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"priceConfig\", collection = \"priceConfig\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "price_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "routeID",
          "type": "string",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "trainType",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).CreateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"station\", collection = \"station\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "station_db"
      },
      {
        "method": "NoSQLDatabase.InsertOne(ctx context.Context, document interface{})",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "station",
              "type": "station.Station struct{ID string, Name string, StayTime int64}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "station",
          "type": "station.Station struct{ID string, Name string, StayTime int64}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).Exists(ctx context.Context, name string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"station\", collection = \"station\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "name",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).UpdateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64})",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "station",
              "type": "station.Station struct{ID string, Name string, StayTime int64}",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": "bool"
            }
          },
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "station",
          "type": "station.Station struct{ID string, Name string, StayTime int64}",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).DeleteStation(ctx context.Context, id string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "type": ".error"
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "id",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).FindByID(ctx context.Context, id string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"station\", collection = \"station\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "id",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).FindByIDs(ctx context.Context, ids []string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"station\", collection = \"station\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "ids",
          "type": "[]string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).FindID(ctx context.Context, name string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"station\", collection = \"station\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "name",
          "type": "string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*StationServiceImpl).FindIDs(ctx context.Context, names []string)",
    "depth": 0,
    "caller": "Client",
    "edges": [
      {
        "method": "NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D)",
        "depth": 1,
        "caller": "StationService",
        "params": [
          {
            "variable": {
              "name": "ctx",
              "type": "context.Context",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "query",
              "type": "primitive.D",
              "id": -1
            }
          }
        ],
        "returns": [
          {
            "variable": {
              "name": "res",
              "type": "NoSQLCursor {database = \"station\", collection = \"station\"}",
              "id": -1
            }
          },
          {
            "variable": {
              "name": "err",
              "type": ".error",
              "id": -1
            }
          }
        ],
        "datastore": "station_db"
      }
    ],
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "names",
          "type": "[]string",
          "id": -1
        }
      }
    ]
  },
  {
    "method": "(*NewsServiceImpl).Hello(ctx context.Context, val string)",
    "depth": 0,
    "caller": "Client",
    "edges": null,
    "params": [
      {
        "variable": {
          "name": "ctx",
          "type": "context.Context",
          "id": -1
        }
      },
      {
        "variable": {
          "name": "val",
          "type": "string",
          "id": -1
        }
      }
    ]
  }
]