? (*station.StationServiceImpl).CreateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}) error:
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(station_db.Station.ID)
  - |-
    [-1] (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(station_db.Station.ID)
  - |-
    [-1] (StructVariable UserType) station station.Station struct{ID string, Name string, StayTime int64} -->
       w-tainted 1x: write(station_db.Station)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) st station.Station struct{ID string, Name string,
    StayTime int64}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*station.StationServiceImpl).DeleteStation(ctx context.Context, id string) error:
  block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
(*station.StationServiceImpl).Exists(ctx context.Context, name string) (bool, error):
  block 5 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) name string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "name" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) st station.Station struct{ID string, Name string,
    StayTime int64}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*station.StationServiceImpl).FindByID(ctx context.Context, id string) (station.Station struct{ID string, Name string, StayTime int64}, error):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[10] (inline) (Reference UserType) ref <ctx context.Context> @ StationService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[11] (inline) (Reference BasicType) ref <string> @ StationService'
  - '[0] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) st station.Station struct{ID string, Name string,
    StayTime int64}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*station.StationServiceImpl).FindByIDs(ctx context.Context, ids []string) ([]station.Station struct{ID string, Name string, StayTime int64}, error):
 block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[10] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) ids []string'
  - '[-1] (inline) (StructVariable UserType) st station.Station struct{ID string,
    Name string, StayTime int64}'
  - '[-1] (ArrayVariable ArrayType) stations []station.Station struct{ID string, Name
    string, StayTime int64}'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[-1] (inline) (StructVariable UserType) st station.Station struct{ID string,
    Name string, StayTime int64}'
  - '[-1] (ArrayVariable ArrayType) stations []station.Station struct{ID string, Name
    string, StayTime int64}'
(*station.StationServiceImpl).FindID(ctx context.Context, name string) (string, error):
  block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[12] (inline) (Reference UserType) ref <ctx context.Context> @ StationService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[13] (inline) (Reference BasicType) ref <string> @ StationService'
  - '[0] (BasicVariable BasicType) name string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "name" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) st station.Station struct{ID string, Name string,
    StayTime int64}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*station.StationServiceImpl).FindIDs(ctx context.Context, names []string) ([]string, error):
  block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[12] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) names []string'
  - '[-1] (inline) (BasicVariable BasicType) id string'
  - '[-1] (ArrayVariable ArrayType) ids []string'
  - '[-1] (InterfaceVariable UserType) _ .error'
  - '[-1] (inline) (BasicVariable BasicType) id string'
  - '[-1] (ArrayVariable ArrayType) ids []string'
(*station.StationServiceImpl).UpdateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}) (bool, error):
 block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) stationDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) station.StationServiceImpl struct{stationDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) s (*station.StationServiceImpl struct{stationDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (inline) (BasicVariable BasicType) ID string'
  - '[-1] (inline) (FieldVariable FieldType) ID string'
  - '[-1] (StructVariable UserType) station station.Station struct{ID string, Name
    string, StayTime int64}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = station, collection = station}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
station.NewStationServiceImpl(ctx context.Context, db NoSQLDatabase) ((*station.StationServiceImpl struct{stationDB NoSQLDatabase}), error):
 block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
