? (*station.StationServiceImpl).CreateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}) error:
 block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] ID string --> (TAINTED 1x) --> [STATION_DB.Station.ID]'
  - '[INLINE] ID string --> (TAINTED 1x) --> [STATION_DB.Station.ID]'
  - station station.Station struct{ID string, Name string, StayTime int64} --> (TAINTED 1x) --> [STATION_DB.Station]
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*station.StationServiceImpl).DeleteStation(ctx context.Context, id string) error:
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - id string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*station.StationServiceImpl).Exists(ctx context.Context, name string) (bool, error):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - name string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*station.StationServiceImpl).FindByID(ctx context.Context, id string) (station.Station struct{ID string, Name string, StayTime int64}, error):
 block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - '[INLINE] ref <ctx context.Context> @ StationService'
  - ctx context.Context
  - '[INLINE] ref <string> @ StationService'
  - id string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*station.StationServiceImpl).FindByIDs(ctx context.Context, ids []string) ([]station.Station struct{ID string, Name string, StayTime int64}, error):
 block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - ids []string
  - '[INLINE] st station.Station struct{ID string, Name string, StayTime int64}'
  - stations []station.Station struct{ID string, Name string, StayTime int64}
  - _ .error
  - '[INLINE] st station.Station struct{ID string, Name string, StayTime int64}'
  - stations []station.Station struct{ID string, Name string, StayTime int64}
(*station.StationServiceImpl).FindID(ctx context.Context, name string) (string, error):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - '[INLINE] ref <ctx context.Context> @ StationService'
  - ctx context.Context
  - '[INLINE] ref <string> @ StationService'
  - name string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*station.StationServiceImpl).FindIDs(ctx context.Context, names []string) ([]string, error):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - names []string
  - '[INLINE] id string'
  - ids []string
  - _ .error
  - '[INLINE] id string'
  - ids []string
(*station.StationServiceImpl).UpdateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}) (bool, error):
 block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] ID string'
  - '[INLINE] ID string'
  - station station.Station struct{ID string, Name string, StayTime int64}
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
station.NewStationServiceImpl(ctx context.Context, db NoSQLDatabase) ((*station.StationServiceImpl struct{stationDB NoSQLDatabase}), error):
 block 0 (Body):
  - ctx context.Context
  - db NoSQLDatabase
