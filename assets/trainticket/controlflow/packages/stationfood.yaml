(*stationfood.StationFoodServiceImpl).Cleanup(ctx context.Context) error:
  block 2 (IfDone):
  - (inline) db NoSQLDatabase
  - s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - coll NoSQLCollection {database = "stationfood", collection = "stationfood"}
  - err .error
(*stationfood.StationFoodServiceImpl).CreateFoodStore(ctx context.Context, store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}) error:
 block 8 (IfDone):
  - (inline) db NoSQLDatabase
  - s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - |-
    (inline) ID string -->
       W-TAINTED 1x = (STATIONFOOD_DB.StationFoodStore.ID)
  - |-
    (inline) ID string -->
       W-TAINTED 1x = (STATIONFOOD_DB.StationFoodStore.ID)
  - |-
    store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}} -->
       W-TAINTED 1x = (STATIONFOOD_DB.StationFoodStore)
  - coll NoSQLCollection {database = "stationfood", collection = "stationfood"}
  - err .error
  - (inline) "id" string
  - (inline) "id" string
  - (inline) struct{ "id" string, ID string}
  - query primitive.D
  - res NoSQLCursor {database = "stationfood", collection = "stationfood"}
  - err .error
  - st stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - exists bool
  - err .error
(*stationfood.StationFoodServiceImpl).GetFoodStoreByID(ctx context.Context, id string)
  (stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}, error):
 block 14 (IfDone):
  - (inline) db NoSQLDatabase
  - s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - id string
  - coll NoSQLCollection {database = "stationfood", collection = "stationfood"}
  - err .error
  - |-
    res NoSQLCursor {database = "stationfood", collection = "stationfood"} -->
       R-TAINTED 2x = (STATIONFOOD_DB.document, STATIONFOOD_DB.NoSQLCursor)
  - err .error
  - store stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - exists bool
  - err .error
(*stationfood.StationFoodServiceImpl).GetFoodStoresByStationNames(ctx context.Context, stations []string) ([]stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}, error):
 block 8 (IfDone):
  - (inline) db NoSQLDatabase
  - s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - stations []string
  - coll NoSQLCollection {database = "stationfood", collection = "stationfood"}
  - err .error
  - doc primitive.A
  - (inline) primitive.A
  - (inline) struct{ "$in" string, primitive.A}
  - (inline) primitive.D
  - (inline) primitive.D
  - (inline) struct{ "stationname" string, primitive.D}
  - query primitive.D
  - |-
    res NoSQLCursor {database = "stationfood", collection = "stationfood"} -->
       R-TAINTED 2x = (STATIONFOOD_DB.document, STATIONFOOD_DB.NoSQLCursor)
  - err .error
  - stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - err .error
(*stationfood.StationFoodServiceImpl).ListFoodStores(ctx context.Context) ([]stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}, error):
 block 8 (IfDone):
  - (inline) db NoSQLDatabase
  - s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - coll NoSQLCollection {database = "stationfood", collection = "stationfood"}
  - err .error
  - |-
    res NoSQLCursor {database = "stationfood", collection = "stationfood"} -->
       R-TAINTED 2x = (STATIONFOOD_DB.document, STATIONFOOD_DB.NoSQLCursor)
  - err .error
  - stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - err .error
(*stationfood.StationFoodServiceImpl).ListFoodStoresByStationName(ctx context.Context, station string) ([]stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}, error):
 block 8 (IfDone):
  - (inline) db NoSQLDatabase
  - s (*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - station string
  - coll NoSQLCollection {database = "stationfood", collection = "stationfood"}
  - err .error
  - (inline) string
  - (inline) struct{ "stationname" string, string}
  - query primitive.D
  - |-
    res NoSQLCursor {database = "stationfood", collection = "stationfood"} -->
       R-TAINTED 2x = (STATIONFOOD_DB.document, STATIONFOOD_DB.NoSQLCursor)
  - err .error
  - stores []stationfood.StationFoodStore struct{ID string, StationName string, StoreName string, Telephone string, BusinessTime string, DeliveryFee float64, Foods []food.Food struct{Name string, Price float64}}
  - err .error
stationfood.NewStationFoodServiceImpl(ctx context.Context, db NoSQLDatabase) ((*stationfood.StationFoodServiceImpl struct{db NoSQLDatabase}), error):
 block 0 (Body):
  - ctx context.Context
  - db NoSQLDatabase
