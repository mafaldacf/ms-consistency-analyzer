? (*price.PriceServiceImpl).CreateNewPriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}) error:
 block 12 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[8] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [9] (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(price_db.PriceConfig.ID)
  - |-
    [-1] (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(price_db.PriceConfig.ID)
  - |-
    [-1] (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} -->
       w-tainted 1x: write(price_db.PriceConfig)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) _ price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BasicVariable BasicType) ok bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*price.PriceServiceImpl).DeletePriceConfig(ctx context.Context, id string) error:
  block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
(*price.PriceServiceImpl).FindByID(ctx context.Context, id string) (price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[8] (inline) (Reference UserType) ref <ctx context.Context> @ PriceService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [9] (inline) (Reference BasicType) ref <ID string> @ PriceService -->
       w-tainted 1x: write(price_db.PriceConfig.ID)
  - '[-1] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*price.PriceServiceImpl).FindByRouteIDAndTrainType(ctx context.Context, routeID string, trainType string) (price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[1] (inline) (Reference UserType) ref <ctx context.Context> @ PriceService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[4] (inline) (BasicVariable BasicType) ":" string'
  - '[3] (inline) (BasicVariable BasicType) rt string'
  - '[2] (inline) (Reference SliceType) ref <routeid []string> @ PriceService'
  - '[-1] (BasicVariable BasicType) routeID string'
  - '[7] (inline) (BasicVariable BasicType) ":" string'
  - '[6] (inline) (BasicVariable BasicType) rt string'
  - '[5] (inline) (Reference SliceType) ref <trainType []string> @ PriceService'
  - '[-1] (BasicVariable BasicType) trainType string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "traintype" string,  string}'
  - '[0] (inline) (SliceVariable UserType) primitive.D'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "routeid" string,  string}'
  - '[0] (inline) (SliceVariable UserType) primitive.D'
  - '[0] (inline) (SliceVariable UserType) primitive.A'
  - '[0] (inline) (FieldVariable FieldType) primitive.A'
  - '[0] (inline) (StructVariable StructType) struct{ "$and" string,  primitive.A}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*price.PriceServiceImpl).FindByRouteIDsAndTrainTypes(ctx context.Context, rtsAndTypes []string) (map[string]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) rtsAndTypes []string'
  - '[-1] (inline) (StructVariable UserType) pc price.PriceConfig struct{ID string,
    TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate
    float64}'
  - '[-1] (MapVariable MapType) res map[string]price.PriceConfig struct{ID string,
    TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate
    float64}'
  - '[-1] (BasicVariable BasicType) rt string'
  - '[0] (inline) (BasicVariable BasicType) ":" string'
  - '[-1] (SliceVariable SliceType) pieces []string'
  - '[4] (inline) (BasicVariable BasicType) ":" string'
  - '[3] (inline) (BasicVariable BasicType) rt string'
  - '[2] (SliceVariable SliceType) routeid []string'
  - '[7] (inline) (BasicVariable BasicType) ":" string'
  - '[6] (inline) (BasicVariable BasicType) rt string'
  - '[5] (SliceVariable SliceType) trainType []string'
  - '[-1] (InterfaceVariable UserType) _ .error'
(*price.PriceServiceImpl).GetAllPriceConfig(ctx context.Context) ([]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 8 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (ArrayVariable ArrayType) pcs []price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*price.PriceServiceImpl).UpdatePriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}) (bool, error):
 block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) priceDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) price.PriceServiceImpl struct{priceDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*price.PriceServiceImpl struct{priceDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (inline) (BasicVariable BasicType) ID string'
  - '[-1] (inline) (FieldVariable FieldType) ID string'
  - '[-1] (StructVariable UserType) pc price.PriceConfig struct{ID string, TrainType
    string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = priceConfig, collection = priceConfig}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
price.NewPriceServiceImpl(ctx context.Context, db NoSQLDatabase) ((*price.PriceServiceImpl struct{priceDB NoSQLDatabase}), error):
 block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
