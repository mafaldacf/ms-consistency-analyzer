? (*price.PriceServiceImpl).CreateNewPriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}) error:
 block 12 (IfDone):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - ctx context.Context
  - |-
    (inline) ID string -->
       W-TAINTED 1x = (PRICE_DB.PriceConfig.ID)
  - |-
    (inline) ID string -->
       W-TAINTED 1x = (PRICE_DB.PriceConfig.ID)
  - |-
    pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64} -->
       W-TAINTED 1x = (PRICE_DB.PriceConfig)
  - coll NoSQLCollection {database = "priceConfig", collection = "priceConfig"}
  - err .error
  - _ price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - err .error
  - (inline) "id" string
  - (inline) "id" string
  - (inline) struct{ "id" string, ID string}
  - query primitive.D
  - ok bool
  - err .error
(*price.PriceServiceImpl).DeletePriceConfig(ctx context.Context, id string) error:
  block 2 (IfDone):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - ctx context.Context
  - id string
  - coll NoSQLCollection {database = "priceConfig", collection = "priceConfig"}
  - err .error
  - (inline) string
  - (inline) struct{ "id" string, string}
  - query primitive.D
(*price.PriceServiceImpl).FindByID(ctx context.Context, id string) (price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 11 (IfDone):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (inline) ref <ctx context.Context> @ PriceService
  - ctx context.Context
  - |-
    (inline) ID string -->
       W-TAINTED 1x = (PRICE_DB.PriceConfig.ID)
  - |-
    (inline) ref <ID string> @ PriceService -->
       W-TAINTED 1x = (PRICE_DB.PriceConfig.ID)
  - id string
  - coll NoSQLCollection {database = "priceConfig", collection = "priceConfig"}
  - err .error
  - (inline) string
  - (inline) struct{ "id" string, string}
  - query primitive.D
  - |-
    res NoSQLCursor {database = "priceConfig", collection = "priceConfig"} -->
       R-TAINTED 2x = (PRICE_DB.document, PRICE_DB.NoSQLCursor)
  - err .error
  - pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - exists bool
  - err .error
(*price.PriceServiceImpl).FindByRouteIDAndTrainType(ctx context.Context, routeID string, trainType string) (price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 11 (IfDone):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - (inline) ref <ctx context.Context> @ PriceService
  - ctx context.Context
  - (inline) ":" string
  - (inline) rt string
  - (inline) ref <routeid []string> @ PriceService
  - routeID string
  - (inline) ":" string
  - (inline) rt string
  - (inline) ref <trainType []string> @ PriceService
  - trainType string
  - coll NoSQLCollection {database = "priceConfig", collection = "priceConfig"}
  - err .error
  - (inline) string
  - (inline) struct{ "traintype" string, string}
  - (inline) primitive.D
  - (inline) string
  - (inline) struct{ "routeid" string, string}
  - (inline) primitive.D
  - (inline) primitive.A
  - (inline) primitive.A
  - (inline) struct{ "$and" string, primitive.A}
  - query primitive.D
  - |-
    res NoSQLCursor {database = "priceConfig", collection = "priceConfig"} -->
       R-TAINTED 2x = (PRICE_DB.document, PRICE_DB.NoSQLCursor)
  - err .error
  - pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - exists bool
  - err .error
(*price.PriceServiceImpl).FindByRouteIDsAndTrainTypes(ctx context.Context, rtsAndTypes []string) (map[string]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 0 (Body):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - ctx context.Context
  - rtsAndTypes []string
  - res map[string]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - rt string
  - (inline) ":" string
  - pieces []string
  - (inline) ":" string
  - (inline) rt string
  - routeid []string
  - (inline) ":" string
  - (inline) rt string
  - trainType []string
  - pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - _ .error
(*price.PriceServiceImpl).GetAllPriceConfig(ctx context.Context) ([]price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}, error):
 block 8 (IfDone):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - ctx context.Context
  - coll NoSQLCollection {database = "priceConfig", collection = "priceConfig"}
  - err .error
  - |-
    res NoSQLCursor {database = "priceConfig", collection = "priceConfig"} -->
       R-TAINTED 2x = (PRICE_DB.document, PRICE_DB.NoSQLCursor)
  - err .error
  - pcs []price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - err .error
(*price.PriceServiceImpl).UpdatePriceConfig(ctx context.Context, pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}) (bool, error):
 block 2 (IfDone):
  - (inline) priceDB NoSQLDatabase
  - p (*price.PriceServiceImpl struct{priceDB NoSQLDatabase})
  - ctx context.Context
  - (inline) ID string
  - (inline) ID string
  - pc price.PriceConfig struct{ID string, TrainType string, RouteID string, BasicPriceRate float64, FirstClassPriceRate float64}
  - coll NoSQLCollection {database = "priceConfig", collection = "priceConfig"}
  - err .error
  - (inline) "id" string
  - (inline) "id" string
  - (inline) struct{ "id" string, ID string}
  - query primitive.D
price.NewPriceServiceImpl(ctx context.Context, db NoSQLDatabase) ((*price.PriceServiceImpl struct{priceDB NoSQLDatabase}), error):
 block 0 (Body):
  - ctx context.Context
  - db NoSQLDatabase
