? (*assurance.AssuranceServiceImpl).Create(ctx context.Context, typeindex int64, orderid string) (assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}, error):
 block 5 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[16] (InterfaceVariable UserType) ctx context.Context'
  - '[17] (BasicVariable BasicType) typeindex int64'
  - |-
    [-1] (BasicVariable BasicType) orderid string -->
       w-tainted 1x: write(assurance_db.Assurance.OrderID)
  - |-
    [-1] (StructVariable UserType) at assurance.AssuranceType struct{Index int64, Name string, Price float64} -->
       w-tainted 1x: write(assurance_db.Assurance.AT)
  - '[-1] (InterfaceVariable UserType) err .error'
  - |-
    [-1] (BasicVariable BasicType) id string -->
       w-tainted 1x: write(assurance_db.Assurance.ID)
  - |-
    [-1] (inline) (BasicVariable BasicType) id string -->
       w-tainted 1x: write(assurance_db.Assurance.ID)
  - |-
    [-1] (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(assurance_db.Assurance.ID)
  - |-
    [-1] (inline) (StructVariable UserType) at assurance.AssuranceType struct{Index int64, Name string, Price float64} -->
       w-tainted 1x: write(assurance_db.Assurance.AT)
  - |-
    [-1] (inline) (FieldVariable FieldType) AT assurance.AssuranceType struct{Index int64, Name string, Price float64} -->
       w-tainted 1x: write(assurance_db.Assurance.AT)
  - |-
    [-1] (inline) (BasicVariable BasicType) orderid string -->
       w-tainted 1x: write(assurance_db.Assurance.OrderID)
  - |-
    [-1] (inline) (FieldVariable FieldType) OrderID string -->
       w-tainted 1x: write(assurance_db.Assurance.OrderID)
  - |-
    [-1] (StructVariable UserType) assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}} -->
       w-tainted 1x: write(assurance_db.Assurance)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*assurance.AssuranceServiceImpl).DeleteById(ctx context.Context, id string) error:
  block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
(*assurance.AssuranceServiceImpl).DeleteByOrderId(ctx context.Context, order_id string) error:
  block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) order_id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "orderid" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
(*assurance.AssuranceServiceImpl).FindAssuranceById(ctx context.Context, id string)
  (assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}, error):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[14] (inline) (Reference UserType) ref <ctx context.Context> @ AssuranceService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[15] (inline) (Reference BasicType) ref <ID string> @ AssuranceService'
  - '[-1] (BasicVariable BasicType) id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) ass assurance.Assurance struct{ID string, OrderID
    string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*assurance.AssuranceServiceImpl).FindAssuranceByOrderId(ctx context.Context, order_id string) (assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}, error):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BasicVariable BasicType) order_id string'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "orderid" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) ass assurance.Assurance struct{ID string, OrderID
    string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*assurance.AssuranceServiceImpl).GetAllAssuranceTypes(ctx context.Context) ([]assurance.AssuranceType struct{Index int64, Name string, Price float64}, error):
 block 0 (Body):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
(*assurance.AssuranceServiceImpl).GetAllAssurances(ctx context.Context) ([]assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}, error):
 block 5 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (ArrayVariable ArrayType) assurances []assurance.Assurance struct{ID string,
    OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price
    float64}}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*assurance.AssuranceServiceImpl).Modify(ctx context.Context, assurance assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}) (assurance.Assurance struct{ID string, OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}, error):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) a (*assurance.AssuranceServiceImpl struct{db
    NoSQLDatabase})'
  - '[14] (InterfaceVariable UserType) ctx context.Context'
  - '[15] (inline) (BasicVariable BasicType) ID string'
  - '[-1] (inline) (FieldVariable FieldType) ID string'
  - '[-1] (StructVariable UserType) assurance assurance.Assurance struct{ID string,
    OrderID string, AT assurance.AssuranceType struct{Index int64, Name string, Price
    float64}}'
  - '[-1] (StructVariable UserType) _ assurance.Assurance struct{ID string, OrderID
    string, AT assurance.AssuranceType struct{Index int64, Name string, Price float64}}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = assurance, collection = assurance}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BasicVariable BasicType) ok bool'
  - '[-1] (InterfaceVariable UserType) err .error'
assurance.NewAssuranceServiceImpl(ctx context.Context, db NoSQLDatabase) ((*assurance.AssuranceServiceImpl struct{db NoSQLDatabase}), error):
 block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
assurance.getAssuranceType(ctx context.Context, index int64) (assurance.AssuranceType struct{Index int64, Name string, Price float64}, error):
 block 2 (IfDone):
  - '[16] (inline) (Reference UserType) ref <ctx context.Context> @ AssuranceService'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[17] (inline) (Reference BasicType) ref <typeindex int64> @ AssuranceService'
  - '[-1] (BasicVariable BasicType) index int64'
