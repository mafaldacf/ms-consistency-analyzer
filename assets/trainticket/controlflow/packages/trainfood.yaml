(*trainfood.TrainFoodServiceImpl).Cleanup(ctx context.Context) error:
  block 2 (IfDone):
  - (inline) db NoSQLDatabase
  - t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - coll NoSQLCollection {database = "trainfood", collection = "trainfood"}
  - err .error
(*trainfood.TrainFoodServiceImpl).CreateTrainFood(ctx context.Context, tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}})
  (trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}, error):
 block 17 (IfDone):
  - (inline) db NoSQLDatabase
  - t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - |-
    (inline) TripID string -->
       W-TAINTED 1x = (TRAINFOOD_DB.TrainFood.TripID)
  - |-
    (inline) TripID string -->
       W-TAINTED 1x = (TRAINFOOD_DB.TrainFood.TripID)
  - |-
    tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} -->
       W-TAINTED 1x = (TRAINFOOD_DB.TrainFood)
  - coll NoSQLCollection {database = "trainfood", collection = "trainfood"}
  - err .error
  - (inline) "tripid" string
  - (inline) "tripid" string
  - (inline) struct{ "tripid" string, TripID string}
  - query primitive.D
  - res NoSQLCursor {database = "trainfood", collection = "trainfood"}
  - err .error
  - stored_tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}
  - exists bool
  - err .error
  - ok bool
  - err .error
(*trainfood.TrainFoodServiceImpl).ListTrainFood(ctx context.Context) ([]trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}, error):
 block 8 (IfDone):
  - (inline) db NoSQLDatabase
  - t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - coll NoSQLCollection {database = "trainfood", collection = "trainfood"}
  - err .error
  - |-
    res NoSQLCursor {database = "trainfood", collection = "trainfood"} -->
       R-TAINTED 2x = (TRAINFOOD_DB.document, TRAINFOOD_DB.NoSQLCursor)
  - err .error
  - all_foods []trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}
  - err .error
(*trainfood.TrainFoodServiceImpl).ListTrainFoodByTripID(ctx context.Context, tripid string) ([]food.Food struct{Name string, Price float64}, error):
 block 11 (IfDone):
  - (inline) db NoSQLDatabase
  - t (*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase})
  - ctx context.Context
  - tripid string
  - coll NoSQLCollection {database = "trainfood", collection = "trainfood"}
  - err .error
  - res NoSQLCursor {database = "trainfood", collection = "trainfood"}
  - err .error
  - tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}
  - exists bool
  - err .error
trainfood.NewTrainFoodServiceImpl(ctx context.Context, db NoSQLDatabase) ((*trainfood.TrainFoodServiceImpl struct{db NoSQLDatabase}), error):
 block 0 (Body):
  - ctx context.Context
  - db NoSQLDatabase
