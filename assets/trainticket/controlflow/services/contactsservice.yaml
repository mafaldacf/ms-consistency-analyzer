? (*ContactsServiceImpl).CreateContacts(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}):
 block 0 (Body):
  - '[INLINE] contactsDB NoSQLDatabase'
  - c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] AccountID string --> (TAINTED 1x) --> [CONTACTS_DB.Contact.AccountID]'
  - '[INLINE] AccountID string --> (TAINTED 1x) --> [CONTACTS_DB.Contact.AccountID]'
  - '[INLINE] DocumentType int --> (TAINTED 1x) --> [CONTACTS_DB.Contact.DocumentType]'
  - '[INLINE] DocumentType int --> (TAINTED 1x) --> [CONTACTS_DB.Contact.DocumentType]'
  - '[INLINE] DocumentNumber string --> (TAINTED 1x) --> [CONTACTS_DB.Contact.DocumentNumber]'
  - '[INLINE] DocumentNumber string --> (TAINTED 1x) --> [CONTACTS_DB.Contact.DocumentNumber]'
  - contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} --> (TAINTED 1x) --> [CONTACTS_DB.Contact]
  - coll NoSQLCollection {database = "contacts", collection = "contacts"}
  - err .error
(*ContactsServiceImpl).Delete(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}):
 block 0 (Body):
  - '[INLINE] contactsDB NoSQLDatabase'
  - c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] ID string'
  - '[INLINE] ID string'
  - contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - coll NoSQLCollection {database = "contacts", collection = "contacts"}
  - err .error
(*ContactsServiceImpl).FindContactsByAccountId(ctx context.Context, id string):
  block 0 (Body):
  - '[INLINE] contactsDB NoSQLDatabase'
  - c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - ctx context.Context
  - id string
  - account_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - coll NoSQLCollection {database = "contacts", collection = "contacts"}
  - err .error
(*ContactsServiceImpl).FindContactsById(ctx context.Context, id string):
  block 0 (Body):
  - '[INLINE] contactsDB NoSQLDatabase'
  - c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - ctx context.Context
  - id string
  - coll NoSQLCollection {database = "contacts", collection = "contacts"}
  - err .error
(*ContactsServiceImpl).GetAllContacts(ctx context.Context):
  block 0 (Body):
  - '[INLINE] contactsDB NoSQLDatabase'
  - c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - ctx context.Context
  - all_contacts []contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - coll NoSQLCollection {database = "contacts", collection = "contacts"}
  - err .error
(*ContactsServiceImpl).Modify(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}):
 block 0 (Body):
  - '[INLINE] contactsDB NoSQLDatabase'
  - c (*contacts.ContactsServiceImpl struct{contactsDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] ID string'
  - '[INLINE] ID string'
  - contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}
  - coll NoSQLCollection {database = "contacts", collection = "contacts"}
  - err .error
.NewContactsServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - ctx context.Context
  - db NoSQLDatabase
