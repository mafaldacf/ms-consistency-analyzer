? (*ContactsServiceImpl).CreateContacts(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) contactsDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (inline) (BasicVariable BasicType) DocumentType int -->
       w-tainted 1x: write(contacts_db.Contact.DocumentType)
  - |-
    [-1] (inline) (FieldVariable FieldType) DocumentType int -->
       w-tainted 1x: write(contacts_db.Contact.DocumentType)
  - |-
    [-1] (inline) (BasicVariable BasicType) DocumentNumber string -->
       w-tainted 1x: write(contacts_db.Contact.DocumentNumber)
  - |-
    [-1] (inline) (FieldVariable FieldType) DocumentNumber string -->
       w-tainted 1x: write(contacts_db.Contact.DocumentNumber)
  - |-
    [-1] (inline) (BasicVariable BasicType) AccountID string -->
       w-tainted 1x: write(contacts_db.Contact.AccountID)
  - |-
    [-1] (inline) (FieldVariable FieldType) AccountID string -->
       w-tainted 1x: write(contacts_db.Contact.AccountID)
  - |-
    [-1] (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string} -->
       w-tainted 1x: write(contacts_db.Contact)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) int'
  - '[0] (inline) (StructVariable StructType) struct{ "documenttype" string,  int}'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "documentnumber" string,  string}'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "accountid" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) existing contacts.Contact struct{ID string, AccountID
    string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*ContactsServiceImpl).Delete(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}):
 block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) contactsDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (inline) (BasicVariable BasicType) ID string'
  - '[-1] (inline) (FieldVariable FieldType) ID string'
  - '[-1] (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID
    string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
(*ContactsServiceImpl).FindContactsByAccountId(ctx context.Context, id string):
  block 8 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) contactsDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (BasicVariable BasicType) id string -->
       r-tainted 1x: read(contacts_db.string)
  - '[-1] (ArrayVariable ArrayType) account_contacts []contacts.Contact struct{ID
    string, AccountID string, Name string, DocumentType int, DocumentNumber string,
    PhoneNumber string}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - |-
    [0] (inline) (FieldVariable FieldType) string -->
       r-tainted 1x: read(contacts_db.)
  - |-
    [0] (inline) (StructVariable StructType) struct{ "accountid" string, string} -->
       r-tainted 1x: read(contacts_db.struct{ "accountid" string, string})
  - |-
    [-1] (SliceVariable UserType) query primitive.D -->
       r-tainted 5x: read(contacts_db.document, contacts_db.D, contacts_db.struct{ "accountid" string, string}, contacts_db., contacts_db.string)
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts} -->
       r-tainted 1x: read(contacts_db.document)
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (InterfaceVariable UserType) err .error'
(*ContactsServiceImpl).FindContactsById(ctx context.Context, id string):
  block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) contactsDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (BasicVariable BasicType) id string -->
       r-tainted 1x: read(contacts_db.string)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - |-
    [0] (inline) (FieldVariable FieldType) string -->
       r-tainted 1x: read(contacts_db.)
  - |-
    [0] (inline) (StructVariable StructType) struct{ "id" string, string} -->
       r-tainted 1x: read(contacts_db.struct{ "id" string, string})
  - |-
    [-1] (SliceVariable UserType) query primitive.D -->
       r-tainted 5x: read(contacts_db.document, contacts_db.D, contacts_db.struct{ "id" string, string}, contacts_db., contacts_db.string)
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts} -->
       r-tainted 1x: read(contacts_db.document)
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID
    string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*ContactsServiceImpl).GetAllContacts(ctx context.Context):
  block 8 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) contactsDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) all_contacts []contacts.Contact struct{ID string,
    AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber
    string}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = contacts, collection = contacts} -->
       r-tainted 1x: read(contacts_db.document)
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (InterfaceVariable UserType) err .error'
(*ContactsServiceImpl).Modify(ctx context.Context, contact contacts.Contact struct{ID string, AccountID string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}):
 block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) contactsDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) c (*contacts.ContactsServiceImpl struct{contactsDB
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (inline) (BasicVariable BasicType) ID string'
  - '[-1] (inline) (FieldVariable FieldType) ID string'
  - '[-1] (StructVariable UserType) contact contacts.Contact struct{ID string, AccountID
    string, Name string, DocumentType int, DocumentNumber string, PhoneNumber string}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = contacts, collection = contacts}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "id" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
.NewContactsServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
