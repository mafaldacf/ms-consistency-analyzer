(*StationServiceImpl).CreateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] ID string --> (TAINTED 1x) --> [STATION_DB.Station.ID]'
  - '[INLINE] ID string --> (TAINTED 1x) --> [STATION_DB.Station.ID]'
  - station station.Station struct{ID string, Name string, StayTime int64} --> (TAINTED 1x) --> [STATION_DB.Station]
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*StationServiceImpl).DeleteStation(ctx context.Context, id string):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - id string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*StationServiceImpl).Exists(ctx context.Context, name string):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - name string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*StationServiceImpl).FindByID(ctx context.Context, id string):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - '[INLINE] ref <ctx context.Context> @ StationService'
  - ctx context.Context
  - '[INLINE] ref <string> @ StationService'
  - id string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*StationServiceImpl).FindByIDs(ctx context.Context, ids []string):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - ids []string
  - '[INLINE] st station.Station struct{ID string, Name string, StayTime int64}'
  - stations []station.Station struct{ID string, Name string, StayTime int64}
  - _ .error
  - '[INLINE] st station.Station struct{ID string, Name string, StayTime int64}'
  - stations []station.Station struct{ID string, Name string, StayTime int64}
(*StationServiceImpl).FindID(ctx context.Context, name string):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - '[INLINE] ref <ctx context.Context> @ StationService'
  - ctx context.Context
  - '[INLINE] ref <string> @ StationService'
  - name string
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
(*StationServiceImpl).FindIDs(ctx context.Context, names []string):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - names []string
  - '[INLINE] id string'
  - ids []string
  - _ .error
  - '[INLINE] id string'
  - ids []string
(*StationServiceImpl).UpdateStation(ctx context.Context, station station.Station struct{ID string, Name string, StayTime int64}):
  block 0 (Body):
  - '[INLINE] stationDB NoSQLDatabase'
  - s (*station.StationServiceImpl struct{stationDB NoSQLDatabase})
  - ctx context.Context
  - '[INLINE] ID string'
  - '[INLINE] ID string'
  - station station.Station struct{ID string, Name string, StayTime int64}
  - coll NoSQLCollection {database = "station", collection = "station"}
  - err .error
.NewStationServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - ctx context.Context
  - db NoSQLDatabase
