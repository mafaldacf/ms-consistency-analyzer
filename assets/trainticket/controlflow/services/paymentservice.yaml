? (*PaymentServiceImpl).AddMoney(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}):
 block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase'
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) paymentDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (inline) (BasicVariable BasicType) Price string -->
       w-tainted 1x: write(money_db.Money.Price)
  - '[-1] (inline) (FieldVariable FieldType) Price string'
  - |-
    [-1] (inline) (BasicVariable BasicType) UserID string -->
       w-tainted 1x: write(money_db.Money.UserID)
  - '[-1] (inline) (FieldVariable FieldType) UserID string'
  - '[-1] (StructVariable UserType) payment payment.Payment struct{ID string, OrderID
    string, UserID string, Price string}'
  - |-
    [0] (inline) (BasicVariable BasicType) string -->
       w-tainted 1x: write(money_db.Money.ID)
  - |-
    [-1] (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(money_db.Money.ID)
  - |-
    [-1] (inline) (BasicVariable BasicType) Price string -->
       w-tainted 1x: write(money_db.Money.Price)
  - |-
    [-1] (inline) (FieldVariable FieldType) Price string -->
       w-tainted 1x: write(money_db.Money.Price)
  - |-
    [-1] (inline) (BasicVariable BasicType) UserID string -->
       w-tainted 1x: write(money_db.Money.UserID)
  - |-
    [-1] (inline) (FieldVariable FieldType) UserID string -->
       w-tainted 1x: write(money_db.Money.UserID)
  - |-
    [-1] (StructVariable UserType) m payment.Money struct{ID string, UserID string, Price string} -->
       w-tainted 1x: write(money_db.Money)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = payment, collection = money}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*PaymentServiceImpl).Cleanup(ctx context.Context):
  block 8 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase'
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) paymentDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) pay_coll NoSQLCollection
    {database = payment, collection = payment}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) money_coll NoSQLCollection
    {database = payment, collection = money}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*PaymentServiceImpl).InitPayment(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}):
 block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase'
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) paymentDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (inline) (BasicVariable BasicType) ID string -->
       w-tainted 1x: write(payments_db.Payment.ID)
  - |-
    [-1] (inline) (FieldVariable FieldType) ID string -->
       w-tainted 1x: write(payments_db.Payment.ID)
  - |-
    [-1] (StructVariable UserType) payment payment.Payment struct{ID string, OrderID string, UserID string, Price string} -->
       w-tainted 1x: write(payments_db.Payment)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = payment, collection = payment}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = payment, collection = payment}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) stored payment.Payment struct{ID string, OrderID
    string, UserID string, Price string}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*PaymentServiceImpl).Pay(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}):
 block 8 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase'
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) paymentDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (inline) (BasicVariable BasicType) OrderID string'
  - '[-1] (inline) (FieldVariable FieldType) OrderID string'
  - '[-1] (StructVariable UserType) payment payment.Payment struct{ID string, OrderID
    string, UserID string, Price string}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = payment, collection = payment}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BasicVariable BasicType) ok bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*PaymentServiceImpl).Query(ctx context.Context):
  block 5 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase'
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) paymentDB NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) p (*payment.PaymentServiceImpl struct{paymentDB
    NoSQLDatabase, moneyDB NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (ArrayVariable ArrayType) payments []payment.Payment struct{ID string, OrderID
    string, UserID string, Price string}'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = payment, collection = payment}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = payment, collection = payment}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (InterfaceVariable UserType) err .error'
.NewPaymentServiceImpl(ctx context.Context, payDB NoSQLDatabase, moneyDB NoSQLDatabase):
  block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) payDB NoSQLDatabase'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) moneyDB NoSQLDatabase'
