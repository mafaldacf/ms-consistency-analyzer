(*TrainFoodServiceImpl).Cleanup(ctx context.Context):
  block 2 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = trainfood, collection = trainfood}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*TrainFoodServiceImpl).CreateTrainFood(ctx context.Context, tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}}):
 block 17 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (inline) (BasicVariable BasicType) TripID string -->
       w-tainted 1x: write(trainfood_db.TrainFood.TripID)
  - |-
    [-1] (inline) (FieldVariable FieldType) TripID string -->
       w-tainted 1x: write(trainfood_db.TrainFood.TripID)
  - |-
    [-1] (StructVariable UserType) tf trainfood.TrainFood struct{ID string, TripID string, Foods []food.Food struct{Name string, Price float64}} -->
       w-tainted 1x: write(trainfood_db.TrainFood)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = trainfood, collection = trainfood}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[0] (inline) (FieldVariable FieldType) string'
  - '[0] (inline) (StructVariable StructType) struct{ "tripid" string,  string}'
  - '[-1] (SliceVariable UserType) query primitive.D'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database
    = trainfood, collection = trainfood}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) stored_tf trainfood.TrainFood struct{ID string,
    TripID string, Foods []food.Food struct{Name string, Price float64}}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (BasicVariable BasicType) ok bool'
  - '[-1] (InterfaceVariable UserType) err .error'
(*TrainFoodServiceImpl).ListTrainFood(ctx context.Context):
  block 8 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = trainfood, collection = trainfood}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = trainfood, collection = trainfood} -->
       r-tainted 1x: read(trainfood_db.document)
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (ArrayVariable ArrayType) all_foods []trainfood.TrainFood struct{ID string,
    TripID string, Foods []food.Food struct{Name string, Price float64}}'
  - '[-1] (InterfaceVariable UserType) err .error'
(*TrainFoodServiceImpl).ListTrainFoodByTripID(ctx context.Context, tripid string):
  block 11 (IfDone):
  - '[-1] (inline) (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
  - '[0] (inline) (StructVariable UserType) trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase}'
  - '[-1] (PointerVariable PointerType) t (*trainfood.TrainFoodServiceImpl struct{db
    NoSQLDatabase})'
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - |-
    [-1] (BasicVariable BasicType) tripid string -->
       r-tainted 1x: read(trainfood_db.string)
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) coll NoSQLCollection {database
    = trainfood, collection = trainfood}'
  - '[-1] (InterfaceVariable UserType) err .error'
  - |-
    [-1] (BlueprintBackendVariable BlueprintBackendType) res NoSQLCursor {database = trainfood, collection = trainfood} -->
       r-tainted 1x: read(trainfood_db.document)
  - '[-1] (InterfaceVariable UserType) err .error'
  - '[-1] (StructVariable UserType) tf trainfood.TrainFood struct{ID string, TripID
    string, Foods []food.Food struct{Name string, Price float64}}'
  - '[-1] (BasicVariable BasicType) exists bool'
  - '[-1] (InterfaceVariable UserType) err .error'
.NewTrainFoodServiceImpl(ctx context.Context, db NoSQLDatabase):
  block 0 (Body):
  - '[-1] (InterfaceVariable UserType) ctx context.Context'
  - '[-1] (BlueprintBackendVariable BlueprintBackendType) db NoSQLDatabase'
