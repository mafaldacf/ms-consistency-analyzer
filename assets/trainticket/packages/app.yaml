user:
- package: user
- package path: github.com/blueprint-uservices/blueprint/examples/train_ticket/workflow/user
- module: github.com/blueprint-uservices/blueprint/examples/train_ticket/workflow
- files: []
- imports:
  - context
  - errors
  - github.com/blueprint-uservices/blueprint/runtime/core/backend
  - go.mongodb.org/mongo-driver/bson
- imported types:
  - .error interface{}
  - NoSQLCollection { instance = <nil> } interface{ NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{}), NoSQLDatabase.InsertOne(ctx context.Context, document interface{}), NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D), NoSQLDatabase.DeleteMany(ctx context.Context, filter bson.D) }
  - NoSQLCursor { instance = <nil> } interface{ NoSQLDatabase.One(ctx context.Context, obj interface{}), NoSQLDatabase.All(ctx context.Context, obj interface{}) }
  - NoSQLDatabase { instance = <nil> } interface{ NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) }
  - context.Context interface{}
  - primitive.D (UNKNOWN UNDERLYING SLICE TYPE)
- declared types:
  - user.User struct { UserID string, Username string, Password string, Gender int64, DocumentType int64, DocumentNum string, Email string }
  - user.UserService
  - user.UserServiceImpl struct { userDB NoSQLDatabase { instance = <nil> } interface{ NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) } }
- service types:
  - user.UserService
- datastore types:
  - NoSQLCollection { instance = <nil> } interface{ NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D), NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{}), NoSQLDatabase.InsertOne(ctx context.Context, document interface{}), NoSQLDatabase.DeleteOne(ctx context.Context, filter bson.D), NoSQLDatabase.DeleteMany(ctx context.Context, filter bson.D) }
  - NoSQLCursor { instance = <nil> } interface{ NoSQLDatabase.One(ctx context.Context, obj interface{}), NoSQLDatabase.All(ctx context.Context, obj interface{}) }
  - NoSQLDatabase { instance = <nil> } interface{ NoSQLDatabase.GetCollection(ctx context.Context, db_name string, collection_name string) }
- declared variables: []
- parsed methods: []
