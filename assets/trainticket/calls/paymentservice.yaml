? (*PaymentServiceImpl).AddMoney(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}):
	- NoSQLDatabase.InsertOne(ctx context.Context, document interface{}) interface{}
(*PaymentServiceImpl).Cleanup(ctx context.Context):
- NoSQLDatabase.DeleteMany(ctx context.Context, filter bson.D) interface{}
- NoSQLDatabase.DeleteMany(ctx context.Context, filter bson.D) interface{}
(*PaymentServiceImpl).InitPayment(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}):
	- NoSQLDatabase.FindOne(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor {database = "assurance", collection = "assurance"}, interface{})
  - NoSQLDatabase.InsertOne(ctx context.Context, document interface{}) interface{}
(*PaymentServiceImpl).Pay(ctx context.Context, payment payment.Payment struct{ID string, OrderID string, UserID string, Price string}):
	- NoSQLDatabase.Upsert(ctx context.Context, filter bson.D, document interface{})
    (err, interface{})
(*PaymentServiceImpl).Query(ctx context.Context):
- NoSQLDatabase.FindMany(ctx context.Context, filter bson.D, projection bson.D) (NoSQLCursor {database = "assurance", collection = "assurance"}, interface{})
.NewPaymentServiceImpl(ctx context.Context, payDB NoSQLDatabase, moneyDB NoSQLDatabase): []
