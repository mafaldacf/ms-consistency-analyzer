// Package clients is auto-generated by gogen/namespacebuilder.go
//
// It provides funcs for instantiating the clients namespace.
//
// To instantiate the clients namespace, first call [NewClientLibrary] and then either call 
// [Build] or [BuildWithParent].
// 
// See [golang.NamespaceBuilder] docs for more information about the behavior of [Build]
package clients

import (
	"github.com/blueprint-uservices/blueprint/runtime/plugins/golang"
	"github.com/blueprint-uservices/blueprint/runtime/plugins/mongodb"
	"github.com/blueprint-uservices/blueprint/runtime/plugins/rabbitmq"
	"blueprint/testclients/thrift"
	"github.com/blueprint-uservices/blueprint/examples/post_notification/workflow/postnotification"
	"blueprint/testclients/http"
)

// Initializes the clients namespace by defining all of the nodes that run
// within the namespace.
//
// [Build] or [BuildWithParent] must be called on the return value of this func
// to actually build and run the nodes in the namespace.
func NewClientLibrary(name string) *golang.NamespaceBuilder {
	b := golang.NewNamespaceBuilder(name)
	set_clients_Args(b)
	set_clients_Instances(b)
	set_clients_Definitions(b)
	return b
}

// clients requires that its arguments are either:
//  - explicitly set with [golang.NamespaceBuilder.Set]
//  - passed on the command line (if built using [golang.NamespaceBuilder.Build])
//  - are defined in parent (if built using [golang.NamespaceBuilder.BuildWithParent])
//
// The following arguments will be eagerly checked and building the namespace
// will fail if they haven't been provided:
//
// The following arguments are optional and a failure will only occur if the client
// tries to build a node that needs the argument to be set
//   frontend.http.dial_addr
//   notification_queue.dial_addr
//   post_db.dial_addr
//   storage_service_service.thrift.dial_addr
func set_clients_Args(b *golang.NamespaceBuilder) {
	b.Optional("frontend.http.dial_addr", "Argument generated by Blueprint IR: frontend.http.dial_addr = AddressConfig()")
	b.Optional("notification_queue.dial_addr", "Argument generated by Blueprint IR: notification_queue.dial_addr = AddressConfig()")
	b.Optional("post_db.dial_addr", "Argument generated by Blueprint IR: post_db.dial_addr = AddressConfig()")
	b.Optional("storage_service_service.thrift.dial_addr", "Argument generated by Blueprint IR: storage_service_service.thrift.dial_addr = AddressConfig()")
}

// When the clients namespace is built it will automatically instantiate
// the following nodes:
func set_clients_Instances(b *golang.NamespaceBuilder) {
}

// The clients namespace contains definitions for instantiating
// the following nodes:
//   frontend.client
//   frontend.http_client
//   notification_queue.client
//   post_db.client
//   storage_service_service.client
//   storage_service_service.thrift_client
func set_clients_Definitions(b *golang.NamespaceBuilder) {
	b.Define("frontend.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client postnotification.Frontend
		err := n.Get("frontend.http_client", &client)
		return client, err
	})
	
	b.Define("frontend.http_client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var addr string
		if err := n.Get("frontend.http.dial_addr", &addr); err != nil {
			return nil, err
		}
		
		return http.New_Frontend_HTTPClient(n.Context(), addr)
	})
	
	b.Define("notification_queue.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var addr string
		if err := n.Get("notification_queue.dial_addr", &addr); err != nil {
			return nil, err
		}
		
		return rabbitmq.NewRabbitMQ(n.Context(), addr, "notification")
	})
	
	b.Define("post_db.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var addr string
		if err := n.Get("post_db.dial_addr", &addr); err != nil {
			return nil, err
		}
		
		return mongodb.NewMongoDB(n.Context(), addr)
	})
	
	b.Define("storage_service_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client postnotification.StorageService
		err := n.Get("storage_service_service.thrift_client", &client)
		return client, err
	})
	
	b.Define("storage_service_service.thrift_client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var addr string
		if err := n.Get("storage_service_service.thrift.dial_addr", &addr); err != nil {
			return nil, err
		}
		
		return thrift.New_StorageService_ThriftClient(n.Context(), addr)
	})
	
}
